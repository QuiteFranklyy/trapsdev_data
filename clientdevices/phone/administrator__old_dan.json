{"device":"PHONE","widgets":{"cardSortDrop":{"t":"Dropdown","lX":5,"lY":15,"sX":8.48,"sY":1,"s":"Traps Phone","ps":{"enabled":true,"scalingType":"NOVERT","width":"50% - 20px","height":"4.02%","x":"5px","y":"15px"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Sort","bold":"true","default options":"trapper,trap type,state,set time","default value":"state","color":"black"},"ev":{"clientEvents":{"outputEvents":{"sort":{"channel":"sortText/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"userFilterDrop":{"t":"Dropdown","lX":874,"lY":15,"sX":8.48,"sY":1,"s":"Traps Phone","ps":{"enabled":true,"scalingType":"NOVERT","width":"50% - 20px","height":"5.66%","x":"50% + 5px","y":"15px"},"ver":"190104c190915","dis":false,"tt":"","a":{"bold":"true","label text":"User Filter","default options":"","color":"black"},"ev":{"clientEvents":{"inputEvents":{"set Trappers":{"channel":"setFilter/append list","event":"append list","important":"false"},"Set Filter":{"channel":"setFilterSelect/receive value","event":"receive value","important":"false"}},"outputEvents":{"send filter to cards":{"channel":"filterCards/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"trapCardDesktop":{"t":"Trap","lX":0,"lY":70,"sX":17.37,"sY":7.98,"s":"Traps Phone","ps":{"enabled":true,"scalingType":"OK","width":"100%","height":"100% - 70px","x":"0px","y":"70px"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"wait for filter":"true"},"ev":{"clientEvents":{"inputEvents":{"Set animals":{"channel":"setAnimals/set animals","event":"set animals","important":"false"},"Set Trappers":{"channel":"setTrappers/set trappers","event":"set trappers","important":"false"},"Pin pressed":{"channel":"pin pressed/toggle card","event":"toggle card","important":"false"},"Set Trap Types":{"channel":"setTrapTypes/set trap type","event":"set trap type","important":"false"},"Sort":{"channel":"sortCards/sort","event":"sort","important":"false"},"Receive db info":{"channel":"cardDb/receive value","event":"receive value","important":"false"},"filter":{"channel":"filterCards/filter by trappers","event":"filter by trappers","important":"false"},"Receive sensorColl":{"channel":"cardInfo/receive value","event":"receive value","important":"true"},"toggle card":{"channel":"toggleCard/toggle card","event":"toggle card","important":"false"}},"outputEvents":{"Clear Trap":{"channel":"clearTrap/receive value","event":"clear trap","trigger":"clear trap","important":"false"},"deactivate trap":{"channel":"clearTrap/receive value","event":"deactivate trap","trigger":"deactivate trap","important":"false"},"Check trap":{"channel":"checkTrap/receive value","event":"check trap","trigger":"check trap","important":"false"},"Trap Set":{"channel":"trapSet/receive value","event":"set trap","trigger":"set trap","important":"false"},"card closed":{"channel":"cardClosed/receive value","event":"card closed","trigger":"card closed","important":"false"},"Address Pressed":{"channel":"addressPressed/receive value","event":"address pressed","trigger":"address pressed","important":"false"},"card opened":{"channel":"cardSelected/receive value","event":"card selected","trigger":"card selected","important":"false"},"Camera Pressed":{"channel":"cameraPressed/receive value","event":"photo icon pressed","trigger":"photo icon pressed","important":"false"}}}}},"cardScriptEngineDesktop":{"t":"Scripting","lX":370,"lY":190,"sX":1,"sY":1,"s":"Traps Phone","ps":{"enabled":false,"scalingType":"NOSCALE","width":"5.76%","height":"11.31%","x":"21.36%","y":"21.38%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=engine-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\nvar popupTemplate;\nvar mapPins = {};\nvar previousPin = null;\n\nScript.on(\"init\", function() {\n\n\tvar compoundQuery = [\n\t\t{\n\t\t\t\"TableName\" : \"lookups\", // Specify the primary table used to construct the join request\n\t\t\t\"Columns\" :\n\t\t\t[\n\t\t\t\t\"key\",\n\t\t\t\t\"value\",\n\t\t\t]\n\t\t }];\n\tDatabase.readComposite(\"traps\",\"lookups\", compoundQuery,  [\n\t\t{\n\t\t\t\t\"Column\": \"key\",\n\t\t\t\t\"Value\": \"animal\"\n\t\t}\n\t], function(data) {\n\t\t// Map data.\n\t\tvar valueIndex = data.value.headers.indexOf(\"value\");\n\t\tvar animals = Object.values(data.value.data).map((entry) => entry[valueIndex]);\t\t\n\t\tClientEvents.publish(\"setAnimals\", animals);\n\t});\n\t\n\tDatabase.readComposite(\"traps\", \"lookups\", compoundQuery,  [\n\t\t{\n\t\t\t\t\"Column\": \"key\",\n\t\t\t\t\"Value\": \"traptype\"\n\t\t}\n\t], function(data) {\n\t\t// Map data.\n\t\tvar valueIndex = data.value.headers.indexOf(\"value\");\n\t\tvar traptypes = Object.values(data.value.data).map((entry) => entry[valueIndex]);\t\t\n\t\tClientEvents.publish(\"setTrapTypes\", traptypes);\n\t});\n\t\n\t\n\tDatabase.readRecords(\"traps\", \"state\", function(event) {\n\t\tClientEvents.publish(\"cardDb\", event.value);\n\t\t\tDatabase.readComposite(\"traps\", \"lookups\", compoundQuery,  [\n\t\t\t\t{\n\t\t\t\t\t\t\"Column\": \"key\",\n\t\t\t\t\t\t\"Value\": \"trapper\"\n\t\t\t\t}\n\t\t\t\t], function(data) {\n\t\t\t\t\t// Map data.\n\t\t\t\t\tClientEvents.publish(\"setFilterSelect\", Client.getUser());\n\t\t\t\t\n\t\t\t\t\tvar valueIndex = data.value.headers.indexOf(\"value\");\n\t\t\t\t\tvar trappers = Object.values(data.value.data).map((entry) => entry[valueIndex]);\t\t\n\t\t\t\t\tClientEvents.publish(\"setTrappers\", trappers);\n\t\t\t\t\tClientEvents.publish(\"filterCards\", Client.getUser());\n\t\t\t\t\tvar trappersFilter = ['All', ...trappers];\n\t\t\t\t\tClientEvents.publish(\"setFilter\", trappersFilter);\n\t\t\t});\n\t});\n\t\n});\n\nvar sortDict = {\n\t\"trap type\": \"trapType\",\n\t\"trapper\": \"Trapper\",\n\t\"state\": \"state\",\n\t\"set time\": \"setTime\"\n};\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\n\tClient.toggleSidebar(true, false);\n\n\tClientEvents.subscribe(\"trapSet\", trapSet);\n\n\tClientEvents.subscribe(\"sortText\", function(event) {\n\t\tClientEvents.publish(\"sortCards\", sortDict[event.value.toLowerCase()]);\n\t});\n\t\n\tif (ClientEvents.get(\"filterCards\") !== ClientEvents.get(\"setFilterSelect\")) {\n\t    ClientEvents.publish(\"setFilterSelect\", ClientEvents.get(\"filterCards\").value);\n\t}\n\t\n\tvar cardClosed = ClientEvents.get(\"cardClosed\");\n\tvar cardSelected = ClientEvents.get(\"cardSelected\");\n\n\t// Open card if it was left open.\n\tif (cardSelected !== null && (cardClosed == null || cardSelected.value !== cardClosed.value)) {\n\t\tClientEvents.publish(\"toggleCard\", cardSelected.value, false);\n\t}\n\t\n\tClientEvents.subscribe(\"cameraPressed\", (data) => {\n\t\tScript.setState(\"camera_name\", data.value);\n\t\tClient.jumpToScreen(\"Image Viewer\")\n\t});\n\t\n\tClientEvents.subscribe(\"clearTrap\", function(event) {\n\t\tScript.publishToChannel({\n\t\t\taction: \"clear\",\n\t\t\tcategory: \"TRAPS\",\n\t\t\tclassName: event.value.model,\n\t\t\tinstance: event.value.id,\n\t\t\t\"scope\": \"STATE\",\n\t\t\tlabel: \"number\",\n\t\t\tvalue: \"0\"\n\t\t});\n\t\t\n\t\tif (event.value.cardType === \"VIRTUAL\") {\n\t\t\tvar value = {\n\t\t\t\tstate: 0,\n\t\t\t\tgeo: {\n\t\t\t\t\tlat: \"0\",\n\t\t\t\t\tlon: \"0\",\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tvar publishOptions = {\n\t\t\t\tcategory: \"TRAPS\",\n\t\t\t\tclassName: event.value.model,\n\t\t\t\tinstance: event.value.id,\n\t\t\t\tscope: \"set\",\n\t\t\t\tvalue: JSON.stringify(value)\n\t\t\t};\n\t\t\tScript.publishToChannel(publishOptions);\n\t\t}\n\t\t\n\t\t// Create db transaction\n\t\tvar dbReq = {};\n\t\tvar id = Script.generateGUID();\n\t\tevent.value[\"inc\"] = id;\n\t\tevent.value[\"action\"] = \"clear\";\n\t\tdbReq[id] = event.value;\n\t\tDatabase.saveRecord(\"traps\", \"transactions\", dbReq, function(event) {\n\t\t\tif (event.value === 0) {\n\t\t\t\talert(\"Failed to write the TRANSACTION to the write to the database.\");\n\t\t\t}\n\t\t});\t\n\n\t\t// Update StateStore for map\n\t\tvar cardInfo = Script.getState(\"cardInfo\");\n\t\tcardInfo = new SensaCollection(cardInfo.headers, cardInfo.pk, cardInfo.data);\n\t\tcardInfo.set(event.value.id, \"state\", \"0\");\n\t\tScript.setState(\"cardInfo\", cardInfo);\t\n\t});\n\n\t\n\tClientEvents.subscribe(\"checkTrap\", function(event) {\n\t\t// Create db transaction\n\t\tvar dbReq = {};\n\t\tvar id = Script.generateGUID();\n\t\tevent.value.action = \"check\";\n\t\tevent.value[\"inc\"] = id;\n\t\tdbReq[id] = event.value;\n\t\t\n\t\tDatabase.saveRecord(\"traps\", \"transactions\", dbReq, function(event) {\n\t\t\tif (event.value === 0) {\n\t\t\t\talert(\"Failed to write the TRANSACTION to the write to the database.\");\n\t\t\t}\n\t\t});\t\n\t\t\n\t\t// Update state\n\t\tvar dbAttribs = {\n\t\t\tid: event.value.id,\n\t\t\tsettime: event.value.settime,\n\t\t\ttrapper: event.value.trapper,\n\t\t\ttraptype: event.value.traptype,\n\t\t\tchecktime: event.value.checktime,\n\t\t\talert: event.value.alert,\n\t\t\tnotes: event.value.notes\n\t\t};\n\t\n\t\tvar dbStateReq = {};\n\t\tdbStateReq[event.value.id] = dbAttribs;\n\t\tDatabase.saveRecord(\"traps\", \"state\", dbStateReq, function(event) {\n\t\t\tif (event.value === 0) {\n\t\t\t\talert(\"Failed to write the STATE to the write to the database.\");\n\t\t\t}\n\t\t});\t\n\t});\t\n\t\n\tClientEvents.subscribe(\"addressPressed\", function(event) {\n\t\t// Set pressed card.\n\t\tScript.setState(\"currentPin\", event.value);\n\t\tClient.jumpToScreen(\"Map\");\n\t});\n\t\n\tScript.printStateStore();\n\t\n});\n\n\nScript.on(\"server\", function(eventData, channel) {\n\tvar dataCollection;\t\n\tif (eventData.sysmeta.label == \"sensacollection\" && typeof eventData.value == \"string\") {\n\t\tvar data = JSON.parse(eventData.value);\n\t\t\n\t\tdata.headers = data.headers.map(function(value) {\n\t\t\treturn value.toLowerCase();\n\t\t});\n\t\t \n\t\tdata.headers[0] = \"id\";\n\t\tdata.pk = \"id\";\n\t\t\n\t\tdataCollection = SensaCollection.prototype.load(data);\n\n\t\t// Send to traps card.\n\t\tClientEvents.publish(\"cardInfo\", data);\n\t\t\n\t\t// Create sensor collection object\n\t\tvar infoCollection = new SensaCollection(data.headers, data.pk, data.data);\n\t\t \n\t\tScript.setState(\"cardInfo\", infoCollection);\n\t} else {\n\t\t// Get channel id\n\t\tvar fqn = eventData.sysmeta.channel.split(\"/\");\n\t\tvar id = fqn[2];\n\t\tvar scope = fqn[3].toLowerCase();\n\n\t\tif (scope === \"state\" && eventData.value == 2) {\n\t\t\tClient.notify(\"Trapper Triggered\", {\n\t\t\t\tbody: id + \" was triggered.\",\n\t\t\t\ticon: \"/userfiles/Animal-Trap-Icon-Red.png\"\n\t\t\t});\n\t\t}\n\t\t\n\t\t// Create Sensacollection and then send to card.\n\t\tdataCollection = new SensaCollection([\"id\", scope], \"id\");\n\t\tdataCollection.addRow(id, [id, eventData.value]);\n\t\t\n\t\t//ClientEvents.publish(\"cardInfo\", col);\n\t\t\n\t\t// Update state\n\t\tvar cardInfo = Script.getState(\"cardInfo\");\n\t\tcardInfo = new SensaCollection(cardInfo.headers, cardInfo.pk, cardInfo.data);\n\t\tcardInfo.set(id, scope, eventData.value);\n\t\tScript.setState(\"cardInfo\", cardInfo);\t\t\n\t}\n\t\n\tswitch (channel.split('/')[1].toUpperCase()) {\n\t\t\tcase \"TRAILCAMERA\":\n\t\t\t\tLog.info(\"Trail info loading\");\n\t\t\t\tdataCollection.addColumn(\"cardType\", \"CAMERATRAP\");\n\t\t\t\tdataCollection.addColumn(\"model\", \"TRAILCAMERA\");\n\t\t\t\t//dataCollection.forEach()\t\t\t\t\n\t\t\t\tbreak;\n\t\t\tcase \"ATS\":\n\t\t\t\tLog.info(\"ATS2 info loading\");\n\t\t\t\tbreak;\n\t\t\tcase \"VIRTUAL\":\n\t\t\t\tLog.info(\"Virtual info loading\");\n\t\t\t\tdataCollection.addColumn(\"cardType\", \"VIRTUAL\");\n\t\t\t\tdataCollection.addColumn(\"model\", \"VIRTUAL\");\n\t\t\t\tbreak;\n\t\t\tcase \"YABBY\":\n\t\t\t\t// Send to traps card.\n\t\t\t\tLog.info(\"Yabby info loading\");\n\t\t\t\tdataCollection.addColumn(\"cardType\", \"TRAP\");\n\t\t\t\tdataCollection.addColumn(\"model\", \"YABBY\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tLog.info(\"Invalid sensor type found. Aborting load.\");\n\t\t\t\treturn;\n\t\t}\n\tClientEvents.publish(\"cardInfo\", dataCollection);\n\t\n\t// Sort cards\n\tClientEvents.publish(\"sortCards\", \"state\");\n});\n\nfunction saveFile(file) {\n\tif (!file || file.toString() !== \"[object File]\") {\n\t\treturn;\n\t}\n\tvar reader = new FileReader();\n\treader.onload = function(e) {\n\t\tif(e.currentTarget.readyState !== e.currentTarget.DONE){\n\t\t\treturn;\n\t\t}\n\t\tClient.saveImage(e.currentTarget.result, function(e) {\n\t\t\tif (e.value != e.usrmeta.fileName) {\n\t\t\t\tLog.warn(\"Unable to save file \" + e.usrmeta.fileName);\n\t\t\t}\n\t\t});\n\t};\n\treader.readAsDataURL(file);\n}\n\nfunction trapSet(event) {\n\n\tvar dbAttribs = {\n\t\tid: event.value.id,\n\t\tsettime: event.value.settime,\n\t\ttrapper: event.value.trapper,\n\t\ttraptype: event.value.traptype,\n\t\tchecktime: null,\n\t\talert: event.value.alert,\n\t\tnotes: event.value.notes,\n\t};\n\t\n\tvar dbReq = {};\n\tdbReq[event.value.id] = dbAttribs;\n\t\n\tDatabase.saveRecord(\"traps\", \"state\", dbReq, function(event) {\n\t\tif (event.value === 0) {\n\t\t\talert(\"Failed to write the STATE to the write to the database.\");\n\t\t}\n\t});\n\t\n\t\n\tif (event.value.cardType === \"VIRTUAL\") {\n\t\tvar value = {\n\t\t\tstate: event.value.state,\n\t\t\tgeo: {\n\t\t\t\tlat : event.value.lat,\n\t\t\t\tlon: event.value.lon\n\t\t\t}\n\t\t};\n\t\tvar publishOptions = {\n\t\t\tcategory: \"TRAPS\",\n\t\t\tclassName: event.value.model,\n\t\t\tinstance: event.value.id,\n\t\t\tscope: \"set\",\n\t\t\tvalue: JSON.stringify(value)\n\t\t};\n\t\tScript.publishToChannel(publishOptions);\n\t\tsaveFile(event.value.file);\n\t}\n\t\n\t// Create db transaction\n\tvar dbReq = {};\n\tvar id = Script.generateGUID();\n\tevent.value.action = \"set\";\n\tevent.value[\"inc\"] = id;\n\tdbReq[id] = event.value;\n\tDatabase.saveRecord(\"traps\", \"transactions\", dbReq, function(event) {\n\t\tif (event.value === 0) {\n\t\t\talert(\"Failed to write the TRANSACTION to the write to the database.\");\n\t\t}\n\t});\t\n\n\tScript.publishToChannel({\n\t\tcategory: \"KINECTGROUP\",\n\t\tclassName: \"BRISBANE\",\n\t\tinstance: event.value.id,\n\t\t\"scope\": \"STATE\",\n\t\tlabel: \"number\",\n\t\tvalue: \"1\"\n\t});\n\t\n\t// Update StateStore for map\n\tvar cardInfo = Script.getState(\"cardInfo\");\n\tcardInfo.set(event.value.id, \"state\", \"1\");\n\tScript.setState(\"cardInfo\", cardInfo);\n}"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"},"Yabby Data":{"channel":"traps/yabby/+/+","event":"feed","important":"false"},"Trail Camera Data":{"channel":"traps/trailcamera/+/+","event":"feed","important":"false"},"ATS Data":{"channel":"traps/ats/+/+","event":"feed","important":"false"},"Virtual":{"channel":"traps/virtual/+/+","event":"feed","important":"false"}}}}},"Maps#0":{"t":"Maps","lX":0,"lY":0,"sX":3.47,"sY":1.77,"s":"Map","ps":{"enabled":"true","scalingType":"OK","width":"100%","height":"100%","x":"0px","y":"0px"},"ver":"190104c190915","dis":false,"tt":"","a":{"zoom":"10"},"ev":{"clientEvents":{"inputEvents":{"plot pins":{"channel":"mapPins/add custom popup","event":"add custom popup","important":"false"},"Set map":{"channel":"setMap/set map","event":"set map","important":"false"}}}}},"Button#0":{"t":"Button","lX":20,"lY":1173,"sX":1.2,"sY":1.09,"s":"Map","ps":{"enabled":"true","scalingType":"OK","width":"120px","height":"50px","x":"20px","y":"100% - 80px"},"ver":"190104c190915","dis":false,"tt":"","a":{"button name":"Back","color":"orange strong"},"ev":{"clientEvents":{"outputEvents":{"pressed":{"channel":"backPressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"mapScriptMobile":{"t":"Scripting","lX":40,"lY":95,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"5.76%","height":"11.31%","x":"2.25%","y":"10.52%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\nScript.on('init', function() {\n\n});\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\t\n\tClientEvents.subscribe(\"backPressed\", function(data) {\n\t\tClient.jumpToScreen(\"Traps Phone\");\n\t});\n\t\n\tvar sensorData = Script.getState(\"cardInfo\");\n\t\n\t// check if info is empty.\n\tif (sensorData === undefined || sensorData === null) return;\n\t\n\t// Create pins to plot onto the map.\n\tvar pinTemplate = Script.getScriptElement(\"pinTemplateMobile\");\n\t\n\t// Map to sensor collection so we can filter.\n\tsensorData = new SensaCollection(sensorData.headers, sensorData.pk, sensorData.data);\n\t\n\t// Current pin selected\n\tvar selectedPin = Script.getState(\"currentPin\");\n\t\n\t// Build out pins\n\tsensorData.forEach(function(result, key) {\n\t\tvar pinContent = pinTemplate.cloneNode(true);\n\t\tpinContent.querySelector(\"[data-value='title']\").innerHTML = key;\n\t\tpinContent.querySelector(\"[data-value='id']\").innerHTML = key;\n\t\t\n\t\tif (selectedPin && selectedPin.toLowerCase() == key.toLowerCase()) {\n\t\t\tpinContent.classList.add(\"pinSelected\");\n\t\t}\n\t\t\n\t\t// Set pin state.\n\t\tvar state = +result.state;\n\t\tif (state && state == 1) {\n\t\t\tpinContent.querySelector(\"[data-value='icon']\").classList.add(\"greenIcon\");\n\t\t} else if (state == 2) {\n\t\t\tpinContent.querySelector(\"[data-value='icon']\").classList.add(\"redIcon\");\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar pin = {\n\t\t\tid: key,\n\t\t\tcontent: pinContent,\n\t\t\tloc: {\n\t\t\t    lat: parseFloat(result.lat),\n\t\t\t\tlng: parseFloat(result.lon)\n\t\t\t}\n\t\t};\n\t\t\n\t\t// Send pin to map.\n\t\tClientEvents.publish(\"mapPins\", pin, false);\n\t\tClientEvents.publish(\"setMap\", {\n\t\t    loc: {\n\t\t\t    lat: parseFloat(result.lat),\n\t\t\t\tlng: parseFloat(result.lon)\n\t\t\t}\n\t\t});\n\t  \n\t});\n\t\n\t// Map to pin structure\n\t\n\t\n});"},"ev":{"serverEvents":{"inputEvents":{}}}},"pinTemplateMobile":{"t":"Scripting","lX":200,"lY":100,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"html","code editor":"<div>\n<style>\n   /* Triggered */\n  .redIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n  }\n      \n  /* Inactive */\n  .greyIcon {\n    background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n    background-size: contain;\n    background-color: white;\n    border-radius: 5px;\n   }\n        \n   /* Set  */\n   .greenIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n   }\n    \n    .pinSelected {\n       background-color: black;   \n    }\n    \n    .main {\n      background-color: rgba(128, 128, 128, 0.7);\n      color: white;\n      border: 2px solid black;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      min-width: 140px;\n    }\n\n    .title {\n      font-size: large;\n    }\n\n    .name {\n      float: right;\n    }\n    \n    .container {\n      height: 30px;\n      position: relative; \n    }\n        \n    .vertical-center {\n      margin: 0;\n      position: absolute;\n      top: 50%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n\n</style>\n<div class=\"main pinSelected\"  onclick=\"fw.fireEvent('custom popup pressed', this.querySelector('[data-value=\\'id\\']').innerHTML);\">\n  <div class=\"container\">\n\t<div data-value=\"id\" style=\"display: none;\">--</div>\n    <div data-value=\"icon\" class=\"redIcon\" style=\"display: inline-block; width: 25px; height: 25px; margin-right: 4px;\"></div>\n    <div data-value=\"title\" class=\"title vertical-center\" style=\"display: inline-block; left: 30px;\">\n      --\n    </div>\n  </div>\n</div>\n</div>"},"ev":{}},"Image#0":{"t":"Image","lX":0,"lY":328,"sX":17.37,"sY":8.86,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"","width":"100%","height":"100%","x":"0%","y":"25% + 110px"},"ver":"202605c190915","dis":false,"tt":"","a":{"border width":"","3D shadow":"true","background":"grey","image":""},"ev":{"clientEvents":{"inputEvents":{"Set Image":{"channel":"iamge-set/set image","event":"set image","important":"false"}}}}},"Carousel#0":{"t":"Carousel","lX":0,"lY":105,"sX":17.37,"sY":2.21,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"OK","width":"100%","height":"24.97%","x":"0px","y":"110px"},"ver":"190104c190915","dis":false,"tt":"","a":{"per page":"3","focus border":"orange"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"thumb-receive/receive value","event":"receive value","important":"false"},"Clear":{"channel":"thumb-clear/clear","event":"clear","important":"false"},"Next":{"channel":"thumb-next/next","event":"next","important":"false"},"goTo":{"channel":"thumb-goTo/goTo","event":"goTo","important":"false"},"Previous":{"channel":"thumb-previous/previous","event":"previous","important":"false"},"Remove":{"channel":"thumb-remove/remove slide","event":"remove slide","important":"false"}},"outputEvents":{"Pressed":{"channel":"thumb-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"},"Changed":{"channel":"thumb-changed/receive value","event":"onChange","trigger":"onChange","important":"false"}}}}},"Container#0":{"t":"Container","lX":20,"lY":860,"sX":7.35,"sY":3.7,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"50.27%","height":"42.77%","x":"1.78%","y":"65.05%"},"ver":"190104c190915","z":"110","vis":false,"dis":false,"tt":"","a":{"title":"Photo Information","color":"grey"},"ev":{}},"Label#0":{"t":"Label","lX":845,"lY":895,"sX":6.15,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"35.61%","height":"2.89%","x":"48.87%","y":"103.24%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Time: </b>[#]"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"time-receive/receive value","event":"receive value","important":"false"}}}}},"Icon#0":{"t":"Icon","lX":0,"lY":470,"sX":0.1,"sY":0.1,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"5px","height":"9.25%","x":"0%","y":"100% - 10px"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"chevron-compact-left","outline color":"no outline","color":"orange strong","hover":"orange"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"previous-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#1":{"t":"Icon","lX":700,"lY":465,"sX":0.1,"sY":0.1,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"5px","height":"9.25%","x":"51.01%","y":"5px"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"chevron-compact-right","outline color":"no outline","color":"orange strong","hover":"orange"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"next-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#3":{"t":"Icon","lX":1079,"lY":20,"sX":3.47,"sY":3.47,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"10%","height":"20%","x":"68%","y":"20px"},"ver":"200628c190915","dis":false,"tt":"Archive","a":{"icon file":"archive","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"archive-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"archive-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#4":{"t":"Icon","lX":1455,"lY":20,"sX":3.47,"sY":3.47,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"10%","height":"20%","x":"90%","y":"20px"},"ver":"200628c190915","dis":false,"tt":"Delete","a":{"icon file":"trash","outline color":"no outline","color":"red"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"delete-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#5":{"t":"Icon","lX":890,"lY":20,"sX":3.47,"sY":3.47,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"10%","height":"20%","x":"57%","y":"20px"},"ver":"200628c190915","dis":false,"tt":"Favourite","a":{"icon file":"star","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"favourite-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"favourite-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#2":{"t":"Icon","lX":710,"lY":1050,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.44%","height":"3.82%","x":"29.95%","y":"83.74%"},"ver":"200628c190915","vis":false,"dis":false,"tt":"save","a":{"outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"save-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#7":{"t":"Icon","lX":710,"lY":1115,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.44%","height":"3.82%","x":"30%","y":"87.3%"},"ver":"200628c190915","vis":false,"dis":false,"tt":"clear","a":{"outline color":"no outline","icon file":"x"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"clear-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#8":{"t":"Icon","lX":1181,"lY":20,"sX":3.47,"sY":3.47,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"10%","height":"20%","x":"79%","y":"20px"},"ver":"200628c190915","dis":false,"tt":"Download","a":{"icon file":"download","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"download-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"image-tags":{"t":"Input","lX":30,"lY":965,"sX":6.65,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"45.49%","height":"6.13%","x":"2.19%","y":"78.32%"},"ver":"270520c190915","vis":false,"dis":false,"tt":"","a":{"label text":"Tags","bold":"true","form id":"image-tagging","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"tags-receive/receive value","event":"receive value","important":"false"}}}}},"image-comments":{"t":"Text Area","lX":30,"lY":1020,"sX":6.65,"sY":1.25,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"45.49%","height":"14.45%","x":"2.05%","y":"82.61%"},"ver":"190104c190915","vis":false,"dis":false,"tt":"","a":{"bold":"true","label text":"Comments","form id":"image-tagging","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"comments-receive/receive value","event":"receive value","important":"false"}}}}},"Label#2":{"t":"Label","lX":35,"lY":915,"sX":6.45,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"44.12%","height":"2.89%","x":"2.74%","y":"73.62%"},"ver":"200124c190915","z":"110","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Address:&nbsp;</b>[#]"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"address-receive/receive value","event":"receive value","important":"false"}}}}},"Input#0":{"t":"Input","lX":0,"lY":0,"sX":4,"sY":1,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOVERT","width":"23%","height":"6.13%","x":"0%","y":"0px"},"ver":"270520c190915","dis":false,"tt":"","a":{"type":"number","default value":"1","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"file-index-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"On Change":{"channel":"file-index-change/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"Label#3":{"t":"Label","lX":342,"lY":20,"sX":4,"sY":1,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"OK","width":"23%","height":"25px","x":"23%","y":"20px"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<b><font size=\"4\">of [#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"file-count-receive/receive value","event":"receive value","important":"false"}}}}},"Icon#9":{"t":"Icon","lX":788,"lY":20,"sX":3.47,"sY":3.47,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOHORIZ,NOVERT","width":"10%","height":"20%","x":"46%","y":"20px"},"ver":"200628c190915","dis":false,"tt":"View Video","a":{"icon file":"camera-video","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"video-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"video-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Label#4":{"t":"Label","lX":35,"lY":875,"sX":6.45,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"44.12%","height":"2.89%","x":"2.87%","y":"70.39%"},"ver":"200124c190915","z":"110","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Filename:&nbsp;</b>[#]<b>&nbsp;</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"filename-receive/receive value","event":"receive value","important":"false"}}}}},"Label#5":{"t":"Label","lX":40,"lY":895,"sX":6.45,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"44.12%","height":"2.89%","x":"2.39%","y":"72.33%"},"ver":"200124c190915","z":"110","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Camera Name:&nbsp;</b>[#]<b>&nbsp;</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"camera-name-receive/receive value","event":"receive value","important":"false"}}}}},"Label#6":{"t":"Label","lX":35,"lY":935,"sX":6.45,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"44.12%","height":"2.89%","x":"2.53%","y":"75.73%"},"ver":"200124c190915","z":"110","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Customer:&nbsp;</b>[#]<b>&nbsp;</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"customer-receive/receive value","event":"receive value","important":"false"}}}}},"Dropdown#0":{"t":"Dropdown","lX":0,"lY":55,"sX":17.37,"sY":1,"s":"Image Viewer","ps":{"enabled":"true","scalingType":"NOVERT","width":"100%","height":"5.78%","x":"0px","y":"55px "},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"bold":"true","label text":"Filter By","default options":"All,Favourite,Archived,Not Viewed","default value":"All"},"ev":{"clientEvents":{"inputEvents":{"Reset":{"channel":"filter-reset/reset default","event":"reset default","important":"false"}},"outputEvents":{"Selected":{"channel":"filter-selected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Label#7":{"t":"Label","lX":35,"lY":855,"sX":6.15,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"42.07%","height":"2.89%","x":"2.94%","y":"69.26%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"font size":"14","label text":"<b>Date: </b>[#]<br>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"date-receive/receive value","event":"receive value","important":"false"}}}}},"Scripting#1":{"t":"Scripting","lX":570,"lY":35,"sX":1,"sY":1,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOSCALE","width":"4.22%","height":"8.09%","x":"47.19%","y":"6.88%"},"ver":"200124c190915","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"//# sourceURL=lookups-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n// Get list of tables in lookups DB\nfunction get_lookup_tables() {\n\tDatabase.listTables(\"lookup\");\n}\n\n\nfunction get_dropdown_value () {\n\tdebugger;\n    var formData = Script.getForm(\"lookup-form\");\n    var option = formData[\"lookup-dropdown\"];\n    if (typeof option !== \"string\" && !(option instanceof String)) {\n        option = \"\";\n    }\n    return option;\n}\n\nfunction create_dummy_data() {\n\tDatabase.saveRecord(\"lookup\", \"animals\", {\"x\": {\"key\": \"x\",\"value\": \"1\"}});\n}\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n    \n    // Load lookups database;\n    get_lookup_tables();\n\t//create_dummy_data();\n\t\n    //Get value is lookup-dropdown and set title of Table\n    var option = get_dropdown_value();\n    if (option) {\n        ClientEvents.publish(\"lookup-table-set-title\", option);\n\t\tDatabase.readRecords(\"lookup\", option.toLowerCase(), \"*\", \"\", \"ORDER by key COLLATE NOCASE ASC\");\n    }\n\t\n\tClientEvents.subscribe(\"lookup-table-pressed\", function(eventData, channel) {\n\t\tObject.keys(eventData.value.data).forEach(function (item, index, array) {\n\t\t\tif (array.length !== 1) {\n\t\t\t\tthrow new Error(\"Something went wrong \" + String.fromCodePoint(0x1F641));\n\t\t\t}\n\t\t\tClientEvents.publish(\"lookup-key-receive\", item);\n\t\t\tClientEvents.publish(\"lookup-value-receive\", eventData.value.data[item][eventData.value.data[item].length - 1]);\n\t\t});\n\t});\n\t\n\tClientEvents.subscribe(\"lookup-clear-pressed\", function(eventData, channel) {\n\t\tClientEvents.publish(\"lookup-key-receive\", \"\");\n\t\tClientEvents.publish(\"lookup-value-receive\", \"\");\n\t});\n\t\n\tClientEvents.subscribe(\"lookup-save-pressed\", function(eventData, channel) {\n\t\tvar option = get_dropdown_value();\n\t\tif (option === \"\") {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\tvar formData = Script.getForm(\"lookup-form\");\n\t\tif (formData.constructor !== Object) {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\tvar key = formData[\"lookup-key\"];\n\t\tvar value = formData[\"lookup-value\"];\n\t\t\n\t\tif (typeof key !== \"string\" && !(key instanceof String)) {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (typeof value !== \"string\" && !(key instanceof String)) {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tvar obj = {};\n\t\tobj.key = key;\n\t\tobj.value = value;\n\t\tvar DBReq = {};\n\t\tDBReq[key] = obj;\n\t\tDatabase.saveRecord(\"lookup\", option.toLowerCase(), DBReq);\n\t});\n\t\n\tClientEvents.subscribe(\"lookup-delete-pressed\", function(eventData, channel) {\n\t\tvar option = get_dropdown_value();\n\t\tif (option === \"\") {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\tvar formData = Script.getForm(\"lookup-form\");\n\t\tif (formData[\"lookup-table\"] === undefined) {\n\t\t\tconsole.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n\t\t}\n\t\tvar data;\n\t\tvar obj = formData[\"lookup-table\"];\n\t\tif (obj.data !== undefined && Object.prototype.toString.call(obj.data) === \"[object Object]\") {\n\t\t\tdata = obj.data;\n\t\t}\n\t\t\n\t\tObject.keys(data).forEach(function (key, index, array) {\n\t\t\tDatabase.deleteRecord(\"lookup\", option.toLowerCase(), \"key\", key);\n\t\t\tClientEvents.publish(\"lookup-key-receive\", \"\");\n\t\t\tClientEvents.publish(\"lookup-value-receive\", \"\");\n\t\t});\n\t});\n\t\n    // Populate table with lookup table option\n    ClientEvents.subscribe(\"lookup-table-selected\", function (eventData, channel) {\n        var option = eventData.value;\n        if (typeof option !== \"string\" && !(option instanceof String)) {\n            console.error(String.fromCodePoint(0x1F641));\n\t\t\treturn false;\n        }\n        if (option) {\n\t\t\tClientEvents.publish(\"lookup-table-clear\");\n            ClientEvents.publish(\"lookup-table-set-title\", option);\n\t\t\tDatabase.readRecords(\"lookup\", option.toLowerCase(), \"*\", \"\", \"ORDER BY key COLLATE NOCASE ASC\");\n        }\n    });\n\n});\n\n/**\n * Response to message from server channel\n */\nScript.on('server', function(eventData) {\n\tvar sysmeta = eventData.sysmeta;\n\tvar usrmeta = eventData.usrmeta;\n\tvar value = eventData.value;\n\t\n\tswitch(sysmeta.channel.toUpperCase()) {\n\t\t\tcase \"$DB/ADMIN/MANAGE/RESPONSE\":\n\t\t\t\tif (usrmeta.func.toUpperCase() === \"LISTTABLES\") {\n\t\t\t\t\tClientEvents.publish(\"lookup-dropdown-recveive-list\", value);\n\t\t\t\t\tClientEvents.publish(\"lookup-table-set-title\", value[0]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (usrmeta.func.toUpperCase() === \"SAVERECS\" && value === 1) {\n\t\t\t\t\tClientEvents.publish(\"lookup-table-clear\");\n\t\t\t\t\tDatabase.readRecords(usrmeta.dbName, usrmeta.dbTable, \"*\", \"\", \"ORDER BY key COLLATE NOCASE ASC\");\n\t\t\t\t}\n\t\t\t\tif (usrmeta.func.toUpperCase() === \"DELETEREC\" && value === 1) {\n\t\t\t\t\tClientEvents.publish(\"lookup-table-clear\");\n\t\t\t\t\tDatabase.readRecords(usrmeta.dbName, usrmeta.dbTable, \"*\", \"\", \"ORDER BY key COLLATE NOCASE ASC\");\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n});"},"ev":{}},"Container#1":{"t":"Container","lX":0,"lY":0,"sX":5.05,"sY":7.9,"s":"Lookups","ps":{"enabled":"false","scalingType":"OK","width":"21.34%","height":"63.92%","x":"0%","y":"0%"},"ver":"190104c190915","z":"110","dis":false,"a":{"color":"grey","title":"Manage Lookup Data"},"ev":{}},"Icon#11":{"t":"Icon","lX":410,"lY":735,"sX":0.7,"sY":0.7,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.48%","height":"2.83%","x":"1.52%","y":"58.98%"},"ver":"200628c190915","dis":false,"a":{"outline color":"no outline","icon file":"trash","color":"red"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"lookup-delete-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"lookup-key":{"t":"Input","lX":20,"lY":660,"sX":2.25,"sY":1,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.51%","height":"4.29%","x":"1.06%","y":"53.4%"},"ver":"270520c190915","dis":false,"a":{"bold":"true","label text":"Key","form id":"lookup-form"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"lookup-key-receive/receive value","event":"receive value","important":"false"}}}}},"lookup-value":{"t":"Input","lX":265,"lY":660,"sX":2.2,"sY":1,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.29%","height":"4.29%","x":"11.15%","y":"53.4%"},"ver":"270520c190915","dis":false,"a":{"bold":"true","label text":"Value","form id":"lookup-form"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"lookup-value-receive/receive value","event":"receive value","important":"false"}}}}},"lookup-dropdown":{"t":"Dropdown","lX":15,"lY":70,"sX":4.65,"sY":1,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOVERT","width":"19.65%","height":"4.05%","x":"0.63%","y":"5.66%"},"ver":"190104c190915","dis":false,"a":{"label text":"Lookup Table","bold":"true","form id":"lookup-form","default options":""},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"lookup-dropdown-receive-list/receive list","event":"receive list","important":"false"}},"outputEvents":{"Selected":{"channel":"lookup-dropdown-selected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"lookup-clear":{"t":"Icon","lX":40,"lY":735,"sX":0.7,"sY":0.7,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.48%","height":"2.83%","x":"1.77%","y":"59.55%"},"ver":"200628c190915","dis":false,"a":{"outline color":"no outline","icon file":"x","color":"black"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"lookup-clear-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"lookup-save":{"t":"Icon","lX":225,"lY":735,"sX":0.7,"sY":0.7,"s":"Lookups","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.48%","height":"2.83%","x":"9.59%","y":"59.55%"},"ver":"200628c190915","dis":false,"a":{"outline color":"no outline","color":"black"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"lookup-save-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"lookup-table":{"t":"Table","lX":20,"lY":135,"sX":4.55,"sY":5,"s":"Lookups","ps":{"enabled":"false","scalingType":"OK","width":"19.22%","height":"40.45%","x":"0.93%","y":"10.92%"},"ver":"190104c190915","dis":false,"a":{"columns":"key,value","selectable":"single","text color":"#000000","row color":"#000000","form id":"lookup-form","colWidths":""},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"lookup-table-receive/receive value","event":"receive value","important":"false"},"Clear":{"channel":"lookup-table-clear/delete all rows","event":"delete all rows","important":"false"},"Set Title":{"channel":"lookup-table-set-title/set title","event":"set title","important":"false"}},"outputEvents":{"Pressed":{"channel":"lookup-table-selected/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Table#1":{"t":"Table","lX":0,"lY":0,"sX":17.27,"sY":8.65,"s":"Camera Table","ps":{"enabled":"true","scalingType":"OK","width":"100%","height":"100%","x":"0%","y":"0%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"thumbnail,camera,date time,viewed","colWidths":"0.28231884057971013,0.24753623188405796,0.29391304347826086,0.17623188405797102"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"camera-table-receive/receive value","event":"receive value","important":"false"},"clear":{"channel":"camera-table-clear/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Pressed":{"channel":"camera-table-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#2":{"t":"Scripting","lX":270,"lY":345,"sX":1,"sY":1,"s":"Camera Table","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nfunction get_table() {\n\tDatabase.readRecords(\n\t\t\"photos\",\n\t\t\"photos\",\n\t\tfunction (dbResponse) {\n\t\t\tvar key = Object.keys(dbResponse.value.data)[0];\n\t\t\tvar camName = String(dbResponse.value.data[key][1]);\n\t\t\tpopulate(dbResponse.value);\n\t\t},\n\t\t{\n\t\t\tcolumns: \"filename,camname,datetime,viewed\",\n\t\t\tfilter: \"deleted=0\",\n\t\t\torder: \"GROUP BY camname HAVING datetime=MAX(datetime) ORDER BY datetime DESC\",\n\t\t}\n\t);\n}\n\nfunction populate(value){\n\t// Clear table\n\tClientEvents.publish(\"camera-table-clear\");\n\t// add thumbnail column to headers\n\tvalue.headers.unshift(\"thumbnail\");\n\tvalue.headers[value.headers.indexOf(\"camname\")] = \"camera\";\n\tvalue.headers[value.headers.indexOf(\"datetime\")] = \"date time\";\n\t// rebuild data packet\n\tObject.keys(value.data).forEach(function (item) {\n\t\t// convert from Unix time\n\t\tvalue.data[item][2] = new Date(parseInt(value.data[item][2] * 1000)).toLocaleString(\"en-AU\");\n\t\t// Create thumbnail\n\t\tvar img = new Image();\n\t\timg.style.setProperty(\"width\", \"100%\");\n\t\timg.style.setProperty(\"height\", \"auto\");\n\t\timg.src = \"../userfiles/photo_processor/\" + value.data[item][1] + \"/\" + item.split(\".\")[0] +\"-thumb.JPG\";\n\t\tvalue.data[item].unshift(img.outerHTML);\n\t\t// Create viewed icon\n\t\tvar viewedImg = new Image();\n\t\tviewedImg.style.setProperty(\"width\", \"35%\");\n\t\tviewedImg.style.setProperty(\"height\", \"auto\");\n\t\tviewedImg.style.setProperty(\"margin-left\", \"calc(50% - 17.5%)\");\n\t\tif (value.data[item][4] === \"1\") {\n\t\t\tviewedImg.src = \"../images/icons/bootstrap/eye-fill.svg\";\n\t\t} else {\n\t\t\tviewedImg.src = \"../images/icons/bootstrap/eye.svg\";\n\t\t}\n\t\tvalue.data[item][4] = viewedImg.outerHTML;\n\n\t\t/*// Create favourite image\n\t\tvar favImg = new Image();\n\t\tfavImg.style.setProperty(\"width\", \"35%\");\n\t\tfavImg.style.setProperty(\"height\", \"auto\");\n\t\tfavImg.style.setProperty(\"margin-left\", \"calc(50% - 17.5%)\");\n\t\tif (value.data[item][5] === \"1\") {\n\t\t\tfavImg.src = \"../images/icons/bootstrap/star-fill.svg\";\n\t\t} else {\n\t\t\tfavImg.src = \"../images/icons/bootstrap/star.svg\";\n\t\t}\n\t\tvalue.data[item][5] = favImg.outerHTML;\n\t\t*/\n\t});\n\tClientEvents.publish(\"camera-table-receive\", value);\n}\n\nScript.on('load', function() {\n\tClientEvents.subscribe(\"camera-table-refresh-pressed\", function (eventData, channel) {\n\t\tget_table();\n\t});\n\t\n\tClientEvents.subscribe(\"camera-table-pressed\", function (eventData, channel) {\n\t\tvar key = Object.keys(eventData.value.data)[0];\n\t\tScript.setState(\"camera_name\", eventData.value.data[key][1]);\n\t\tClient.jumpToScreen(\"Image Viewer\");\n\t});\n\tget_table();\n});"},"ev":{"serverEvents":{"inputEvents":{"DB Response":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}},"Scripting#3":{"t":"Scripting","lX":460,"lY":430,"sX":1,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/******************************************************************\n\t\t\t\tGLOBALS\n******************************************************************/\nvar imageIndex;\nvar carouselIndex = 0;\nvar loaded = [];\nvar currentImage;\nvar camera_images;\nvar carouselPhotos;\nvar offset = 0;\nvar video = false;\nvar filter = \"ALL\";\n\n/******************************************************************\n\t\t\t\tFUNCTIONS\n******************************************************************/\nfunction create_popup() {\n\tvar el = new Image();\n\tel.src = \"../images/icons/bootstrap/camera-fill.svg\";\n\treturn el;\n}\n\nfunction map_array_to_carousel_obj(arr) {\n\tif (arr.length < 9) {\n\t\tthrow new Error(\"Array too small\");\n\t}\n\tvar asso = (arr.length >= 10 ? arr[9]: \"\");\n\tvar obj = {\n\t\tfilename: arr[0],\n\t\tcamname: arr[1],\n\t\tdatetime: arr[2],\n\t\tviewed: arr[3],\n\t\tfavourite: arr[4],\n\t\tdeleted: arr[5],\n\t\tarchive: arr[6],\n\t\tcomments: arr[7],\n\t\ttags: arr[8],\n\t\tassociated_video: asso,\n\t\tlat: arr[10],\n\t\tlong: arr[11]\n\t};\n\treturn obj;\n}\n\nfunction dateChange(eventData, channel) {\n\tvar start = Math.floor( Date.now() / 1000);\n\tvar end = Math.floor(new Date(0).getTime() / 1000 );\n\tvar obj = Script.getForm(\"DateFilter\");\n\tvar startDateArray = obj[\"Date#1\"].split(\"-\");\n\tvar endDateArray = obj[\"Date#2\"].split(\"-\");\n\tif (obj[\"Date#2\"] !== \"\") {\n\t\tend = Math.floor(new Date(endDateArray[0], endDateArray[1] - 1, endDateArray[2], 24).getTime() / 1000);\n\t}\n\tif (obj[\"Date#1\"] !== \"\") {\n\t\tstart = Math.floor(new Date(startDateArray[0], startDateArray[1] - 1, startDateArray[2], 24).getTime() / 1000);\n\t}\n\tvar data = {};\n\tObject.keys(camera_images.data).forEach(function (key, index, array) {\n\t\tvar datetime = camera_images.data[key][2];\n\t\tif (datetime <= start && datetime >= end) {\n\t\t\tdata[key] = camera_images.data[key];\n\t\t}\n\t});\n\tvar value = {\n\t\tdata: data\n\t};\n\tClient.clearDirtyFlag();\n\tpopulate_carousel(value);\n}\n\nfunction get_carousel_images(camname, filter){\n\tClientEvents.publish(\"iamge-set\", \"../images/blank.png\");\n\tif (filter !== undefined) {\n\t\tfilter = \" AND \" + filter;\n\t} else {\n\t\tfilter = \"\";\n\t}\n\tDatabase.readRecords(\n\t\t\"photos\",\n\t\t\"photos\",\n\t\tfunction (dbResponse) {\n\t\t\tcamera_images = dbResponse.value;\n\t\t\tpopulate_carousel(dbResponse.value);\n\t\t},\n\t\t{\n\t\t\tcolumns:\"filename,camname,datetime,viewed,favourite,deleted,archive,comments,tags,associatedvideo,lat,long\",\n\t\t\tfilter: \"camname='\"+camname+\"' AND deleted=0\" + filter,\n\t\t\torder: \"ORDER BY datetime DESC\"\n\t\t}\n\t);\n}\n\nfunction set_video(obj) {\n\tif (obj.associated_video === \"\") {\n\t\t var i = parseInt(obj.filename.substr(obj.filename.length - 8, 4));\n\t\t var j = i+2;\n\t\t console.log(i, j);\n\t\t var str = obj.filename.replace(i.toString(), j.toString());\n\t\t ClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + obj.camname + \"/\" + str.replace(\".JPG\", \".MOV\"));\n\t} else {\n\t\tClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + obj.camname + \"/\" + obj.associated_video);\n\t}\n}\n\nfunction populate_fields(obj) {\n\t// Will need to change this to look in right folder when updating to that build\n\tif (video) {\n\t\tset_video(obj);\n\t} else {\n\t\tClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + obj.camname + \"/\" +obj.filename.replace(\".JPG\", \"-preview.JPG\"));\n\t}\n\t\n\t//ClientEvents.publish(\"image-viewer-map-clear\", \"\", false);\n\t//var content = create_popup();\n\t//var loc = {lat: parseFloat(obj.lat), lng: parseFloat(obj.long)};\n\t//ClientEvents.publish(\"image-viewer-map-receive\", {id: obj.filename, loc: loc, content: content}, false);\n\t//ClientEvents.publish(\"image-viewer-set-map\", loc);\n\t//ClientEvents.publish(\"image-viewer-map-set-zoom\", 9);\n\t\n\tset_filename(obj.filename);\n\tvar fav = (obj.favourite === \"1\" ? true : false);\n\tvar arch = (obj.archive === \"1\" ? true : false);\n\t\n\tvar datetime = new Date(parseInt(obj.datetime * 1000)).toLocaleString(\"en-AU\").split(\",\");\n\t\n\t//ClientEvents.publish(\"time-receive\", datetime[1]);\n\t//ClientEvents.publish(\"date-receive\", datetime[0]);\n\t//ClientEvents.publish(\"customer-receive\", \"\");\n\t//ClientEvents.publish(\"address-receive\", \"\");\n\t//ClientEvents.publish(\"camera-name-receive\", obj.camname);\n\n\tset_favourite(fav);\n\tset_archive(arch);\n\tview_image(obj);\n\t//set_tags(obj.tags);\n\t//set_comments(obj.comments);\n}\n\nfunction populate_carousel(value){\n\tcarouselPhotos = {};\n\tClientEvents.publish(\"thumb-clear\");\n\tloaded = [];\n\t\n\timageIndex = 0;\n\tcarouselIndex = 0;\n\tvar keys = Object.keys(value.data);\n\tvar len = keys.length;\n\tClientEvents.publish(\"file-count-receive\", len);\n\tClientEvents.publish(\"file-index-receive\", 1);\n\tkeys.forEach(function (key, index) {\n\t\t// Add entry to carouselPhotos\n\t\tvar data = map_array_to_carousel_obj(value.data[key]);\n\t\tcarouselPhotos[data.filename] = data;\n\t\t// Send to Image viewer\n\t\tif (index === 0) {\n\t\t\tpopulate_fields(data);\n\t\t}\n\t\t\n\t\tif (index < 10) {\n\t\t\tif (loaded.indexOf(data.filename) === -1) {\n\t\t\t\tloaded.push(data.filename);\n\t\t\t}\n\t\t\tvar packet = {\n\t\t\t\tmethod: \"append\",\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" + data.camname + \"/\" +data.filename.replace(\".JPG\",\"-thumb.JPG\"),\n\t\t\t\tlabel: new Date(parseInt(data.datetime * 1000)).toLocaleString(\"en-AU\").replace(\",\", \"\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet);\n\t\t}\n\t});\n}\n\nfunction view_image(obj) {\n\tvar dbRec = {};\n\tdbRec.filename = obj.filename;\n\tdbRec.viewed = \"1\";\n\tvar dbReq = {};\n\tdbReq[obj.filename] = dbRec;\n\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\tif (dbResponse.value == 0) {\n\t\t\tLog.warn(\"Unable to update the viewed status of image. :(\");\n\t\t}\n\t\tvar options = {\n\t\t\tcategory: \"kinectgroup\",\n\t\t\tclassName: \"brisbane\",\n\t\t\tinstance: obj.camname,\n\t\t\tscope: \"viewed\",\n\t\t\tvalue: \"1\",\n\t\t};\n\t\tScript.publishToChannel(options);\n\t});\n\t//set_viewed(true);\n}\n\nfunction set_filename(name) {\n\tcurrentImage = carouselPhotos[name];\n\tClientEvents.publish(\"filename-receive\", name);\n}\n\nfunction set_favourite(fav) {\n\tif (fav === true) {\n\t\tClientEvents.publish(\"favourite-receive\", \"star-fill\");\n\t\treturn;\n\t}\n\tClientEvents.publish(\"favourite-receive\", \"star\");\n}\n\nfunction favourite_image(img, favourite) {\n\tvar dbRec = {};\n\tdbRec.filename = img;\n\tdbRec.favourite = (favourite === true ? 1 : 0);\n\tvar dbReq = {};\n\tdbReq[img] = dbRec;\n\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\tvar key = Object.keys(req)[0];\n\t\tvar entry = req[key];\n\t\tif (dbResponse.value === 0) {\n\t\t\tSystem.status(\"Unable to favourite image '\" + entry.filename + \"'.\");\n\t\t\treturn;\n\t\t}\n\t\tcarouselPhotos[entry.filename].favourite = \"\" + entry.favourite.toString();\n\t\tvar favourite = (entry.favourite === 1 ? true : false);\n\t\tset_favourite(favourite);\n\t});\n}\n\nfunction set_archive(archived) {\n\tif (archived === true) {\n\t\tClientEvents.publish(\"archive-receive\", \"archive-fill\");\n\t\treturn;\n\t}\n\tClientEvents.publish(\"archive-receive\", \"archive\");\n}\n\nfunction archive_image(img, archived) {\n\tvar dbRec = {};\n\tdbRec.filename = img;\n\tdbRec.archive = (archived === true ? 1 : 0);\n\tvar dbReq = {};\n\tdbReq[img] = dbRec;\n\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\tvar key = Object.keys(req)[0];\n\t\tvar entry = req[key];\n\t\tif (dbResponse.value === 0) {\n\t\t\tSystem.status(\"Unable to favourite image '\" + entry.filename + \"'.\");\n\t\t\treturn;\n\t\t}\n\t\tcarouselPhotos[entry.filename].archive = entry.archive.toString();\n\t\tvar archived = (entry.archive === 1 ? true : false);\n\t\tset_archive(archived);\n\t});\n\t//set_archive(archived);\n\t//carouselPhotos[img][6] = (archived === true ? \"1\" : \"0\");\n}\n\nfunction download_image(img) {\n\tvar camname = carouselPhotos[img].camname;\n  var element = document.createElement('a');\n  element.setAttribute('href', \"../userfiles/photo_processor/\" + camname + \"/\" + img);\n  element.setAttribute('download', img);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction delete_image(img) {\n\tSystem.invokeModal(\"OK\", \"Delete Image\", \"Are you sure you want to delete '\" + img + \"'?\", \"Delete\", \"DELETE\", function (buttonPressed) {\n\t\tif (buttonPressed === true) {\n\t\t\tvar dbRec = {};\n\t\t\tdbRec.filename = img;\n\t\t\tdbRec.deleted = 1;\n\t\t\tvar dbReq = {};\n\t\t\tdbReq[img] = dbRec;\n\t\t\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\t\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\t\t\tvar key = Object.keys(req)[0];\n\t\t\t\tvar entry = req[key];\n\t\t\t\tif (dbResponse.value === 0) {\n\t\t\t\t\tSystem.status(\"Unable to delete image '\" + entry.filename + \"'.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcarouselPhotos[entry.filename].deleted = entry.deleted.toString();\n\t\t\t\tSystem.status(\"Photo '\" + img + \"' deleted.\", \"IMPORTANT\");\n\t\t\t\t//ClientEvents.publish(\"thumb-remove\", Object.keys(carouselPhotos).indexOf(entry.filename));\n\t\t\t\t//delete carouselPhotos[entry.filename];\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction set_tags(tags) {\n\tClientEvents.publish(\"tags-receive\", tags);\n}\n\nfunction set_comments(comments) {\n\tClientEvents.publish(\"comments-receive\", comments);\n}\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\t\n\t//ClientEvents.subscribe(\"image-viewer-start-date-change\", dateChange);\n\t//ClientEvents.subscribe(\"image-viewer-end-date-change\", dateChange);\n\t\n\t//File Index Change\n\tClientEvents.subscribe(\"file-index-change\", function(eventData, channel) {\n\t\tClient.clearDirtyFlag();\n\t\tvar index = parseInt(eventData.value) - 1;\n\t\tif (isNaN(index)) {\n\t\t\tconsole.error(\"index '\" + eventData.value + \"'could not be parsed to an integer\");\n\t\t\treturn;\n\t\t}\n\t\tif (index < 0) {\n\t\t\tconsole.error(\"index '\" + eventData.value + \"' is less than 0\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar fileNames = Object.keys(carouselPhotos);\n\t\t// Clear all slides from carousel\n\t\tClientEvents.publish(\"thumb-clear\", \"\", false);\n\t\tloaded = [];\n\t\t\n\t\tfor (var i = index - 15; i < index + 15; i++) {\n\t\t\tif (i < 0 || i > fileNames.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar packet = {\n\t\t\t\tmethod: \"append\",\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" + carouselPhotos[fileNames[i]].camname + \"/\" + carouselPhotos[fileNames[i]].filename.replace(\".JPG\", \"-thumb.JPG\"),\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t}\n\t\timageIndex = index;\n\t\tpopulate_fields(carouselPhotos[fileNames[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-goTo\", 15, false);\n\t});\n\t\n\t// Filter Selected\n\tClientEvents.subscribe(\"filter-selected\", function (eventData, channel) {\n\t\tvar camname = currentImage.camname;\n\t\tClientEvents.publish(\"image-viewer-start-date-receive\", \"\");\n\t\tClientEvents.publish(\"image-viewer-end-date-receive\", \"\");\n\t\tswitch (eventData.value.toUpperCase()) {\n\t\t\tcase \"FAVOURITE\":\n\t\t\t\tfilter = \"FAVOURITE\";\n\t\t\t\tget_carousel_images(camname, \"favourite=1\");\n\t\t\t\tbreak;\n\t\t\tcase \"ARCHIVED\":\n\t\t\t\tfilter = \"ARCHIVED\";\n\t\t\t\tget_carousel_images(camname, \"archive=1\");\n\t\t\t\tbreak;\n\t\t\tcase \"NOT VIEWED\":\n\t\t\t\tfilter = \"NOT VIEWED\";\n\t\t\t\tget_carousel_images(camname, \"viewed=0\");\n\t\t\t\tbreak;\n\t\t\tcase \"ALL\":\n\t\t\t\tfilter = \"ALL\";\n\t\t\t\tClientEvents.publish(\"filter-reset\");\n\t\t\t\tget_carousel_images(camname);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"unknown option\");\n\t\t\t\tbreak;\n\t\t}\n\t});\n\t\n\t/*\n\t// Clear Button Pressed\n\tClientEvents.subscribe(\"clear-pressed\", function (eventData, channel) {\n\t\tClientEvents.publish(\"tags-receive\", \"\");\n\t\tClientEvents.publish(\"comments-receive\", \"\");\n\t\tSystem.dirtyFlag(\"set\");\n\t});\n\t*/\n\t\n\t// Download Pressed\n\tClientEvents.subscribe(\"download-pressed\", function (eventData, channel) {\n\t\tdownload_image(currentImage);\n\t});\n\t\n\t// Favourite Pressed\n\tClientEvents.subscribe(\"favourite-pressed\", function (eventData, channel) {\n\t\tvar fav = (currentImage.favourite === \"1\" ? true : false );\n\t\tfavourite_image(currentImage.filename, !fav);\n\t});\n\t\n\t// Archive Pressed\n\tClientEvents.subscribe(\"archive-pressed\", function (eventData, channel) {\n\t\tvar archived = currentImage.archive;\n\t\tarchived = (archived === \"1\" ? true : false);\n\t\tarchive_image(currentImage.filename, !archived);\n\t});\n\t\n\t// Delete Pressed\n\tClientEvents.subscribe(\"delete-pressed\", function (eventData, channel) {\n\t\tdelete_image(currentImage.filename);\n\t});\n\t\n\t// Save Pressed\n\tClientEvents.subscribe(\"save-pressed\", function (eventData, channel) {\n\t\tvar formData = Script.getForm(\"image-tagging\");\n\t\tvar dbRec = {};\n\t\tdbRec.filename = currentImage.filename;\n\t\tdbRec.tags = formData[\"image-tags\"];\n\t\tdbRec.comments = formData[\"image-comments\"];\n\t\tvar dbReq = {};\n\t\tdbReq[currentImage.filename] = dbRec;\n\t\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\t\tvar key = Object.keys(req)[0];\n\t\t\tvar entry = req[key];\n\t\t\tif (dbResponse.value === 0) {\n\t\t\t\tSystem.status(\"Unable to save comments and tags for image '\" + entry.filename + \"'.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tSystem.dirtyFlag(\"clear\");\n\t\t\tcarouselPhotos[entry.filename].comments = entry.comments;\n\t\t\tcarouselPhotos[entry.filename].tags = entry.tags;\n\t\t});\n\t});\n\t\n\t// Carousel Thumbnail Pressed\n\tClientEvents.subscribe(\"thumb-pressed\", function (eventData, channel) {\n\t\tvar filename = eventData.value.src.split(\"/\").pop().replace(\"-thumb.JPG\", \".JPG\");\n\t\timageIndex = Object.keys(carouselPhotos).indexOf(filename);\n\t\tpopulate_fields(carouselPhotos[filename]);\n\t\tClientEvents.publish(\"file-index-receive\", imageIndex+1);\n\t});\n\t\n\t//Thumbnail Changed\n\tClientEvents.subscribe(\"thumb-changed\", function (eventData, channel) {\n\t\tif (eventData.value.method === \"goto\") {\n\t\t\treturn;\n\t\t}\n\t\tvar direction = (eventData.value.direction === \"right\" ? \"append\" : \"prepend\");\n\t\timageIndex += eventData.value.step;\n\t\t\n\t\tvar fileNames = Object.keys(carouselPhotos);\n\t\t\n\t\tfor (var i = imageIndex; i > imageIndex - 15; i--) {\n\t\t\tif (i < 0 || i > fileNames.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar packet = {\n\t\t\t\tmethod: direction,\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" + carouselPhotos[fileNames[i]].camname + \"/\" + carouselPhotos[fileNames[i]].filename.replace(\".JPG\", \"-thumb.JPG\"),\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t}\n\t\t\n\t\tfor (i = imageIndex; i < imageIndex + 15; i++) {\n\t\t\tif (i < 0 || i > fileNames.length -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar packet = {\n\t\t\t\tmethod: direction,\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" + carouselPhotos[fileNames[i]].camname + \"/\" + carouselPhotos[fileNames[i]].filename.replace(\".JPG\", \"-thumb.JPG\"),\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t}\n\t\tif (eventData.value.method !== \"swipe\") {\n\t\t\tClientEvents.publish(\"file-index-receive\", parseInt(imageIndex) + 1);\n\t\t\tpopulate_fields(carouselPhotos[fileNames[imageIndex]]);\n\t\t}\n\t});\n\t\n\t ClientEvents.subscribe(\"video-pressed\", function(eventData, channel) {\n\t\t var photo = currentImage;\n\t\t if (video) {\n\t\t\t video = !video;\n\t\t\t ClientEvents.publish(\"video-receive\", \"camera-video\");\n\t\t\t ClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + photo.camname + \"/\" + photo.filename.replace(\".JPG\", \"-preview.JPG\"));\n\t\t } else {\n\t\t\t video = !video;\n\t\t\t ClientEvents.publish(\"video-receive\", \"camera-video-fill\");\n\t\t\t set_video(photo);\n\t\t }\n\t });\n\t\n\t// ImageViewer Next\n\tClientEvents.subscribe(\"next-pressed\", function(eventData, channel) {\n\t\t//imageIndex++;\n\t\t//populate_fields(carouselPhotos[Object.keys(carouselPhotos)[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-next\");\n\t});\n\t\n\t// ImageViewer Previous\n\tClientEvents.subscribe(\"previous-pressed\", function(eventData, channel) {\n\t\t//imageIndex--;\n\t\t//populate_fields(carouselPhotos[Object.keys(carouselPhotos)[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-previous\");\n\t});\n\t\n\t// Request data for carousel\n\t//ClientEvents.publish(\"image-viewer-start-date-receive\", new Date().toISOString().split(\"T\")[0]);\n\tvar camname = Script.getState(\"camera_name\").toLowerCase();\n\tget_carousel_images(camname);\n});\n\n/**\n * Response to message from server channel\n */\nScript.on('server', function(eventData, channel) {\n});"},"ev":{"serverEvents":{"inputEvents":{"New Event #1":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed","important":"false"}}}}}},"screens":{"Traps Phone":{"index":0,"icon":"widgets","meta":""},"Map":{"index":1,"icon":"widgets","meta":""},"Image Viewer":{"index":2,"icon":"widgets","meta":""},"Lookups":{"index":3,"icon":"widgets","meta":""},"Camera Table":{"index":4,"icon":"widgets","meta":""}},"meta":""}