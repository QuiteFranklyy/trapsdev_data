{"device":"PHONE","widgets":{"card":{"t":"Scripting","lX":315,"lY":30,"sX":1,"sY":1,"s":"Traps","ps":{"enabled":false,"scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"html","code editor":"<div>\n  <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n  <div>\n    <style>\n     /* Triggered */\n      .redIcon {\n         background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n         background-size: contain;\n         background-color: white;\n         border-radius: 5px;\n      }\n      \n      /* Inactive */\n      .greyIcon {\n        background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n        background-size: contain;\n        background-color: white;\n        border-radius: 5px;\n       }\n        \n       /* Set  */\n       .greenIcon {\n         background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n         background-size: contain;\n         background-color: white;\n         border-radius: 5px;\n       }\n        \n      .capitalize {\n        text-transform: capitalize;   \n       }\n        \n      .button {\n        background-color: #4CAF50;\n        /* Green */\n        font-family: sans-serif;\n        border: none;\n        color: white;\n        padding: 10px 25px;\n        text-align: center;\n        text-decoration: none;\n        display: inline-block;\n        font-size: 1rem;\n        border-radius: 6px;\n        height: 50px;\n        cursor: pointer;\n      }\n\n      .select-css {\n        cursor: pointer;\n        display: block;\n        font-size: 16px;\n        font-family: sans-serif;\n        font-weight: 700;\n        color: #444;\n        line-height: 1.3;\n        padding: 1em 1.4em 1em .8em;\n        width: calc(100% - 16px);\n        max-width: 100%;\n        box-sizing: border-box;\n        margin: 8px;\n        border: 1px solid #aaa;\n        box-shadow: 0 1px 0 1px rgba(0, 0, 0, .04);\n\n        -moz-appearance: none;\n        -webkit-appearance: none;\n        appearance: none;\n        background-color: #fff;\n        background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\n        background-repeat: no-repeat, repeat;\n        background-position: right .7em top 50%, 0 0;\n        background-size: .65em auto, 100%;\n      }\n\n      .select-css::-ms-expand {\n        display: none;\n      }\n\n      .select-css:hover {\n        border-color: #888;\n      }\n\n      .select-css:focus {\n        border-color: #aaa;\n        box-shadow: 0 0 1px 3px rgba(59, 153, 252, .7);\n        box-shadow: 0 0 0 3px -moz-mac-focusring;\n        color: #222;\n        outline: none;\n      }\n\n      .select-css option {\n        font-weight: normal;\n      }\n        \n      .container {\n        height: 30px;\n        position: relative; \n      }\n        \n      .vertical-center {\n        margin: 0;\n        position: absolute;\n        top: 50%;\n        -ms-transform: translateY(-50%);\n        transform: translateY(-50%);\n      }\n      \n      ul {\n        margin: 4px 0 4px 0;  \n        overflow: hidden;\n        white-space: nowrap;\n      }  \n      \n      li {\n        white-space: nowrap;\n        overflow: hidden;\n      } \n\n    </style>\n    <div data-section=\"main\" data-state=\"triggered\" style=\"font-family: sans-serif; background-color: #f2f2f2;border-bottom: 3px solid white; border-right: 5px solid black; padding: 8px; overflow:auto;\">\n      <div data-section=\"cell\">\n        <span style=\"float: right; text-align: right;\">\n            <span data-info=\"animalType\" class=\"capitalize\">loading...</span>\n            <br />\n            <span data-info=\"trapperName\" class=\"capitalize\">loading...</span>\n        </span>\n        <div>\n          <div class=\"container\" style=\"margin: 8px 8px 4px 0;\">\n            <div data-info=\"icon\" class=\"redIcon vertical-center\" style=\"display: inline-block; width: 25px; height: 25px;\"></div>\n              <div class=\"vertical-center\" style=\"margin-left: 40px;\">\n              <div data-info=\"title\" class=\"capitalize\" style=\"font-weight: bold; font-size: 20px\">\n                  loading...\n               </div>\n              \n              <div data-info=\"address\" style=\"display: inline-block;\">\n                  loading...\n              </div>\n              </div>\n          </div>\n          <div>\n          <div data-info=\"hours\" style=\"display: inline-block; border: 2px solid red; border-radius: 14px; text-align:center; color: red; font-weight:bold; padding: 2px; margin-right: 4px; margin-left=2px; min-width: 16px; \">\n              -\n          </div>\n          <span data-info=\"suburb\" style=\"margin-left: 8px; text-decoration: underline; cursor: pointer;\">--</span>\n          </div>\n        </div>\n      </div>\n      <div data-section=\"clearScreen\" style=\"background-color: #e6e6e6; padding: 8px; margin-top: 15px; border: 1px solid #bfbfbf; overflow: auto; display: none;\">\n        <div style=\"overflow: auto;\">\n          <ul id=\"topRow\" style=\"list-style: none; padding: 0;\">\n            <li data-title=\"set\" style=\"display: inline-block; width: 19%; text-align: center;\">Set</li>\n            <li style=\"display: inline-block; width: 19%; text-align: center;\">Updated</li>\n          </ul>\n          <ul id=\"iconRow\" style=\"list-style: none; padding: 0;\">\n            <li style=\"display: inline-block; width: 19%; text-align: center;\"><i class=\"material-icons\">access_time</i></li>\n            <li style=\"display: inline-block; width: 19%; text-align: center;\"><i class=\"material-icons\">access_time</i></li>\n            <li style=\"display: inline-block; width: 19%; text-align: center;\"><img height=\"24\" width=\"24\" src=\"/userfiles/temp.png\" /></li>\n            <li style=\"display: inline-block; width: 19%; transform: rotate(90deg); text-align: center;\"><i class=\"material-icons\">battery_full</i></li>\n            <li style=\"display: inline-block; width: 19%; text-align: center;\"><i class=\"material-icons\">tap_and_play</i></li>\n          </ul>\n          <ul id=\"bottomRow\" style=\"list-style: none; padding: 0; margin-bottom: 16px;\">\n            <li id=\"setVal\" data-stat=\"setTime\" style=\"display: inline-block; width: 19%; text-align: center; vertical-align: top;\">-</li>\n            <li id=\"updateVal\" data-stat=\"updateTime\" style=\"display: inline-block; width: 19%; text-align: center; vertical-align: top;\">-</li>\n            <li id=\"temperature\" data-stat=\"temp\" style=\"display: inline-block; width: 19%; text-align: center; vertical-align: top;\">-</li>\n            <li id=\"batteryPercent\" data-stat=\"battery\" style=\"display: inline-block; width: 19%; text-align: center; vertical-align: top;\">-</li>\n            <li id=\"signalStrength\" data-stat=\"signal\" style=\"display: inline-block; width: 19%; text-align: center; vertical-align: top;\">-</li>\n          </ul>\n\n          <button data-button=\"clearButton\" class=\"button\" style=\"float: right; min-width: 35%;\">\n            CLEAR\n          </button>\n          <button data-button=\"deactivateButton\" class=\"button\" style=\"float: left; min-width: 35%; background-color: #333333;\">\n            DEACTIVATE\n          </button>\n        </div>\n      </div>\n      <div data-section=\"formScreen\" style=\"background-color: #e6e6e6; border: 1px solid #bfbfbf; margin-top: 15px; display: none;\">\n        <div>\n          <select data-select=\"trapType\" class=\"select-css\" style=\"margin-top: 15px;\">\n            <option value=\"select trap type\" disabled selected>Select Trap Type</option>\n            <option value=\"foot\">Foot Trap</option>\n            <option value=\"cage\">Cage Trap</option>\n            <option value=\"deer\">Deer Trap</option>\n            <option value=\"pig\">Pig Trap</option>\n          </select>\n          <select data-select=\"animalType\" class=\"select-css\" style=\"margin-top: 15px;\">\n            <option value=\"select animal\" disabled selected>Select Animal Caught</option>\n            <option value=\"none\">None</option>\n            <option value=\"domestic-cat\">Domestic Cat</option>\n            <option value=\"feral-cat\">Feral Cat</option>\n            <option value=\"domestic-dog\">Domestic Dog</option>\n            <option value=\"feral-dog\">Feral Dog</option>\n            <option value=\"brushtail-possum\">Brushtail Possum</option>\n            <option value=\"goanna\">Goanna</option>\n            <option value=\"crows\">Crows</option>\n            <option value=\"bush-turkey\">Bush Turkey</option>\n            <option value=\"hare\">Hare</option>\n            <option value=\"toad\">Toad</option>\n            <option value=\"magpie\">Magpie</option>\n            <option value=\"kookaburra\">Kookaburra</option>\n            <option value=\"blue-tongue-lizard\">Blue-Tongue Lizard</option>\n            <option value=\"bandicoot\">Bandicoot</option>\n            <option value=\"rat\">Rat</option>\n            <option value=\"deer\">Deer</option>\n          </select>\n          <select data-select=\"trapper\" class=\"select-css\" style=\"margin-top: 15px;\">\n            <option value=\"select trapper\" disabled selected>Select Trapper</option>\n            <option value=\"stathi travalos\">Stathi Travalos</option>\n            <option value=\"peter authur\">Peter Arthur</option>\n            <option value=\"dan franks\">Dan Franks</option>\n            <option value=\"developer\">Developer</option>\n          </select>\n        </div>\n        <div style=\"overflow: auto; margin-top:8px\">\n          <button data-button=\"submitButton\" class=\"button\" style=\"float: right; min-width: 35%; margin: 8px; margin-top: 15px\">\n            CLEAR\n          </button>\n          <button data-button=\"cancelButton\" class=\"button\" style=\"float: left; min-width: 35%; margin: 8px; margin-top: 15px; background-color: grey;\">\n            CANCEL\n          </button>\n        </div>\n      </div>\n    </div>\n</div>"},"ev":{}},"scriptingTable":{"t":"Scripting","lX":30,"lY":45,"sX":1,"sY":1,"s":"Traps","ps":{"enabled":false,"scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nvar hoursColor = {\n    GREEN: \"green\",\n    YELLOW: \"yellow\",\n    RED: \"red\"\n};\n\nvar tableDom;\nvar template = Script.getScriptElement(\"card\");\nvar popupTemplate = Script.getScriptElement(\"popup2\");\n\nvar reverseKey = \"test_ATDRoSFNoEdFmeeRu9NDihfXyugUbhKR6dWiestT\";\n\n// Pins\nvar pins = {};\nvar rows = {};\n\nvar deviceNicknames = {\n    \"Trap 256112\": \"TRAP 0025\",\n    \"Trap 252907\": \"TRAP 0010\",\n    \"Trap 255955\": \"TRAP 0022\",\n    \"Trap 256091\": \"TRAP 0019\",\n    \"Trap 255912\": \"TRAP 0024\",\n    \"Trap 254778\": \"TRAP 0014\",\n    \"Trap 183130\": \"TRAP 0015\",\n    \"Trap 256015\": \"TRAP 0026\",\n    \"Trap 256105\": \"TRAP 0012\",\n    \"Trap 251565\": \"TRAP 0011\",\n    \"Trap 186834\": \"TRAP 0013\",\n    \"Trap 254892\": \"TRAP 0021\",\n    \"Trap 253048\": \"TRAP 0029\",\n    \"Trap 255920\": \"TRAP 0020\",\n    \"Trap 256604\": \"TRAP 0027\",\n    \"Trap 254907\": \"TRAP 0017\",\n    \"Trap 256920\": \"TRAP 0016\",\n    \"Trap 256589\": \"TRAP 0028\",\n    \"Trap 256050\": \"TRAP 0023\",\n    \"Trap 180720\": \"TEST_UNIT1\",\n    \"Trap 181909\": \"TEST_UNIT2\",\n    \"Trap 183271\": \"TEST_UNIT3\",\n    \"Trap 207336\": \"TEST_UNIT4\",\n    \"Trap 254870\": \"TRAP 0018\",\n    \"Trap 183139\": \"TRAP 0030\"\n};\n\nvar hourRefresh = 1 * 60 * 1000;\nvar modes = {\n    DESKTOP: 1,\n    MOBILE: 2\n};\nvar settings = {\n   mode: modes.MOBILE,\n   showInactive: false \n};\n\n// Mode of device, turns off non-mobile issues\nvar mode = modes.MOBILE; \nvar loaded = false;\nScript.on('load', function() {   \n    Script.System.toggleSidebar(\"CLOSE\");\n    if (Script.getState(\"cards\") == undefined) {\n        Script.setState(\"cards\", {});\n    }\n    Script.Database.readRecords(\"traps\", \"DeviceDefinitions\");   \n    var packet = {\n        value: \"1\"\n    };\n});\n\n// Handle sidebar and pins.\nScript.on(\"client\", function(eventData) {   \n    // Center map\n    var pinName = eventData.value.toLowerCase();\n    var pinDetails = pins[pinName];\n    eventData.value = pinDetails.value.loc;  \n    // Open pin on side.\n    var rowDetails = rows[pinName];\n    rowDetails.openClearScreen(true);\n});\n\nScript.on(\"server\", function(eventData) {\n    if (eventData.usrmeta.func !== \"READRECS\" || loaded == true) {\n        return;   \n    }\n    // Database \n    var data = eventData.value.data;\n    var keys = Object.keys(data);\n    var packet = {};\n    packet.value = {};\n\n    for (var i in Object.keys(data)) {\n        var k = keys[i];\n        var val = data[k];\n        var device = \"Trap \" + k;\n        if (Script.getState(\"cards\")[device] == undefined) {\n            // Create row for device TODO address lookup and set time.\n            var trapType = val[0];\n            var state = parseInt(val[1]);\n            var lat = parseFloat(val[4]);\n            var lng = parseFloat(val[3]);\n            var street = val[5];\n            var suburb = val[6].toUpperCase();\n            var trapper = val[7].toUpperCase();\n            var setTime = undefined;\n            var hours = 0;\n            \n            if (val[8] !== undefined) {\n                if (val[8] === -1) {\n                    setTime = new Date();   \n                } else {\n                    setTime = new Date(parseInt(val[8])); \n                }\n                hours = diffInHours(setTime, new Date());\n            }\n            \n            var entry = createRowEntry(device, street, suburb, hours, trapType);\n            var info = {\n                ID: k,\n                TrapType: trapType,\n                State: state,\n                Lng: lng,\n                Lat: lat,\n                Street: street,\n                Suburb: suburb,\n                Trapper: trapper.toLowerCase(),\n                SetTime: setTime.getTime()\n            };\n                        \n            entry.info = info; \n            var pinPacket; \n            \n            if (suburb === \"\" || street === \"\") {\n               // entry.reverseLookup(lat, lng);    \n            }\n            \n            switch (state) {\n                case 0: \n                    pinPacket = createPopupPacket(device, deviceNicknames[device], lat, lng, \"grey\");\n                    entry.setState(\"inactive\", undefined, false);                     \n                    break;\n                case 1:\n                    pinPacket = createPopupPacket(device, deviceNicknames[device], lat, lng, \"green\");\n                    entry.setState(\"set\", hours, false);\n                    break;\n                case 2:\n                    pinPacket = createPopupPacket(device, deviceNicknames[device], lat, lng, \"red\");\n                    entry.setState(\"triggered\", undefined, false);\n                    break;\n            }\n                                   \n            packet.value[device] = [entry];\n            rows[device.toLowerCase()] = entry;\n            pins[device.toLowerCase()] = pinPacket;\n        }\n    }\n    \n    Script.setState(\"pins\", pins);  \n    \n    var data = packet.value;\n    var payload = {};\n    payload.label = \"sensacollection\";\n    payload.value = {};\n    payload.value.data = data;\n    payload.value.headers = [\"page\"];\n\n    Script.sendToWidget(\"page\", \"receive value\", payload.value, \"sensacollection\");\n    var sortedArray = sortTable();\n    updateHours();\n    Script.setState(\"cards\", rows);\n    rows[sortedArray[0].toLowerCase()].openClearScreen();\n    setInterval(updateHours, hourRefresh);\n    Script.setState(\"tableLoaded\", true);\n    loaded = true;\n});\n\nfunction sortTable() {\n     // Sort table\n    var sortedRowArray = Object.values(rows).sort(function(a, b) {\n        if (a.info.State !== b.info.State) {            \n            return b.info.State - a.info.State;\n        } else {\n            return a.info.SetTime - b.info.SetTime;\n        }\n    });\n    \n    var sortedArray = sortedRowArray.map(function(item) {\n        return \"Trap \" + item.info.ID;    \n    }); \n    \n    Script.setState(\"sortedArray\", sortedArray); \n    Script.sendToWidget(\"page\", \"sort row by array\", sortedArray);\n    return sortedArray;\n}\n\n// Update hours\nfunction updateHours() {    \n    var keys = Object.keys(rows);\n    for (var i = 0; i < keys.length; i++) {\n        var row = rows[keys[i]];\n        if (row.info.State == 0) {\n        }\n        var hours = row.querySelector(\"[data-info='hours']\");\n        // Calc new hours\n        var setTime = row.info.SetTime;\n        if (setTime === undefined) {\n            continue;\n        }\n\n        if (row.info.State == 0) {\n            hours.innerHTML = \"\";\n        } else {\n            hours.innerHTML = diffInHours(new Date(setTime), new Date());            \n        }\n        //row.updateStats(\"settime\", setTime);\n    }\n}\n\n\nfunction createPopupPacket(id, trapNum, lat, lng, color) {\n    var packet = {\n        value: {\n            id: trapNum.toLowerCase(),\n            loc: {\n                lat: lat,\n                lng: lng\n            },\n            content: createPopup(id, trapNum, color)\n        }\n    };\n    pins[trapNum.toLowerCase()] = packet;\n    return packet;\n}\n\n\nfunction createSetStateFunction(item) {\n    return function(state, h, updateServer) {\n        var clearButton = item.querySelector(\"[data-button='clearButton']\");\n        var disableButton = item.querySelector(\"[data-button='deactivateButton']\");\n        var submitButton = item.querySelector(\"[data-button='submitButton']\");\n        var cancelButton = item.querySelector(\"[data-button='cancelButton']\");\n        var hours = item.querySelector(\"[data-info='hours']\");\n        // Selects\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        // Stats\n        var setTitle = item.querySelector(\"[data-title='set']\");\n        var setTime = item.querySelector(\"[data-stat='setTime']\");\n        var updateTime = item.querySelector(\"[data-stat='updateTime']\");        \n        // Update state\n        var main = item.querySelector(\"[data-section='main']\");\n        // Trapper name\n        var trapper = item.querySelector(\"[data-info='trapperName']\");\n        var trapType = item.querySelector(\"[data-info='animalType']\");\n        // Update item state\n        // Get title\n        var title = item.querySelector(\"[data-info='title']\").innerHTML.toLowerCase();\n        var id = item.info.ID;\n        var packet = {};\n        \n        switch(state) {\n            case \"inactive\":\n                // Hide trapper name and trap type\n                trapper.style.setProperty(\"visibility\", \"hidden\");\n                trapType.style.setProperty(\"visibility\", \"hidden\");\n                disableButton.style.setProperty(\"visibility\", \"hidden\");\n                submitButton.innerHTML = \"SET\";\n                submitButton.style.setProperty(\"background-color\", \"\");\n                clearButton.innerHTML = \"SET\";\n                clearButton.style.setProperty(\"background-color\", \"\");\n                item.setIconColor(\"grey\");\n                main.setAttribute(\"data-state\", \"inactive\");\n                hours.style.setProperty(\"visibility\", \"hidden\");\n                // Set\n                setTitle.innerHTML = \"Set\";\n                // Disable dropdown box\n                animalSelect.setAttribute(\"disabled\", \"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"lightgray\");\n                animalSelect.style.setProperty(\"background-image\", \"none\");\n                animalSelect.value = \"none\";     \n                // Remove disable\n                trapTypeSelect.removeAttribute(\"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"\");  \n                trapTypeSelect.value = \"select trap type\";                \n                trapperSelect.value = \"select trapper\";\n                //item.updateStats(\"settime\", new Date().getTime());\n                packet = {};\n                packet.value = deviceNicknames[\"Trap \" + id].toLowerCase();;\n                    if (settings.showInactive) {\n                        var popup = pins[title];\n                        var icon = popup.value.content.querySelector(\"[data-info='icon']\");\n                        icon.classList = [];\n                        icon.classList.add(\"greyIcon\");\n                        icon.classList.add(\"vertical-center\");\n                        //Script.sendToWidget(\"pinMap\", \"add custom popup\", popup);\n                    } else {\n                        //Script.sendToWidget(\"pinMap\", \"remove custom popup\", packet);   \n                    }\n                // Hide form screen\n                item.info.State = 0;\n                item.updateStats(\"settime\", 0);\n                item.hideFormScreen();\n                break;\n            case \"set\":\n                /*\n                if (item.info.Trapper === undefined \n                    || item.info.Trapper === \"\" \n                    || item.info.Trapper.indexOf(\"select\") !== -1) {\n                    alert(\"Trap must have a trapper\");\n                    return;\n                }\n                */\n                // Update address incase it has moved.\n                //item.reverseLookup(lat, lng);              \n                // Show hidden components\n                // Hide forms screen\n                item.hideFormScreen();\n                //item.hideClearScreen();\n                trapper.style.setProperty(\"visibility\", \"visible\");\n                trapType.style.setProperty(\"visibility\", \"visible\");\n                disableButton.style.setProperty(\"visibility\", \"visible\");\n                submitButton.innerHTML = \"RESET\";\n                clearButton.innerHTML = \"CHECK\";\n                clearButton.style.setProperty(\"background-color\", \"\");\n                item.setIconColor(\"green\");\n                main.setAttribute(\"data-state\", \"set\");\n                // Set disable on animal trap type\n                setTitle.innerHTML = \"Set\";\n                // Disable dropdown box\n                trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"none\");\n                // Remove disable\n                animalSelect.removeAttribute(\"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"\");\n                animalSelect.style.setProperty(\"background-image\", \"\");\n                animalSelect.value = \"select animal\";\n                // Recolor\n                hours.style.setProperty(\"border-color\", hoursColor.GREEN);\n                hours.style.setProperty(\"color\", hoursColor.GREEN);\n                // If hours passed through, don't reset\n                if (!h) {\n                    // Set hours to 0 and recolour\n                    hours.style.setProperty(\"visibility\", \"visible\");\n                    hours.innerHTML = \"0\";\n                    hours.style.setProperty(\"border-color\", hoursColor.GREEN);\n                    hours.style.setProperty(\"color\", hoursColor.GREEN);\n                }\n                // Change trapper name on card\n                trapper.innerHTML = item.info.Trapper.toLowerCase();\n                trapType.innerHTML = item.info.TrapType.toLowerCase();\n                disableButton.style.setProperty(\"visibility\", \"visible\");\n                // Update custom popup\n                    var popup = pins[deviceNicknames[\"Trap \" + id].toLowerCase()];\n                    var icon = popup.value.content.querySelector(\"[data-info='icon']\");\n                    icon.classList = [];\n                    icon.classList.add(\"greenIcon\");\n                    icon.classList.add(\"vertical-center\");\n                    //Script.sendToWidget(\"pinMap\", \"add custom popup\", popup);\n                item.info.State = 1;\n                break;\n            case \"triggered\":\n                // Show hidden components\n                trapper.style.setProperty(\"visibility\", \"visible\");\n                trapType.style.setProperty(\"visibility\", \"visible\");\n                submitButton.innerHTML = \"CLEAR\";\n                submitButton.style.setProperty(\"background-color\", \"#c90d00\");\n                clearButton.innerHTML = \"CLEAR\";\n                clearButton.style.setProperty(\"background-color\", \"#c90d00\");\n                item.setIconColor(\"red\");\n                main.setAttribute(\"data-state\", \"triggered\");\n                hours.style.setProperty(\"visibility\", \"visible\");\n                hours.style.setProperty(\"border-color\", hoursColor.RED);\n                hours.style.setProperty(\"color\", hoursColor.RED);\n                // Disable trap type dropdown box\n                trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"none\");\n                // Remove disable\n                animalSelect.removeAttribute(\"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"\");\n                animalSelect.style.setProperty(\"background-image\", \"\");\n                animalSelect.value = \"select animal\";\n                // Hide form screen\n                item.hideFormScreen();\n                item.info.State = 2;\n                // Hide screen reshows disable button\n                disableButton.style.setProperty(\"visibility\", \"hidden\");\n                // Publish change to server\n                // Set\n                setTitle.innerHTML = \"Triggered\";\n                break;             \n        }\n        //sortTable();\n        //trapTypeSelect.value = item.info.TrapType.toLowerCase();\n        // Update database\n        //item.info.SetTime = parseInt(item.info.SetTime);\n        packet = {};       \n        packet[id] = item.info;\n        if (updateServer !== false) {            \n            Script.Database.saveRecord(\"traps\", \"DeviceDefinitions\", JSON.stringify(packet));\n        }\n    };\n}\n\n// Update the stats of a card. It takes an object.\nfunction createUpdateStatsFunction(item) {\n    return function(stat, value) {\n        // Loop over object and update according\n        var setTime = item.querySelector(\"[data-stat='setTime']\");\n        var updateTime = item.querySelector(\"[data-stat='updateTime']\");\n        var temp = item.querySelector(\"[data-stat='temp']\");\n        var battery = item.querySelector(\"[data-stat='battery']\");\n        var signal = item.querySelector(\"[data-stat='signal'\");\n        var suburb = item.querySelector(\"[data-info='suburb']\");\n        var street = item.querySelector(\"[data-info='address']\");\n\n        switch (stat.toLowerCase()) {            \n            case \"temp\":\n                temp.innerHTML = value + \"°C\";\n                break;\n            case \"settime\":\n                var date = new Date(value).toLocaleString('en-GB');\n                var d = date.split(\", \");\n                var d0 = d[0].split(\"/\");\n                d0[2] = d0[2] - 2000;\n                d0 = d0.join(\"/\");\n                if (item.info.State === 0) {\n                    setTime.innerHTML = \"-\";\n                } else {\n                    setTime.innerHTML = d[1] + \"<br />\" + d0;\n                }\n                updateHours();\n                break;\n            case \"battery\":\n                switch (value) {\n                    case 1:\n                        //value = \"0 - 10%\";\n                        value = \"<b style='color: red';>Very Low</b>\";\n                        break;\n                    case 2:\n                        //value = \"10 - 25%\";\n                        value = \"Low\";\n                        break;\n                    case 3:\n                        //value = \"25 - 40%\";\n                        value = \"Medium\"\n                        break;\n                    case 4:\n                        //value = \"40% +\";\n                        value = \"Full\"\n                        break;\n                }\n                battery.innerHTML = value;\n                break;\n            case \"signal\":\n                // No signal transmitted\n                if (value == 99) {\n                    signal.innerHTML = \"<b style='color: red';>--</b>\";\n                    break;\n                }\n                \n                value = Math.round(value * 3.123);\n                \n                if (value < 35) {\n                    signal.innerHTML = \"<b style='color: red';>\" + value + \"%</b>\";\n                } else {\n                    signal.innerHTML = value + \"%\";\n                }\n                break;\n            case \"street\":\n                street.innerHTML = value;\n                break;\n            case \"suburb\":\n                suburb.innerHTML = value;\n                break;\n            // Default update time\n            case \"pulse\":\n                var date = new Date(value).toLocaleString('en-GB');\n                var d = date.split(\", \");\n                var d0 = d[0].split(\"/\");\n                d0[2] = d0[2] - 2000;\n                d0 = d0.join(\"/\");\n                \n                updateTime.innerHTML = d[1] + \"<br />\" + d0;\n                updateHours();\n        }\n    };\n}\n\nfunction createPopup(id, title, color) {\n    var item = Script.getScriptElement(\"popup2\");\n    item.children[1].setAttribute(\"data-name\", id.toLowerCase());\n    var titleElem = item.querySelector(\"[data-info='title'\");\n    var iconElem = item.querySelector(\"[data-info='icon']\");\n    titleElem.innerHTML = title;    \n    iconElem.classList = [];\n    iconElem.classList.add(\"\" + color + \"Icon\");\n    iconElem.classList.add(\"vertical-center\");\n    return item;\n}\n\n// Creates row entry\nfunction createRowEntry(title, address, suburb, hours, trapType) {\n        var item = Script.getScriptElement(\"card\").cloneNode(true);          \n        var main = item.querySelector(\"[data-section='main']\");\n        var titleElem = item.querySelector(\"[data-info='title']\");\n        var addressElem = item.querySelector(\"[data-info='address']\");\n        var suburbElem = item.querySelector(\"[data-info='suburb']\");\n        var hourElem = item.querySelector(\"[data-info='hours'\");  \n        var trapTypeElem = item.querySelector(\"[data-info='animalType']\");\n        // Set id\n        item.id = title;\n        // Update title tag\n        titleElem.innerHTML =  deviceNicknames[title];\n        // Update address\n        addressElem.innerHTML = address;\n        // Update Suburb\n        suburbElem.innerHTML = suburb;\n        // Update hours\n        hourElem.innerHTML = hours;\n        // Trap Type\n        trapTypeElem.innerHTML = trapType;   \n        main.style.setProperty(\"border-right\", \"\");        \n        // Add events to show panels on select.\n        item.openClearScreen = createClearFunction(item);\n        item.hideClearScreen = createHideClearFunction(item);\n        item.openFormScreen = createFormFunction(item);\n        item.hideFormScreen = createHideFormFunction(item);\n        item.setIconColor = createIconFunction(item);\n        item.setState = createSetStateFunction(item);\n        item.disableButtonFunction = disableButtonFunction(item);\n        item.submitButtonFunction = submitButtonFunction(item);\n        item.updateStats = createUpdateStatsFunction(item);\n        item.setTrapType = createTrapTypeFunction(item);\n        item.setTrapper = createTrapperFunction(item);\n        item.jump = createJumpFunction(item);\n   \n    \n        item.children[1].querySelector(\"[data-section='cell']\").onclick = item.openClearScreen;\n        item.children[1].querySelector(\"[data-button='clearButton']\").onclick = item.openFormScreen;\n        item.children[1].querySelector(\"[data-button='cancelButton']\").onclick = item.hideFormScreen;\n        item.children[1].querySelector(\"[data-button='deactivateButton']\").onclick = item.disableButtonFunction;\n        item.children[1].querySelector(\"[data-button='submitButton']\").onclick = item.submitButtonFunction;\n        item.children[1].querySelector(\"[data-info='suburb']\").onclick = item.jump;\n    \n        item.info = {};\n    return item;\n}\n\nfunction createTrapTypeFunction(item) {\n    return function(value) {\n        var trapElem = item.querySelector(\"[data-info='animalType']\");\n        trapElem.innerHTML = value;\n        item.info.TrapType = value;\n    };\n}\n\nfunction createTrapperFunction(item) {\n    return function(value) {\n        var trapperElem = item.querySelector(\"[data-info='trapperName']\");\n        trapperElem.innerHTML = value;\n        item.info.Trapper = value;\n    };\n}\n\nfunction createIconFunction(item) {\n    return function(color) {\n        var icon = item.querySelector(\"[data-info='icon']\");\n        switch (color) {\n            case \"grey\":\n                icon.classList = [];\n                icon.classList.add(\"greyIcon\");                \n                break;\n            case \"green\":\n                icon.classList = [];\n                icon.classList.add(\"greenIcon\");\n                break;\n            case \"red\":\n                icon.classList = [];\n                icon.classList.add(\"redIcon\");\n                break;\n        }\n    };\n}\n\nfunction disableButtonFunction(item) {\n    return function() {\n        item.openFormScreen();\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n        item.querySelector(\"[data-button='submitButton']\").innerHTML = \"DEACTIVATE\";\n        item.querySelector(\"[data-button='submitButton']\").style.setProperty(\"background-color\", \"#333333\");\n        trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n        trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n        trapTypeSelect.style.setProperty(\"background-image\", \"none\");       \n        animalTypeSelect.setAttribute(\"disabled\", \"disabled\");\n        animalTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n        animalTypeSelect.style.setProperty(\"background-image\", \"none\");\n    };\n}\n\nfunction submitButtonFunction(item) {\n    return function() {\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var button = item.querySelector(\"[data-button='submitButton']\");\n        var buttonText = item.querySelector(\"[data-button='submitButton']\").innerHTML.trim();\n        if (buttonText === \"DEACTIVATE\" && \n            trapperSelect.value.indexOf(\"select\") !== -1) {\n                alert(\"Please select a trapper.\");\n            return;\n        } else if (buttonText !== \"DEACTIVATE\") {\n            if (animalSelect.value.indexOf(\"select\") !== -1 && item.info.State != 0) {\n               alert(\"Please select an animal.\");\n               return;\n            } else if (trapperSelect.value.indexOf(\"select\") !== -1) {\n               alert(\"Please select a trapper.\");\n               return;\n            } else if (trapTypeSelect.value.indexOf(\"select\") !== -1) {\n               alert(\"Please select a trap type.\");\n               return;\n            }\n        }\n\n        switch(item.querySelector(\"[data-button='submitButton']\").innerHTML.trim()) {\n            case \"CLEAR\":\n                var packet = {\n                    value: \"0\"\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                item.setState(\"inactive\");\n                break;\n            case \"SET\":\n            case \"RESET\":\n                item.info.TrapType = trapTypeSelect.value;\n                item.info.Trapper = trapperSelect.value;\n                item.info.SetTime = new Date().getTime();\n                var packet = {\n                    value: \"1\"\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                packet.value = trapTypeSelect.value;\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPTYPE\", packet);\n                packet.value = trapperSelect.value;\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPPER\", packet);\n                item.setState(\"set\");\n                var d = new Date().getTime();\n                item.updateStats(\"setTime\", d);\n                item.info.SetTime = d;\n                var packet = {\n                    value: d.toString()\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/SETTIME\", packet);\n                break;\n            case \"DEACTIVATE\":\n                button.style.setProperty(\"background-color\", \"\");\n                var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n                var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n                trapTypeSelect.setAttribute(\"disabled\", \"\");\n                animalTypeSelect.setAttribute(\"disabled\", \"\");\n                var packet = {\n                    value: \"0\"\n                };\n\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                packet.value = \"\";\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPTYPE\", packet);\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPPER\", packet);\n                item.setState(\"inactive\");\n                break;\n        }\n    };\n}\n\nvar previousPin;\nfunction createClearFunction(item) {\n  return function(center) {\n      var button = item.querySelector(\"[data-button='clearButton'\");\n      var disableButton = item.querySelector(\"[data-button='deactivateButton'\");\n      var main = item.querySelector(\"[data-section='main']\");\n      button.style.setProperty(\"visibility\", \"visible\");\n      // Close current     \n      tableDom = Script.getWidgetDOM(\"page\");\n      var nodes = tableDom.querySelectorAll(\"[data-section='main']\");\n      var current = item.children[1];\n      if (item.info.State === 2 || item.info.State === 0) {\n          disableButton.style.setProperty(\"visibility\", \"none\");\n      } else {\n          disableButton.style.setProperty(\"visibility\", \"visible\");   \n      }\n      \n      // TODO remove loops\n      var current = -1;\n      for (var i = 0; i < nodes.length; i++) {\n          var n = nodes[i];\n          n.style.setProperty(\"border-right\", \"\");\n          // reset everything to false\n          if (main == n) {\n              current = i;\n              continue;\n          };\n          n.parentElement.parentElement.Open = false;\n      }\n      \n      nodes = tableDom.querySelectorAll(\"[data-section='clearScreen']\");\n      for (var i = 0; i < nodes.length; i++) {    \n          var n = nodes[i];\n          n.style.setProperty(\"display\", \"none\");\n      }\n      \n      nodes = tableDom.querySelectorAll(\"[data-section='formScreen']\");\n      for (var i = 0; i < nodes.length; i++) {    \n          var n = nodes[i];\n          n.style.setProperty(\"display\", \"none\");\n      }\n      \n      // Change pin background\n      if (previousPin) {\n          previousPin.value.content.classList.remove(\"pinSelected\");   \n      }\n      \n      // Exit if it was already open as it has now been closed.\n      if (item.Open) {\n          item.Open = false;\n          return;\n      } else {\n          item.Open = true;\n      }\n      \n      var section = item.children[1].querySelector(\"[data-section='clearScreen']\");\n      section.style.setProperty(\"display\", \"block\");\n      main.style.setProperty(\"border-right\", \"5px solid black\");\n      if (mode == modes.DESKTOP) {\n          // Center map\n          var pinName = item.id.toLowerCase();\n          var pinDetails = pins[pinName];\n          if (!pinDetails) {\n              return;\n          }\n          var packet = {\n              value: pinDetails.value.loc\n          };      \n          if (center !== true) {\n              Script.sendToWidget(\"pinMap\", \"set map\", packet.value, \"object\");\n          }     \n\n          // Set buttons to state\n          // save pin to revert later\n          pinDetails.value.content.classList.add(\"pinSelected\");\n          previousPin = pinDetails;\n      }\n  };\n}\n\nfunction createHideClearFunction(item) {\n    return function(event) {\n        var section = item.children[1].querySelector(\"[data-section='clearScreen']\");\n        section.style.setProperty(\"display\", \"none\");\n        var main = item.querySelector(\"[data-section='main']\");\n        main.style.setProperty(\"border-right\", \"\");\n        // Show clear button\n        var button = item.querySelector(\"[data-button='clearButton'\");\n        button.style.setProperty(\"visibility\", \"visible\");\n        var subButton = item.querySelector(\"[data-button='submitButton']\");\n        subButton.style.setProperty(\"background-color\", \"\");\n        subButton.innerHTML = \"CLEAR\";\n    };\n}\n\nfunction createFormFunction(item) {\n    return function(event) {\n            var section = item.children[1].querySelector(\"[data-section='formScreen']\");\n            section.style.setProperty(\"display\", \"block\");\n            // Hide clear button\n            var button = item.querySelector(\"[data-button='clearButton']\");\n            button.style.setProperty(\"visibility\", \"hidden\"); \n            var deactivateButton = item.querySelector(\"[data-button='deactivateButton']\");\n            deactivateButton.style.setProperty(\"visibility\", \"hidden\"); \n            // Set dropdown values\n            var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n            var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n            var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n            var trapper = item.querySelector(\"[data-info='trapperName']\");\n            var trapType = item.querySelector(\"[data-info='animalType']\");\n            var subButton = item.querySelector(\"[data-button='submitButton']\");\n            if (item.info.State == 2) {\n                trapperSelect.value = \"select trapper\";\n                trapTypeSelect.value = item.info.TrapType.toLowerCase();\n                animalTypeSelect.removeAttribute(\"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"\");\n                subButton.innerHTML = \"CLEAR\";\n            } else if (item.info.State == 1) {\n                trapTypeSelect.value = item.info.TrapType.toLowerCase();\n                trapperSelect.value = \"select trapper\";\n                animalTypeSelect.removeAttribute(\"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"\");\n            } else if (item.info.State == 0) {\n                trapperSelect.value = \"select trapper\";\n                trapTypeSelect.value = \"select trap type\";\n                animalTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"none\");\n                subButton.innerHTML = \"SET\";\n            }\n        };\n}\n\nfunction createHideFormFunction(item) {\n    return function(event) {\n        // if selects are not properly filled out - return.\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var deactivateButton = item.querySelector(\"[data-button='deactivateButton']\");              \n        var section = item.children[1].querySelector(\"[data-section='formScreen']\");\n        var subButton = item.querySelector(\"[data-button='submitButton']\");\n        subButton.style.setProperty(\"background-color\", \"\");\n        subButton.innerHTML = \"RESET\";\n        animalSelect.removeAttribute(\"disabled\");\n        animalSelect.style.setProperty(\"background-color\", \"\");\n        animalSelect.style.setProperty(\"background-image\", \"\");\n        animalSelect.value = \"select animal\";\n        section.style.setProperty(\"display\", \"none\");       \n        // Show clear button\n        var button = item.querySelector(\"[data-button='clearButton'\");\n        if (item.info.State === 1) {\n            deactivateButton.style.setProperty(\"visibility\", \"visible\");   \n        }\n        button.style.setProperty(\"visibility\", \"visible\");\n    };\n}\n\nfunction createJumpFunction(item) {\n        return function(event) {\n            var sp = Script.getState(\"selectedPin\");\n            if (sp) {\n               var oldPin = Script.getState(\"pins\")[sp];\n               oldPin.value.content.classList.remove(\"pinSelected\");   \n            }\n            \n            Script.setState(\"selectedPin\", \"trap \" + item.info.ID);\n            var p = Script.getState(\"pins\")[\"trap \" + item.info.ID];\n            p.value.content.classList.add(\"pinSelected\");\n            Script.System.jumpToScreen(\"Map\");    \n        }\n};\n\n// Returns the difference between two dates in hours.\n// 36e5 = 60*60*1000, dividing by which converts the milliseconds difference into hours.\nfunction diffInHours(date1, date2) {\n    var hours = Math.floor(Math.abs(date1 - date2) / (60 * 60 * 1000));   \n    if (isNaN(hours)) {\n       return \"-\";   \n    }\n    return hours;\n}"},"ev":{"serverEvents":{"inputEvents":{"Database":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed"}}}}},"page":{"t":"Table","lX":0,"lY":0,"sX":10.87,"sY":12.27,"s":"Traps","ps":{"enabled":true,"scalingType":"OK","width":"100%","height":"99.44%","x":"0%","y":"0%"},"ver":"190104c190915","z":"100","dis":false,"a":{"text color":"#000000","columns":"Page","enable sorting":"false","color rows":"false","append":"false","display column titles":"false","colWidths":""},"ev":{}},"Scripting#0":{"t":"Scripting","lX":545,"lY":30,"sX":1,"sY":1,"s":"Traps","ps":{"enabled":false,"scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar tableLoaded = false;\nvar backlog = [];\nvar modes = {\n    DESKTOP: 1,\n    MOBILE: 2\n};\n\n// Mode of device, turns off non-mobile issues\nvar mode = modes.DESKTOP; \n\nScript.on('load', function() {\n    Script.subscribeToState(\"tableLoaded\", function(channel, value) {\n            Script.System.subscribeToChannel(\"kg/brisbane/+/+\");\n            //Script.sendToWidget(\"pinMap\", \"set map\", { value: sortedArray[0].toLowerCase() });\n    });    \n});\n\n/**\n * Response to message from server channel\n */\nvar firstLoadLat = false;\nvar firstLoadLng = false;\nvar firstLoad = true;\nScript.on('server', function(eventData) { \n    // Lock server until other is loaded\n    // Update card\n\n    if (eventData.label == \"sensacollection\") {\n        var packet = JSON.parse(eventData.value);\n        var channel = eventData.sysmeta.channel;\n        \n        // Send to self for processing\n        var headers = packet.headers;\n        var keys = Object.keys(packet.data);\n        for (var i = 0; i < keys.length; i++) {\n            for (var j = 0; j < headers.length; j++) {\n                   \n                if (headers[j] == \"instance\") {\n                    continue;\n                }\n                var info = packet.data[keys[i]][j]; \n                var newChannel = channel;\n                newChannel = newChannel.split(\"/\");\n                newChannel[2] = keys[i];\n                newChannel[3] = headers[j];\n                newChannel = newChannel.join(\"/\");\n                var sys = {};\n                sys.channel = newChannel;\n                var event = {};\n                event.sysmeta = sys;\n                event.value = {};\n                event.value = info;\n                serverEvent(event);\n            }\n        }\n        return;    \n    }\n    \n    var cards = Script.getState(\"cards\");\n    var fqn = eventData.sysmeta.channel.split(\"/\");\n    var id = fqn[2];\n    var scope = fqn[3].toLowerCase();    \n    var card = cards[\"trap \" + id];\n    // No card found in db\n    if (card == undefined) return;\n    \n    /*\n    if (eventData.date === undefined) {\n        eventData.date = new Date().getTime();    \n    }\n    */\n    card.updateStats(scope, Math.round(eventData.value));\n\n    if (scope === \"activated\") {\n        /*\n        if (eventData.date === undefined) {\n            eventData.date = new Date().getTime();    \n        } else {\n            eventData.date = new Date(eventData.date).getTime();   \n        }\n        \n        if (eventData.date - card.info.SetTime > 0) {\n            card.updateStats(\"setTime\", eventData.date);\n            card.info.SetTime = eventData.date;\n            */\n            //if (card.info.State == 1 & eventData.value == 2) {\n            if (eventData.value == 2) {\n                if (mode == modes.DESKTOP) {\n                    var p = Script.getState(\"pins\")[\"trap \" + id];\n                    var icon = p.value.content.querySelector(\"[data-info='icon']\");\n                    icon.classList = [];\n                    icon.classList.add(\"redIcon\");\n                }\n                card.setState(\"triggered\");\n            } else if (eventData.value == 1) {\n                if (mode == modes.DESKTOP) {\n                    var p = Script.getState(\"pins\")[\"trap \" + id];\n                    var icon = p.value.content.querySelector(\"[data-info='icon']\");\n                    icon.classList = [];\n                    icon.classList.add(\"greenIcon\");\n                    var packet = Script.getState(\"pins\")[\"trap \" + id];\n                }\n                card.setState(\"set\");\n            } else if (eventData.value == 0) {\n                if (mode == modes.DESKTOP) {\n                    var p = Script.getState(\"pins\")[\"trap \" + id];\n                    var icon = p.value.content.querySelector(\"[data-info='icon']\");\n                    icon.classList = [];\n                    icon.classList.add(\"greyIcon\");\n                }\n                card.setState(\"inactive\");\n            }         \n       // }\n    }\n    \n    if (scope === \"traptype\") {\n        card.setTrapType(eventData.value);    \n    }\n    \n    if (scope === \"trapper\") {\n        card.setTrapper(eventData.value);   \n    }\n    \n    if (scope === \"settime\" && card.info.State != 0) {\n        card.info.SetTime = +eventData.value;\n        card.updateStats(\"settime\", +eventData.value);    \n    }\n    \n    if (scope === \"suburb\") {\n        card.updateStats(\"suburb\", eventData.value);    \n    }\n    \n    if (scope === \"street\") {\n        card.updateStats(\"street\", eventData.value);    \n    }\n    \n    if ((scope === \"lat\" || scope === \"lng\")) {\n       var pins = Script.getState(\"pins\");\n       var p = pins[\"trap \" + id];\n        if (scope === \"lat\") {\n            p.value.loc.lat = parseFloat(eventData.value);\n            firstLoadLat = true;\n        } else {\n            p.value.loc.lng = parseFloat(eventData.value);\n            firstLoadLng = true;\n        }\n        if (card.info.State != 0) {\n            //Script.sendToWidget(\"pinMap\", \"add custom popup\", p);\n            if (\"Trap \" + id == Script.getState(\"sortedArray\")[0] && (firstLoadLat && firstLoadLng) && firstLoad) {\n                //Script.sendToWidget(\"pinMap\", \"set map\", { value: p.value.loc });\n                firstLoad = false;\n            }\n        }\n    }\n    \n    console.log(eventData);\n});\n\nfunction createPopup(title, color) {\n    var item = Script.getScriptElement(\"popup2\");\n    item.children[1].setAttribute(\"data-name\", title.toLowerCase());\n    var titleElem = item.querySelector(\"[data-info='title'\");\n    var iconElem = item.querySelector(\"[data-info='icon']\");\n    titleElem.innerHTML = title;    \n    iconElem.classList = [];\n    iconElem.classList.add(\"\" + color + \"Icon\");\n    iconElem.classList.add(\"vertical-center\");\n    return item;\n}"},"ev":{}},"popup2":{"t":"Scripting","lX":180,"lY":45,"sX":1,"sY":1,"s":"Traps","ps":{"enabled":false,"scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"html","code editor":"<div>\n<style>\n   /* Triggered */\n  .redIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n  }\n      \n  /* Inactive */\n  .greyIcon {\n    background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n    background-size: contain;\n    background-color: white;\n    border-radius: 5px;\n   }\n        \n   /* Set  */\n   .greenIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n   }\n    \n    .pinSelected {\n       background-color: black;   \n    }\n    \n    .main {\n      background-color: rgba(128, 128, 128, 0.7);\n      color: white;\n      border: 2px solid black;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      min-width: 140px;\n    }\n\n    .title {\n      font-size: large;\n    }\n\n    .name {\n      float: right;\n    }\n    \n    .container {\n      height: 30px;\n      position: relative; \n    }\n        \n    .vertical-center {\n      margin: 0;\n      position: absolute;\n      top: 50%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n\n</style>\n<div class=\"main\" onclick=\"fw.fireEvent('custom', this.getAttribute('data-name'))\">\n  <div class=\"container\">\n    <div data-info=\"icon\" class=\"redIcon\" style=\"display: inline-block; width: 25px; height: 25px; margin-right: 4px;\"></div>\n    <div data-info=\"title\" class=\"title vertical-center\" style=\"display: inline-block; left: 30px;\">\n      loading...\n    </div>\n  </div>\n</div>\n</div>"},"ev":{}},"MapScript":{"t":"Scripting","lX":100,"lY":70,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n\nvar hoursColor = {\n    GREEN: \"green\",\n    YELLOW: \"yellow\",\n    RED: \"red\"\n};\n\nvar tableDom;\n\nvar popupTemplate = Script.getScriptElement(\"popup\");\n\nvar reverseKey = \"test_ATDRoSFNoEdFmeeRu9NDihfXyugUbhKR6dWiestT\";\n\n// Pins\nvar pins = {};\nvar rows = {};\n\nvar hourRefresh = 10 * 60 * 1000;\nvar modes = {\n    DESKTOP: 1,\n    MOBILE: 2\n};\n\n// Mode of device, turns off non-mobile issues\nvar mode = modes.MOBILE; \n\nScript.on('load', function() {\n    Script.System.toggleSidebar(\"CLOSE\");\n    Script.Database.readRecords(\"traps\", \"DeviceDefinitions\");   \n    var packet = {\n        value: \"1\"\n    };  \n    \n     var selectedPin = Script.getState(\"selectedPin\");\n     if (selectedPin === null) {\n         return\n     }\n    \n     var p = Script.getState(\"pins\")[selectedPin];\n     // They have just gone straight to the map\n     if (p === undefined) {\n         return\n     }\n    debugger;\n     Script.sendToWidget(\"pinMap\", \"set map\", p.value.loc, \"object\");\n    Script.sendToWidget(\"pinMap\", \"add custom popup\", p.value);\n});\n\n// Handle sidebar and pins.\nScript.on(\"client\", function(eventData) {   \n    // Center map\n    var pinName = eventData.value.toLowerCase();\n    var pinDetails = pins[pinName];\n    eventData.value = pinDetails.value.loc;  \n    // Open pin on side.\n    var rowDetails = rows[pinName];\n    rowDetails.openClearScreen(true);\n});\n\n/**\nScript.on(\"server\", function(eventData) {\n    if (eventData.usrmeta.func !== \"READRECS\") {\n        return;   \n    }\n    // Database \n    var data = eventData.value.data;\n    var keys = Object.keys(data);\n\n    for (var i in Object.keys(data)) {\n        var k = keys[i];\n        var val = data[k];\n        var device = \"Trap \" + k;\n        \n        if (Script.getState(\"cards\")[device] == undefined) {\n            // Create row for device TODO address lookup and set time.\n            var trapType = val[0];\n            var state = parseInt(val[1]);\n            var lat = parseFloat(val[4]);\n            var lng = parseFloat(val[3]);\n            var street = val[5];\n            var suburb = val[6].toUpperCase();\n            var trapper = val[7].toUpperCase();\n            var setTime = undefined;\n            var hours = 0;\n            \n            if (val[8] !== undefined) {\n                if (val[8] === -1) {\n                    setTime = new Date();   \n                } else {\n                    setTime = new Date(parseInt(val[8])); \n                }\n                hours = diffInHours(setTime, new Date());\n            }\n           \n            var info = {\n                ID: k,\n                TrapType: trapType,\n                State: state,\n                Lng: lng,\n                Lat: lat,\n                Street: street,\n                Suburb: suburb,\n                Trapper: trapper.toLowerCase(),\n                SetTime: setTime.getTime()\n            };\n                        \n            var pinPacket; \n            \n            switch (state) {\n                case 0: \n                    pinPacket = createPopupPacket(device, lat, lng, \"grey\");                   \n                    break;\n                case 1:\n                    pinPacket = createPopupPacket(device, lat, lng, \"green\");\n                    break;\n                case 2:\n                    pinPacket = createPopupPacket(device, lat, lng, \"red\");\n                    break;\n            }\n            \n            pins[device.toLowerCase()] = pinPacket;\n            Script.sendToWidget(\"pinMap\", \"add custom popup\", pinPacket);\n        }\n    }\n    Script.setState(\"pins\", pins);\n    Script.setState(\"MapLoaded\", true);\n});\n\n*/\n\nfunction sortTable() {\n     // Sort table\n    var sortedRowArray = Object.values(rows).sort(function(a, b) {\n        if (a.info.State !== b.info.State) {            \n            return b.info.State - a.info.State;\n        } else {\n            return a.info.SetTime - b.info.SetTime;\n        }\n    });\n    \n    var sortedArray = sortedRowArray.map(function(item) {\n        return \"Trap \" + item.info.ID;    \n    }); \n    \n    Script.setState(\"sortedArray\", sortedArray); \n    Script.sendToWidget(\"page\", \"sort row by array\", sortedArray);\n}\n\n// Update hours\nfunction updateHours() {    \n    var keys = Object.keys(rows);\n    for (var i = 0; i < keys.length; i++) {\n        var row = rows[keys[i]];\n        if (row.info.State == 0) {\n        }\n        var hours = row.querySelector(\"[data-info='hours']\");\n        // Calc new hours\n        var setTime = row.info.SetTime;\n        if (setTime === undefined) {\n            continue;\n        }\n\n        if (row.info.State == 0) {\n            hours.innerHTML = \"\";\n        } else {\n            hours.innerHTML = diffInHours(new Date(setTime), new Date());            \n        }\n        row.updateStats(\"settime\", setTime);\n    }\n}\n\n\nfunction createPopupPacket(trapNum, lat, lng, color) {\n    var packet = {\n        value: {\n            id: trapNum.toLowerCase(),\n            loc: {\n                lat: lat,\n                lng: lng\n            },\n            content: createPopup(trapNum, color)\n        }\n    };\n    pins[trapNum.toLowerCase()] = packet;\n    return packet;\n}\n\n// Takes a function to return once a response has been given.\nfunction createReverseLookup(item) {\n    return function reverseLookup(lat, lng) {\n        // Test key here\n        var Http = new XMLHttpRequest();\n        var url=\"https://api.nettoolkit.com/v1/geo/reverse-geocodes?latitude=\" + lat + \"&longitude=\" + lng + \"&key=\" + reverseKey;\n        Http.open(\"GET\", url);\n        Http.send();\n        Http.onreadystatechange = function(e) {\n            console.log(Http.responseText);\n            if (Http.responseText !== \"\") {\n                var result = JSON.parse(Http.responseText);\n                var address = result.results[0].address.split(\",\");\n                var street = address[0];\n                var subPost = address[1].trim() + \" \" + address[2].trim();\n                subPost = subPost.toUpperCase(); \n                item.updateStats(\"street\", street);\n                item.updateStats(\"suburb\", subPost);\n                item.info.Street = street;\n                item.info.Suburb = subPost;\n                item.Open = false;\n                // Save\n                var packet = {};       \n                packet[id] = item.info;\n                if (updateServer !== false) {\n                    Script.Database.saveRecord(\"traps\", \"DeviceDefinitions\", JSON.stringify(packet));\n                }\n            }\n        };\n    };\n}\n\nfunction createSetStateFunction(item) {\n    return function(state, h, updateServer) {\n        var clearButton = item.querySelector(\"[data-button='clearButton']\");\n        var disableButton = item.querySelector(\"[data-button='deactivateButton']\");\n        var submitButton = item.querySelector(\"[data-button='submitButton']\");\n        var cancelButton = item.querySelector(\"[data-button='cancelButton']\");\n        var hours = item.querySelector(\"[data-info='hours']\");\n        // Selects\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        // Stats\n        var setTitle = item.querySelector(\"[data-title='set']\");\n        var setTime = item.querySelector(\"[data-stat='setTime']\");\n        var updateTime = item.querySelector(\"[data-stat='updateTime']\");        \n        // Update state\n        var main = item.querySelector(\"[data-section='main']\");\n        // Trapper name\n        var trapper = item.querySelector(\"[data-info='trapperName']\");\n        var trapType = item.querySelector(\"[data-info='animalType']\");\n        // Update item state\n        // Get title\n        var title = item.querySelector(\"[data-info='title']\").innerHTML.toLowerCase();\n        var id = item.info.ID;\n        var packet = {};\n        \n        switch(state) {\n            case \"inactive\":\n                // Hide trapper name and trap type\n                trapper.style.setProperty(\"visibility\", \"hidden\");\n                trapType.style.setProperty(\"visibility\", \"hidden\");\n                disableButton.style.setProperty(\"visibility\", \"hidden\");\n                submitButton.innerHTML = \"SET\";\n                submitButton.style.setProperty(\"background-color\", \"\");\n                clearButton.innerHTML = \"SET\";\n                clearButton.style.setProperty(\"background-color\", \"\");\n                item.setIconColor(\"grey\");\n                main.setAttribute(\"data-state\", \"inactive\");\n                hours.style.setProperty(\"visibility\", \"hidden\");\n                // Set\n                setTitle.innerHTML = \"Set\";\n                // Disable dropdown box\n                animalSelect.setAttribute(\"disabled\", \"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"lightgray\");\n                animalSelect.style.setProperty(\"background-image\", \"none\");\n                animalSelect.value = \"none\";     \n                // Remove disable\n                trapTypeSelect.removeAttribute(\"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"\");  \n                trapTypeSelect.value = \"select trap type\";                \n                trapperSelect.value = \"select trapper\";\n                //item.updateStats(\"settime\", new Date().getTime());\n                packet = {};\n                packet.value = title;\n                Script.sendToWidget(\"pinMap\", \"remove custom popup\", packet.value);\n                // Hide form screen\n                item.info.State = 0;\n                item.updateStats(\"settime\", 0);\n                item.hideFormScreen();\n                break;\n            case \"set\":\n                if (item.info.Trapper === undefined \n                    || item.info.Trapper === \"\" \n                    || item.info.Trapper.indexOf(\"select\") !== -1) {\n                    alert(\"Trap must have a trapper\");\n                    return;\n                }\n                // Update address incase it has moved.\n                //item.reverseLookup(lat, lng);              \n                // Show hidden components\n                // Hide forms screen\n                item.hideFormScreen();\n                item.hideClearScreen();\n                trapper.style.setProperty(\"visibility\", \"visible\");\n                trapType.style.setProperty(\"visibility\", \"visible\");\n                disableButton.style.setProperty(\"visibility\", \"visible\");\n                submitButton.innerHTML = \"RESET\";\n                clearButton.innerHTML = \"CHECK\";\n                clearButton.style.setProperty(\"background-color\", \"\");\n                item.setIconColor(\"green\");\n                main.setAttribute(\"data-state\", \"set\");\n                // Set disable on animal trap type\n                setTitle.innerHTML = \"Set\";\n                // Disable dropdown box\n                trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"none\");\n                // Remove disable\n                animalSelect.removeAttribute(\"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"\");\n                animalSelect.style.setProperty(\"background-image\", \"\");\n                animalSelect.value = \"select animal\";\n                // Recolor\n                hours.style.setProperty(\"border-color\", hoursColor.GREEN);\n                hours.style.setProperty(\"color\", hoursColor.GREEN);\n                // If hours passed through, don't reset\n                if (!h) {\n                    // Set hours to 0 and recolour\n                    hours.style.setProperty(\"visibility\", \"visible\");\n                    hours.innerHTML = \"0\";\n                    hours.style.setProperty(\"border-color\", hoursColor.GREEN);\n                    hours.style.setProperty(\"color\", hoursColor.GREEN);\n                }\n                // Change trapper name on card\n                trapper.innerHTML = item.info.Trapper.toLowerCase();\n                trapType.innerHTML = item.info.TrapType.toLowerCase();\n                disableButton.style.setProperty(\"visibility\", \"visible\");\n                // Update custom popup\n                if (mode == modes.DESKTOP) {\n                var popup = pins[title];\n                var icon = popup.value.content.querySelector(\"[data-info='icon']\");\n                    icon.classList = [];\n                    icon.classList.add(\"greenIcon\");\n                    icon.classList.add(\"vertical-center\");\n                    Script.sendToWidget(\"pinMap\", \"add custom popup\", popup);\n                }\n                item.info.State = 1;\n                break;\n            case \"triggered\":\n                // Show hidden components\n                trapper.style.setProperty(\"visibility\", \"visible\");\n                trapType.style.setProperty(\"visibility\", \"visible\");\n                submitButton.innerHTML = \"CLEAR\";\n                submitButton.style.setProperty(\"background-color\", \"#c90d00\");\n                clearButton.innerHTML = \"CLEAR\";\n                clearButton.style.setProperty(\"background-color\", \"#c90d00\");\n                item.setIconColor(\"red\");\n                main.setAttribute(\"data-state\", \"triggered\");\n                hours.style.setProperty(\"visibility\", \"visible\");\n                hours.style.setProperty(\"border-color\", hoursColor.RED);\n                hours.style.setProperty(\"color\", hoursColor.RED);\n                // Disable trap type dropdown box\n                trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                trapTypeSelect.style.setProperty(\"background-image\", \"none\");\n                // Remove disable\n                animalSelect.removeAttribute(\"disabled\");\n                animalSelect.style.setProperty(\"background-color\", \"\");\n                animalSelect.style.setProperty(\"background-image\", \"\");\n                animalSelect.value = \"select animal\";\n                // Hide form screen\n                item.hideFormScreen();\n                item.info.State = 2;\n                // Hide screen reshows disable button\n                disableButton.style.setProperty(\"visibility\", \"hidden\");\n                // Publish change to server\n                // Set\n                setTitle.innerHTML = \"Triggered\";\n                break;             \n        }\n        //sortTable();\n        //trapTypeSelect.value = item.info.TrapType.toLowerCase();\n        // Update database\n        item.info.SetTime = parseInt(item.info.SetTime);\n        packet = {};       \n        packet[id] = item.info;\n        if (updateServer !== false) {            \n            Script.Database.saveRecord(\"traps\", \"DeviceDefinitions\", JSON.stringify(packet));\n        }\n    };\n}\n\n// Update the stats of a card. It takes an object.\nfunction createUpdateStatsFunction(item) {\n    return function(stat, value) {\n        // Loop over object and update according\n        var setTime = item.querySelector(\"[data-stat='setTime']\");\n        var updateTime = item.querySelector(\"[data-stat='updateTime']\");\n        var temp = item.querySelector(\"[data-stat='temp']\");\n        var battery = item.querySelector(\"[data-stat='battery']\");\n        var signal = item.querySelector(\"[data-stat='signal'\");\n        var suburb = item.querySelector(\"[data-info='suburb']\");\n        var street = item.querySelector(\"[data-info='address']\");\n\n        switch (stat.toLowerCase()) {            \n            case \"temp\":\n                temp.innerHTML = value + \"°C\";\n                break;\n            case \"settime\":\n                var date = new Date(value).toLocaleString('en-GB');\n                var d = date.split(\", \");\n                var d0 = d[0].split(\"/\");\n                d0[2] = d0[2] - 2000;\n                d0 = d0.join(\"/\");\n                if (item.info.State === 0) {\n                    setTime.innerHTML = \"-\";\n                } else {\n                    setTime.innerHTML = d[1] + \"<br />\" + d0;\n                }\n                break;\n            case \"battery\":\n                switch (value) {\n                    case 1:\n                        //value = \"0 - 10%\";\n                        value = \"<b style='color: red';>Very Low</b>\";\n                        break;\n                    case 2:\n                        //value = \"10 - 25%\";\n                        value = \"Low\";\n                        break;\n                    case 3:\n                        //value = \"25 - 40%\";\n                        value = \"Medium\"\n                        break;\n                    case 4:\n                        //value = \"40% +\";\n                        value = \"Full\"\n                        break;\n                }\n                battery.innerHTML = value;\n                break;\n            case \"signal\":\n                if (value < 35) {\n                    signal.innerHTML = \"<b style='color: red';>\" + value + \"%</b>\";\n                } else {\n                    signal.innerHTML = value + \"%\";\n                }\n                break;\n            case \"street\":\n                street.innerHTML = value;\n                break;\n            case \"suburb\":\n                suburb.innerHTML = value;\n                break;\n            // Default update time\n            case \"pulse\":\n                var date = new Date(value).toLocaleString('en-GB');\n                var d = date.split(\", \");\n                var d0 = d[0].split(\"/\");\n                d0[2] = d0[2] - 2000;\n                d0 = d0.join(\"/\");\n                \n                updateTime.innerHTML = d[1] + \"<br />\" + d0;\n                updateHours();\n        }\n    };\n}\n\nfunction createPopup(title, color) {\n    var item = Script.getScriptElement(\"popup\");\n    item.children[1].setAttribute(\"data-name\", title.toLowerCase());\n    var titleElem = item.querySelector(\"[data-info='title'\");\n    var iconElem = item.querySelector(\"[data-info='icon']\");\n    titleElem.innerHTML = title;    \n    iconElem.classList = [];\n    iconElem.classList.add(\"\" + color + \"Icon\");\n    iconElem.classList.add(\"vertical-center\");\n    return item;\n}\n\n// Creates row entry\nfunction createRowEntry(title, address, suburb, hours, trapType) {\n        var item = Script.getScriptElement(\"card\").cloneNode(true);          \n        var main = item.querySelector(\"[data-section='main']\");\n        var titleElem = item.querySelector(\"[data-info='title']\");\n        var addressElem = item.querySelector(\"[data-info='address']\");\n        var suburbElem = item.querySelector(\"[data-info='suburb']\");\n        var hourElem = item.querySelector(\"[data-info='hours'\");  \n        var trapTypeElem = item.querySelector(\"[data-info='animalType']\");\n        // Set id\n        item.id = title;\n        // Update title tag\n        titleElem.innerHTML = title;\n        // Update address\n        addressElem.innerHTML = address;\n        // Update Suburb\n        suburbElem.innerHTML = suburb;\n        // Update hours\n        hourElem.innerHTML = hours;\n        // Trap Type\n        trapTypeElem.innerHTML = trapType;   \n        main.style.setProperty(\"border-right\", \"\");        \n        // Add events to show panels on select.\n        item.openClearScreen = createClearFunction(item);\n        item.hideClearScreen = createHideClearFunction(item);\n        item.openFormScreen = createFormFunction(item);\n        item.hideFormScreen = createHideFormFunction(item);\n        item.setIconColor = createIconFunction(item);\n        item.setState = createSetStateFunction(item);\n        item.disableButtonFunction = disableButtonFunction(item);\n        item.submitButtonFunction = submitButtonFunction(item);\n        item.updateStats = createUpdateStatsFunction(item);\n        item.reverseLookup = createReverseLookup(item);\n        item.setTrapType = createTrapTypeFunction(item);\n        item.setTrapper = createTrapperFunction(item);\n    \n        item.children[1].querySelector(\"[data-section='cell']\").onclick = item.openClearScreen;\n        item.children[1].querySelector(\"[data-button='clearButton']\").onclick = item.openFormScreen;\n        item.children[1].querySelector(\"[data-button='cancelButton']\").onclick = item.hideFormScreen;\n        item.children[1].querySelector(\"[data-button='deactivateButton']\").onclick = item.disableButtonFunction;\n        item.children[1].querySelector(\"[data-button='submitButton']\").onclick = item.submitButtonFunction;\n    \n        item.info = {};\n    return item;\n}\n\nfunction createTrapTypeFunction(item) {\n    return function(value) {\n        var trapElem = item.querySelector(\"[data-info='animalType']\");\n        trapElem.innerHTML = value;\n    };\n}\n\nfunction createTrapperFunction(item) {\n    return function(value) {\n        var trapperElem = item.querySelector(\"[data-info='trapperName']\");\n        trapperElem.innerHTML = value;\n    };\n}\n\nfunction createIconFunction(item) {\n    return function(color) {\n        var icon = item.querySelector(\"[data-info='icon']\");\n        switch (color) {\n            case \"grey\":\n                icon.classList = [];\n                icon.classList.add(\"greyIcon\");                \n                break;\n            case \"green\":\n                icon.classList = [];\n                icon.classList.add(\"greenIcon\");\n                break;\n            case \"red\":\n                icon.classList = [];\n                icon.classList.add(\"redIcon\");\n                break;\n        }\n    };\n}\n\nfunction disableButtonFunction(item) {\n    return function() {\n        item.openFormScreen();\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n        item.querySelector(\"[data-button='submitButton']\").innerHTML = \"DEACTIVATE\";\n        item.querySelector(\"[data-button='submitButton']\").style.setProperty(\"background-color\", \"#333333\");\n        trapTypeSelect.setAttribute(\"disabled\", \"disabled\");\n        trapTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n        trapTypeSelect.style.setProperty(\"background-image\", \"none\");       \n        animalTypeSelect.setAttribute(\"disabled\", \"disabled\");\n        animalTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n        animalTypeSelect.style.setProperty(\"background-image\", \"none\");\n    };\n}\n\nfunction submitButtonFunction(item) {\n    return function() {\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var button = item.querySelector(\"[data-button='submitButton']\");\n        var buttonText = item.querySelector(\"[data-button='submitButton']\").innerHTML.trim();\n        if (buttonText === \"DEACTIVATE\" && \n            trapperSelect.value.indexOf(\"select\") !== -1) {\n                alert(\"Please select an option.\");\n            return;\n        } else if (buttonText !== \"DEACTIVATE\") {\n            if (animalSelect.value.indexOf(\"select\") !== -1 && item.info.State != 0) {\n               alert(\"Please select an animal.\");\n               return;\n            } else if (trapperSelect.value.indexOf(\"select\") !== -1) {\n               alert(\"Please select a trapper.\");\n               return;\n            } else if (trapTypeSelect.value.indexOf(\"select\") !== -1) {\n               alert(\"Please select a trap type.\");\n               return;\n            }\n        }\n\n        switch(item.querySelector(\"[data-button='submitButton']\").innerHTML.trim()) {\n            case \"CLEAR\":\n                var packet = {\n                    value: \"0\"\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                item.setState(\"inactive\");\n                break;\n            case \"SET\":\n            case \"RESET\":\n                item.info.TrapType = trapTypeSelect.value;\n                item.info.Trapper = trapperSelect.value;\n                item.info.SetTime = new Date().getTime();\n                var packet = {\n                    value: \"1\"\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                packet.value = trapTypeSelect.value;\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPTYPE\", packet);\n                packet.value = trapperSelect.value;\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPPER\", packet);\n                item.setState(\"set\");\n                var d = new Date().getTime();\n                item.updateStats(\"setTime\", d);\n                item.info.SetTime = d;\n                var packet = {\n                    value: d.toString()\n                };\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/SETTIME\", packet);\n                break;\n            case \"DEACTIVATE\":\n                button.style.setProperty(\"background-color\", \"\");\n                var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n                var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n                trapTypeSelect.setAttribute(\"disabled\", \"\");\n                animalTypeSelect.setAttribute(\"disabled\", \"\");\n                var packet = {\n                    value: \"0\"\n                };\n\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/ACTIVATED\", packet);\n                packet.value = \"\";\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPTYPE\", packet);\n                Script.System.publishToChannel(\"KG/BRISBANE/\" + item.info.ID + \"/TRAPPER\", packet);\n                item.setState(\"inactive\");\n                break;\n        }\n    };\n}\n\nvar previousPin;\nfunction createClearFunction(item) {\n  return function(center) {\n      var button = item.querySelector(\"[data-button='clearButton'\");\n      var disableButton = item.querySelector(\"[data-button='deactivateButton'\");\n      var main = item.querySelector(\"[data-section='main']\");\n      button.style.setProperty(\"visibility\", \"visible\");\n      // Close current     \n      tableDom = Script.getWidgetDOM(\"page\");\n      var nodes = tableDom.querySelectorAll(\"[data-section='main']\");\n      var current = item.children[1];\n      if (item.info.State === 2 || item.info.State === 0) {\n          disableButton.style.setProperty(\"visibility\", \"none\");\n      } else {\n          disableButton.style.setProperty(\"visibility\", \"visible\");   \n      }\n      \n      // TODO remove loops\n      var current = -1;\n      for (var i = 0; i < nodes.length; i++) {\n          var n = nodes[i];\n          n.style.setProperty(\"border-right\", \"\");\n          // reset everything to false\n          if (main == n) {\n              current = i;\n              continue;\n          };\n          n.parentElement.parentElement.Open = false;\n      }\n      \n      nodes = tableDom.querySelectorAll(\"[data-section='clearScreen']\");\n      for (var i = 0; i < nodes.length; i++) {    \n          var n = nodes[i];\n          n.style.setProperty(\"display\", \"none\");\n      }\n      \n      nodes = tableDom.querySelectorAll(\"[data-section='formScreen']\");\n      for (var i = 0; i < nodes.length; i++) {    \n          var n = nodes[i];\n          n.style.setProperty(\"display\", \"none\");\n      }\n      \n      // Change pin background\n      if (mode == modes.DESKTOP) {\n          if (previousPin) {\n              previousPin.value.content.classList.remove(\"pinSelected\");   \n          }\n      }\n      \n      // Exit if it was already open as it has now been closed.\n      if (item.Open) {\n          item.Open = false;\n          return;\n      } else {\n          item.Open = true;\n      }\n      \n      var section = item.children[1].querySelector(\"[data-section='clearScreen']\");\n      section.style.setProperty(\"display\", \"block\");\n      main.style.setProperty(\"border-right\", \"5px solid black\");\n      if (mode == modes.DESKTOP) {\n          // Center map\n          var pinName = item.id.toLowerCase();\n          var pinDetails = pins[pinName];\n          if (!pinDetails) {\n              return;\n          }\n          var packet = {\n              value: pinDetails.value.loc\n          };      \n          if (center !== true) {\n              Script.sendToWidget(\"pinMap\", \"set map\", packet);\n          }     \n\n          // Set buttons to state\n          // save pin to revert later\n          pinDetails.value.content.classList.add(\"pinSelected\");\n          previousPin = pinDetails;\n      }\n  };\n}\n\nfunction createHideClearFunction(item) {\n    return function(event) {\n        var section = item.children[1].querySelector(\"[data-section='clearScreen']\");\n        section.style.setProperty(\"display\", \"none\");\n        var main = item.querySelector(\"[data-section='main']\");\n        main.style.setProperty(\"border-right\", \"\");\n        // Show clear button\n        var button = item.querySelector(\"[data-button='clearButton'\");\n        button.style.setProperty(\"visibility\", \"visible\");\n        var subButton = item.querySelector(\"[data-button='submitButton']\");\n        subButton.style.setProperty(\"background-color\", \"\");\n        subButton.innerHTML = \"CLEAR\";\n    };\n}\n\nfunction createFormFunction(item) {\n    return function(event) {\n            var section = item.children[1].querySelector(\"[data-section='formScreen']\");\n            section.style.setProperty(\"display\", \"block\");\n            // Hide clear button\n            var button = item.querySelector(\"[data-button='clearButton']\");\n            button.style.setProperty(\"visibility\", \"hidden\"); \n            var deactivateButton = item.querySelector(\"[data-button='deactivateButton']\");\n            deactivateButton.style.setProperty(\"visibility\", \"hidden\"); \n            // Set dropdown values\n            var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n            var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n            var animalTypeSelect = item.querySelector(\"[data-select='animalType']\");\n            var trapper = item.querySelector(\"[data-info='trapperName']\");\n            var trapType = item.querySelector(\"[data-info='animalType']\");\n            var subButton = item.querySelector(\"[data-button='submitButton']\");\n            if (item.info.State == 2) {\n                trapperSelect.value = \"select trapper\";\n                trapTypeSelect.value = item.info.TrapType.toLowerCase();\n                animalTypeSelect.removeAttribute(\"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"\");\n                subButton.innerHTML = \"CLEAR\";\n            } else if (item.info.State == 1) {\n                trapTypeSelect.value = item.info.TrapType.toLowerCase();\n                trapperSelect.value = \"select trapper\";\n                animalTypeSelect.removeAttribute(\"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"\");\n            } else if (item.info.State == 0) {\n                trapperSelect.value = \"select trapper\";\n                trapTypeSelect.value = \"select trap type\";\n                animalTypeSelect.setAttribute(\"disabled\", \"disabled\");\n                animalTypeSelect.style.setProperty(\"background-color\", \"lightgray\");\n                animalTypeSelect.style.setProperty(\"background-image\", \"none\");\n                subButton.innerHTML = \"SET\";\n            }\n        };\n}\n\nfunction createHideFormFunction(item) {\n    return function(event) {\n        // if selects are not properly filled out - return.\n        var animalSelect = item.querySelector(\"[data-select='animalType']\");\n        var trapperSelect = item.querySelector(\"[data-select='trapper']\");\n        var trapTypeSelect = item.querySelector(\"[data-select='trapType']\");\n        var deactivateButton = item.querySelector(\"[data-button='deactivateButton']\");              \n        var section = item.children[1].querySelector(\"[data-section='formScreen']\");\n        var subButton = item.querySelector(\"[data-button='submitButton']\");\n        subButton.style.setProperty(\"background-color\", \"\");\n        subButton.innerHTML = \"RESET\";\n        animalSelect.removeAttribute(\"disabled\");\n        animalSelect.style.setProperty(\"background-color\", \"\");\n        animalSelect.style.setProperty(\"background-image\", \"\");\n        animalSelect.value = \"select animal\";\n        section.style.setProperty(\"display\", \"none\");       \n        // Show clear button\n        var button = item.querySelector(\"[data-button='clearButton'\");\n        if (item.info.State === 1) {\n            deactivateButton.style.setProperty(\"visibility\", \"visible\");   \n        }\n        button.style.setProperty(\"visibility\", \"visible\");\n    };\n}\n\n// Returns the difference between two dates in hours.\n// 36e5 = 60*60*1000, dividing by which converts the milliseconds difference into hours.\nfunction diffInHours(date1, date2) {\n    var hours = Math.floor(Math.abs(date1 - date2) / 36e5);   \n    if (isNaN(hours)) {\n       return \"-\";   \n    }\n    return hours;\n}"},"ev":{"serverEvents":{"inputEvents":{"New Event #0":{"channel":"$DB/ADMIN/MANAGE/RESPONSE","event":"feed"}}}}},"pinMap":{"t":"Maps","lX":0,"lY":0,"sX":3.46,"sY":1.77,"s":"Map","ps":{"enabled":"true","scalingType":"OK","width":"100%","height":"100%","x":"0%","y":"0%"},"ver":"190104c190915","z":"100","dis":false,"a":{"zoom":"14","Coop. Scrolling":"false","latitude":"-27.46794","longitude":"153.02809"},"ev":{}},"popup":{"t":"Scripting","lX":244,"lY":56,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"50%","height":"50%","x":"0","y":"0"},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"html","code editor":"<div>\n<style>\n   /* Triggered */\n  .redIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n  }\n      \n  /* Inactive */\n  .greyIcon {\n    background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n    background-size: contain;\n    background-color: white;\n    border-radius: 5px;\n   }\n        \n   /* Set  */\n   .greenIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n   }\n    \n    .pinSelected {\n       background-color: black;   \n    }\n    \n    .main {\n      background-color: rgba(128, 128, 128, 0.7);\n      color: white;\n      border: 2px solid black;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      min-width: 140px;\n    }\n\n    .title {\n      font-size: large;\n    }\n\n    .name {\n      float: right;\n    }\n    \n    .container {\n      height: 30px;\n      position: relative; \n    }\n        \n    .vertical-center {\n      margin: 0;\n      position: absolute;\n      top: 50%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n\n</style>\n<div class=\"main\" onclick=\"fw.fireEvent('custom', this.getAttribute('data-name'))\">\n  <div class=\"container\">\n    <div data-info=\"icon\" class=\"redIcon\" style=\"display: inline-block; width: 25px; height: 25px; margin-right: 4px;\"></div>\n    <div data-info=\"title\" class=\"title vertical-center\" style=\"display: inline-block; left: 30px;\">\n      Trap 534\n    </div>\n  </div>\n</div>\n</div>"},"ev":{}},"updateChannels":{"t":"Scripting","lX":420,"lY":75,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"190104c190915","z":"140","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"//# sourceURL=dynamic-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\nvar tableLoaded = false;\nvar backlog = [];\n\nScript.on('load', function() {\n    Script.System.subscribeToChannel(\"kg/brisbane/+/activated\");\n    Script.System.subscribeToChannel(\"kg/brisbane/+/lat\");\n    Script.System.subscribeToChannel(\"kg/brisbane/+/lng\");\n});\n\n/**\n * Response to message from server channel\n */\nScript.on('server', function(eventData) { \n    // Lock server until other is loaded\n    debugger;\n    var fqn = eventData.sysmeta.channel.split(\"/\");\n    var id = fqn[2];\n    var scope = fqn[3].toLowerCase();\n    var saveToCards = false;\n    var cards;\n    var pins;\n    var card;\n    \n    if (Script.getState(\"cards\") && Script.getState(\"cards\")[\"trap \" + id]) {\n        saveToCards = true;\n        card = Script.getState(\"cards\")[\"trap \" + id];\n    }\n\n    if (Script.getState(\"pins\") === null) {\n        Script.setState(\"pins\", {});  \n    }\n    \n    pins = Script.getState(\"pins\");\n    if (pins[\"trap \" + id] == null) {       \n        var p = createPopupPacket(\"trap \" + id);\n        pins[\"trap \" + id] = p;\n    }\n    \n\n    if (eventData.date === undefined) {\n        eventData.date = new Date().getTime();    \n    }\n    if (scope === \"activated\") {      \n        if (eventData.value == 2) {\n            var p = Script.getState(\"pins\")[\"trap \" + id];\n            var icon = p.value.content.querySelector(\"[data-info='icon']\");\n            icon.classList = [];\n            icon.classList.add(\"redIcon\");\n        } else if (eventData.value == 1) {\n            var p = Script.getState(\"pins\")[\"trap \" + id];\n            var icon = p.value.content.querySelector(\"[data-info='icon']\");\n            icon.classList = [];\n            icon.classList.add(\"greenIcon\");\n         } else if (eventData.value == 0) {\n            var p = Script.getState(\"pins\")[\"trap \" + id];\n            var icon = p.value.content.querySelector(\"[data-info='icon']\");\n            icon.classList = [];\n            icon.classList.add(\"greyIcon\");\n         }         \n    }\n    \n    if (scope === \"lat\" || scope === \"lng\") {\n       var pins = Script.getState(\"pins\");\n       var p = pins[\"trap \" + id];\n        if (scope === \"lat\") {\n            p.value.loc.lat = parseFloat(eventData.value);\n            if (saveToCards)\n                card.info.Lat = parseFloat(eventData.value);     \n        } else {\n            p.value.loc.lng = parseFloat(eventData.value);\n            if (saveToCards)\n                card.info.Lng = parseFloat(eventData.value);     \n        }\n        Script.sendToWidget(\"pinMap\", \"add custom popup\", p.value);\n    }\n    \n    if (pins[Script.getState(\"selectedPin\")] != undefined) {\n        var p = pins[Script.getState(\"selectedPin\")];\n        Script.sendToWidget(\"pinMap\", \"add custom popup\", p.value);\n    }\n    \n    \n});\n\nfunction createPopupPacket(trapNum, lat, lng, color) {\n    var packet = {\n        value: {\n            id: trapNum.toLowerCase(),\n            loc: {\n                lat: lat,\n                lng: lng\n            },\n            content: createPopup(trapNum, color)\n        }\n    };\n    Script.getState(\"pins\")[trapNum.toLowerCase()] = packet;\n    return packet;\n}\n\nfunction createPopup(title, color) {\n    var item = Script.getScriptElement(\"popup\");\n    item.children[1].setAttribute(\"data-name\", title.toLowerCase());\n    var titleElem = item.querySelector(\"[data-info='title'\");\n    var iconElem = item.querySelector(\"[data-info='icon']\");\n    titleElem.innerHTML = title;    \n    iconElem.classList = [];\n    iconElem.classList.add(\"\" + color + \"Icon\");\n    iconElem.classList.add(\"vertical-center\");\n    return item;\n}"},"ev":{}},"Button#0":{"t":"Button","lX":9,"lY":791,"sX":4.32,"sY":1.43,"s":"Map","ps":{"enabled":"true","scalingType":"OK","width":"24.97%","height":"7.45%","x":"0.52%","y":"89.46%"},"ver":"190104c190915","dis":false,"a":{"button name":"Back","color":"orange strong"},"ev":{"clientEvents":{"outputEvents":{"Back":{"channel":"jump/receive value","event":"pressed","trigger":"pressed"}}}}},"Jump":{"t":"Scripting","lX":156,"lY":640,"sX":1,"sY":1,"s":"Map","ps":{"enabled":"false","scalingType":"NOSCALE","width":"50%","height":"50%","x":"0","y":"0"},"ver":"190104c190915","vis":false,"dis":false,"a":{"script type":"javascript","code editor":"\n/**\n * Response to message on client channel\n */\nScript.on('client', function(eventData) {\n    Script.System.jumpToScreen(\"Traps\");\n});"},"ev":{"clientEvents":{"inputEvents":{"jump":{"channel":"jump/receive value","event":"receive value"}}}}}},"screens":{"Traps":{"index":0,"icon":"timer","meta":""},"Map":{"index":1,"icon":"map","meta":""}},"meta":""}