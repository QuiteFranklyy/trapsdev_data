{"device":"DESKTOP","widgets":{"cardSortDrop":{"t":"Dropdown","lX":5,"lY":15,"sX":1.95,"sY":1,"s":"Traps Desktop","ps":{"enabled":false,"scalingType":"NOVERT","width":"14.41%","height":"7.51%","x":"5px","y":"15px"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Sort","bold":"true","default options":"trapper,trap type,state,device type","default value":"state","color":"black"},"ev":{"clientEvents":{"outputEvents":{"sort":{"channel":"sortText/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"userFilterDrop":{"t":"Dropdown","lX":210,"lY":15,"sX":1.85,"sY":1,"s":"Traps Desktop","ps":{"enabled":false,"scalingType":"NOVERT","width":"16.77%","height":"4.02%","x":"13.51%","y":"15px"},"ver":"190104c190915","dis":false,"tt":"","a":{"bold":"true","label text":"Filter","default options":"","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Set Filter":{"channel":"setFilterSelect/receive value","event":"receive value","important":"false"},"set Trappers":{"channel":"setFilter/receive list","event":"receive list","important":"false"}},"outputEvents":{"Fire selected":{"channel":"filterCards/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"trapCardDesktop":{"t":"Trap","lX":0,"lY":80,"sX":4,"sY":7.94,"s":"Traps Desktop","ps":{"enabled":true,"scalingType":"OK","width":"400px","height":"100% - 80px","x":"0px","y":"80px"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"wait for filter":"true"},"ev":{"clientEvents":{"inputEvents":{"Set Trappers":{"channel":"setTrappers/set trappers","event":"set trappers","important":"false"},"Pin pressed":{"channel":"pin pressed/toggle card","event":"toggle card","important":"false"},"Set Trap Types":{"channel":"setTrapTypes/set trap type","event":"set trap type","important":"false"},"Sort":{"channel":"sortCards/sort","event":"sort","important":"false"},"Receive db info":{"channel":"cardDb/receive value","event":"receive value","important":"false"},"nicknames":{"channel":"cardNicknames/receive value","event":"receive value","important":"false"},"filter":{"channel":"filterCards/filter by trappers","event":"filter by trappers","important":"false"},"default trapper":{"channel":"defaultTrapper/set default trapper","event":"set default trapper","important":"false"},"Remove Card":{"channel":"remove-card/remove card","event":"remove card","important":"false"},"Toggle Card":{"channel":"toggle-card/toggle card","event":"toggle card","important":"false"},"Receive sensor info":{"channel":"cardInfo/receive value","event":"receive value","important":"true"},"new Photo":{"channel":"newPhoto/set new photo status","event":"set new photo status","important":"false"},"Set animals":{"channel":"setAnimals/set animals","event":"set animals","important":"false"}},"outputEvents":{"Clear Trap":{"channel":"clearTrap/receive value","event":"clear trap","trigger":"clear trap","important":"false"},"Check trap":{"channel":"checkTrap/receive value","event":"check trap","trigger":"check trap","important":"false"},"Trap Set":{"channel":"trapSet/receive value","event":"set trap","trigger":"set trap","important":"false"},"card opened":{"channel":"cardSelected/receive value","event":"card selected","trigger":"card selected","important":"false"},"card closed":{"channel":"cardClosed/receive value","event":"card closed","trigger":"card closed","important":"false"},"camera Pressed":{"channel":"cameraPressed/receive value","event":"photo icon pressed","trigger":"photo icon pressed","important":"false"},"plus icon pressed":{"channel":"new virtual trap/receive value","event":"plus icon pressed","trigger":"plus icon pressed","important":"false"},"record catch":{"channel":"save catch/receive value","event":"record catch","trigger":"record catch","important":"false"},"Address pressed":{"channel":"toggle-card/receive value","event":"address pressed","trigger":"address pressed","important":"false"},"New Event #1":{"channel":"requestPhoto/receive value","event":"request photo pressed","trigger":"request photo pressed","important":"false"},"deactivate trap":{"channel":"deactivateTrap/receive value","event":"deactivate trap","trigger":"deactivate trap","important":"false"}}}}},"cardScriptEngineDesktop":{"t":"Scripting","lX":55,"lY":210,"sX":1,"sY":1,"s":"Traps Desktop","ps":{"enabled":false,"scalingType":"OK","width":"6.52%","height":"8.04%","x":"3.65%","y":"14.39%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"","import file":"true","file name":"cardScriptEngine.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{"File Response":{"channel":"$SYS/FILES/RESPONSE/+","event":"feed","important":"false"},"Devices":{"channel":"$DEV/ADMIN/GETNICKNAMES/RESPONSE","event":"feed","important":"false"},"yabby data":{"channel":"[accountid]/YABBY/+/+","event":"feed","important":"false"},"Broadcast":{"channel":"$APP/[accountid]/ATS/BROADCAST","event":"feed","important":"false"},"trailcam":{"channel":"[accountid]/trail4g/+/+","event":"feed","important":"false"},"ATS":{"channel":"[accountid]/ats2/+/+","event":"feed","important":"false"},"Virtual Data":{"channel":"[accountid]/VTRAP/+/+","event":"feed","important":"false"}}}}},"popupTemplateDesktop":{"t":"Scripting","lX":180,"lY":460,"sX":1,"sY":1,"s":"Traps Desktop","ps":{"enabled":false,"scalingType":"NOSCALE","width":"4.2%","height":"8.04%","x":"10.11%","y":"15.68%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"html","code editor":"<div>\n<style>\n   /* Triggered */\n  .redIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Red.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n  }\n      \n  /* Inactive */\n  .greyIcon {\n    background-image: url(\"/userfiles/Animal-Trap-Icon-DkGrey.svg\");\n    background-size: contain;\n    background-color: white;\n    border-radius: 5px;\n   }\n        \n   /* Set  */\n   .greenIcon {\n     background-image: url(\"/userfiles/Animal-Trap-Icon-Green_2.svg\");\n     background-size: contain;\n     background-color: white;\n     border-radius: 5px;\n   }\n\t.virtual.greenIcon {\n\t\tbackground-image: url(\"/userfiles/Virtual_Trap_Icon_Green.svg\")\n    }\n\t\n\t.camera.greenIcon {\n\t\tbackground-image: url(\"/userfiles/ATS-App-Icon-Green-v2.svg\") !important\n\t}\n    \n    .pinSelected {\n       background-color: black;   \n    }\n    \n    .main {\n      background-color: rgba(128, 128, 128, 0.7);\n      color: white;\n      border: 2px solid black;\n      border-radius: 4px;\n      padding: 4px;\n      overflow: hidden;\n      min-width: 140px;\n    }\n\n    .title {\n      font-size: large;\n    }\n\n    .name {\n      float: right;\n    }\n    \n    .container {\n      height: 30px;\n      position: relative; \n    }\n        \n    .vertical-center {\n      margin: 0;\n      position: absolute;\n      top: 50%;\n      -ms-transform: translateY(-50%);\n      transform: translateY(-50%);\n    }\n\n</style>\n<div class=\"main pinSelected\"  onclick=\"fw.fireEvent('custom popup pressed', this.querySelector('[data-value=\\'id\\']').innerHTML);\">\n  <div class=\"container\">\n\t<div data-value=\"id\" style=\"display: none;\">--</div>\n    <div data-value=\"icon\" class=\"redIcon\" style=\"display: inline-block; width: 25px; height: 25px; margin-right: 4px;\"></div>\n    <div data-value=\"title\" class=\"title vertical-center\" style=\"display: inline-block; left: 30px;\">\n      --\n    </div>\n  </div>\n</div>\n</div>"},"ev":{}},"cardDesktopMap":{"t":"Maps","lX":410,"lY":0,"sX":2.67,"sY":1.75,"s":"Traps Desktop","ps":{"enabled":true,"scalingType":"OK","width":"100% - 410px","height":"100%","x":"410px","y":"0px"},"ver":"190104c190915","z":"100","dis":false,"tt":"","a":{"zoom":"5","clustering size":"30","api key":"AIzaSyDPZqlIT0Mx7pQDSBqQto-5mYB4PSBlT0U","Coop. Scrolling":"false","scale control":"false","rotate control":"false","fullscreen control":"false"},"ev":{"clientEvents":{"inputEvents":{"set map":{"channel":"setMap/set map","event":"set map","important":"false"},"map pins":{"channel":"map pins/add custom popup","event":"add custom popup","important":"false"},"New Event #1":{"channel":"/receive value","event":"receive value","important":"false"},"remove pin":{"channel":"remove pin/remove custom popup","event":"remove custom popup","important":"false"},"set map zoom":{"channel":"set map zoom/set zoom","event":"set zoom","important":"false"}},"outputEvents":{"Pin pressed":{"channel":"pin pressed/receive value","event":"custom popup pressed","trigger":"custom popup pressed","important":"false"}}}}},"Image#0":{"t":"Image","lX":25,"lY":255,"sX":10,"sY":5.45,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"","width":"57.57%","height":"81.59%","x":"1.71%","y":"20.63%"},"ver":"202605c190915","dis":false,"tt":"","a":{"border width":"","3D shadow":"true","background":"grey","opacity":"1","image":""},"ev":{"clientEvents":{"inputEvents":{"Set Image":{"channel":"iamge-set/set image","event":"set image","important":"false"}}}}},"Carousel#0":{"t":"Carousel","lX":25,"lY":85,"sX":9.95,"sY":1.6,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"57.28%","height":"18.06%","x":"1.92%","y":"6.8%"},"ver":"190104c190915","dis":false,"tt":"","a":{"per page":"4","focus border":"orange"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"thumb-receive/receive value","event":"receive value","important":"false"},"Clear":{"channel":"thumb-clear/clear","event":"clear","important":"false"},"Next":{"channel":"thumb-next/next","event":"next","important":"false"},"goTo":{"channel":"thumb-goTo/goTo","event":"goTo","important":"false"},"Previous":{"channel":"thumb-previous/previous","event":"previous","important":"false"},"Remove":{"channel":"thumb-remove/remove slide","event":"remove slide","important":"false"}},"outputEvents":{"Pressed":{"channel":"thumb-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"},"Changed":{"channel":"thumb-changed/receive value","event":"onChange","trigger":"onChange","important":"false"}}}}},"Label#0":{"t":"Label","lX":1040,"lY":125,"sX":2,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"11.51%","height":"2.88%","x":"60.1%","y":"34.99%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<b>Time: </b>[#]"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"time-receive/receive value","event":"receive value","important":"false"}}}}},"Icon#0":{"t":"Icon","lX":5,"lY":470,"sX":1.6,"sY":1.6,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"5.47%","height":"6.66%","x":"0%","y":"38.11%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"chevron-compact-left","outline color":"no outline","color":"orange strong","hover":"orange"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"previous-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#1":{"t":"Icon","lX":960,"lY":460,"sX":1.6,"sY":1.6,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"5.96%","height":"6.47%","x":"51.01%","y":"28.24%"},"ver":"200628c190915","dis":false,"tt":"","a":{"icon file":"chevron-compact-right","outline color":"no outline","color":"orange strong","hover":"orange"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"next-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#3":{"t":"Icon","lX":915,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.5%","height":"2.75%","x":"49.22%","y":"2%"},"ver":"200628c190915","dis":false,"tt":"Archive","a":{"icon file":"archive","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"archive-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"archive-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#4":{"t":"Icon","lX":985,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.46%","height":"2.67%","x":"52.94%","y":"2.02%"},"ver":"200628c190915","dis":false,"tt":"Delete","a":{"icon file":"trash","outline color":"no outline","color":"red"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"delete-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#5":{"t":"Icon","lX":880,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.44%","height":"2.67%","x":"24.63%","y":"1.94%"},"ver":"200628c190915","dis":false,"tt":"Favourite","a":{"icon file":"star","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"favourite-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"favourite-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#2":{"t":"Icon","lX":1280,"lY":265,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.9%","height":"2.83%","x":"17.04%","y":"149.21%"},"ver":"200628c190915","dis":false,"tt":"save","a":{"outline color":"no outline"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"save-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#7":{"t":"Icon","lX":1320,"lY":265,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.26%","height":"2.61%","x":"21.34%","y":"83.06%"},"ver":"200628c190915","dis":false,"tt":"clear","a":{"outline color":"no outline","icon file":"x"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"clear-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Icon#8":{"t":"Icon","lX":950,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.44%","height":"2.67%","x":"28.09%","y":"2.1%"},"ver":"200628c190915","dis":false,"tt":"Download","a":{"icon file":"download","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"download-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"image-tags":{"t":"Input","lX":1030,"lY":285,"sX":3.3,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"13.88%","height":"4.41%","x":"59.36%","y":"47.58%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Tags","bold":"true","form id":"image-tagging","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"tags-receive/receive value","event":"receive value","important":"false"}}}}},"image-comments":{"t":"Text Area","lX":1030,"lY":345,"sX":3.3,"sY":1.06,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"13.88%","height":"8.82%","x":"59.24%","y":"55.3%"},"ver":"190104c190915","dis":false,"tt":"","a":{"bold":"true","label text":"Comments","form id":"image-tagging","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"comments-receive/receive value","event":"receive value","important":"false"}}}}},"Label#2":{"t":"Label","lX":1040,"lY":225,"sX":2.25,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"9.47%","height":"2.08%","x":"1.47%","y":"76.54%"},"ver":"200124c190915","z":"110","dis":false,"tt":"","a":{"font size":"14","label text":"<b>Address:&nbsp;</b>[#]"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"address-receive/receive value","event":"receive value","important":"false"}}}}},"Input#0":{"t":"Input","lX":670,"lY":30,"sX":0.71,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"4.09%","height":"4.41%","x":"30.34%","y":"2.71%"},"ver":"270520c190915","dis":false,"tt":"","a":{"type":"number","default value":"1","color":"grey"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"file-index-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"On Change":{"channel":"file-index-change/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"Label#3":{"t":"Label","lX":735,"lY":40,"sX":0.7,"sY":1.4,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"4.03%","height":"3.95%","x":"42.31%","y":"4.4%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<b><font size=\"4\">of&nbsp; [#]</font></b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"file-count-receive/receive value","event":"receive value","important":"false"}}}}},"Icon#9":{"t":"Icon","lX":845,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.33%","height":"3.78%","x":"35.77%","y":"2.02%"},"ver":"200628c190915","dis":false,"tt":"View Video","a":{"icon file":"camera-video","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"video-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"Pressed":{"channel":"video-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Label#4":{"t":"Label","lX":1040,"lY":175,"sX":3.15,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"13.25%","height":"2.08%","x":"1.47%","y":"73.29%"},"ver":"200124c190915","z":"110","dis":false,"tt":"","a":{"font size":"14","label text":"<b>Filename:&nbsp;</b>[#]<b>&nbsp;</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"filename-receive/receive value","event":"receive value","important":"false"}}}}},"Label#5":{"t":"Label","lX":1040,"lY":200,"sX":3.13,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"13.17%","height":"2.08%","x":"1.47%","y":"74.79%"},"ver":"200124c190915","z":"110","dis":false,"tt":"","a":{"font size":"14","label text":"<b>Camera Name:&nbsp;</b>[#]<b>&nbsp;</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"camera-name-receive/receive value","event":"receive value","important":"false"}}}}},"Dropdown#0":{"t":"Dropdown","lX":25,"lY":20,"sX":2.05,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"11.8%","height":"5.72%","x":"1.71%","y":"1.62%"},"ver":"190104c190915","dis":false,"tt":"","a":{"bold":"true","label text":"Filter By","default options":"All,Favourite,Archived,Not Viewed","default value":"All"},"ev":{"clientEvents":{"inputEvents":{"Reset":{"channel":"filter-reset/reset default","event":"reset default","important":"false"}},"outputEvents":{"Selected":{"channel":"filter-selected/receive value","event":"selected","trigger":"selected","important":"false"}}}}},"Label#7":{"t":"Label","lX":1040,"lY":150,"sX":2.05,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"8.62%","height":"2.08%","x":"43.75%","y":"12.48%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<b>Date: </b>[#]<br>"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"date-receive/receive value","event":"receive value","important":"false"}}}}},"Maps#0":{"t":"Maps","lX":1040,"lY":460,"sX":0.61,"sY":0.64,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"12.83%","height":"37.6%","x":"43.67%","y":"38.27%"},"ver":"190104c190915","dis":false,"tt":"","a":{"display POIs":"true","zoom":"14","api key":"AIzaSyDPZqlIT0Mx7pQDSBqQto-5mYB4PSBlT0U","scale control":"false","rotate control":"false","street view control":"false","fullscreen control":"false"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"image-viewer-map-receive/add custom popup","event":"add custom popup","important":"false"},"Set Map":{"channel":"image-viewer-set-map/set map","event":"set map","important":"false"},"Clear":{"channel":"image-viewer-map-clear/clear map","event":"clear map","important":"false"},"Set Zoom":{"channel":"image-viewer-map-set-zoom/set zoom","event":"set zoom","important":"false"}}}}},"Label#1":{"t":"Label","lX":435,"lY":40,"sX":0.2,"sY":1.4,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"0.84%","height":"2.91%","x":"18.21%","y":"3.33%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<font size=\"4\"><b>--</b></font>"},"ev":{"clientEvents":{"inputEvents":{}}}},"Date#1":{"t":"Input","lX":450,"lY":20,"sX":1.7,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.79%","height":"6.06%","x":"25.79%","y":"2.29%"},"ver":"270520c190915","dis":false,"tt":"","a":{"type":"date","form id":"DateFilter","label text":"To","color":"grey","bold":"true"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"image-viewer-start-date-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"On Change":{"channel":"image-viewer-start-date-change/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"Date#2":{"t":"Input","lX":270,"lY":20,"sX":1.7,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOVERT","width":"9.79%","height":"4.41%","x":"15.31%","y":"2.4%"},"ver":"270520c190915","dis":false,"tt":"","a":{"type":"date","form id":"DateFilter","label text":"From","color":"grey","bold":"true"},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"image-viewer-end-date-receive/receive value","event":"receive value","important":"false"}},"outputEvents":{"On Change":{"channel":"image-viewer-end-date-change/receive value","event":"on change","trigger":"on change","important":"false"}}}}},"ImageViewerController":{"t":"Scripting","lX":265,"lY":830,"sX":1,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOSCALE","width":"7.36%","height":"14.97%","x":"62.91%","y":"44.91%"},"ver":"200124c190915","z":"140","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/******************************************************************\n\t\t\t\tGLOBALS\n******************************************************************/\nvar imageIndex;\nvar carouselIndex = 0;\nvar loaded = [];\nvar currentImage;\nvar camera_images;\nvar carouselPhotos;\nvar camname;\nvar offset = 0;\nvar video = false;\nvar filter = \"ALL\";\n\n/******************************************************************\n\t\t\t\tFUNCTIONS\n******************************************************************/\nfunction create_popup() {\n\tvar el = new Image();\n\tel.src = \"../images/icons/bootstrap/camera-fill.svg\";\n\treturn el;\n}\n\nfunction map_array_to_carousel_obj(arr) {\n\tif (arr.length < 9) {\n\t\tthrow new Error(\"Array too small\");\n\t}\n\tvar asso = (arr.length >= 10 ? arr[9]: \"\");\n\tvar obj = {\n\t\tfilename: arr[0],\n\t\tcamname: arr[1],\n\t\tdatetime: arr[2],\n\t\tviewed: arr[3],\n\t\tfavourite: arr[4],\n\t\tdeleted: arr[5],\n\t\tarchive: arr[6],\n\t\tcomments: arr[7],\n\t\ttags: arr[8],\n\t\tassociated_video: asso,\n\t\tlat: arr[10],\n\t\tlong: arr[11],\n\t\taccount: arr[12]\n\t};\n\treturn obj;\n}\n\nfunction dateChange(eventData, channel) {\n\tvar start = Math.floor( Date.now() / 1000);\n\tvar end = Math.floor(new Date(0).getTime() / 1000 );\n\tvar obj = Script.getForm(\"DateFilter\");\n\tvar startDateArray = obj[\"Date#1\"].split(\"-\");\n\tvar endDateArray = obj[\"Date#2\"].split(\"-\");\n\tif (obj[\"Date#2\"] !== \"\") {\n\t\tend = Math.floor(new Date(endDateArray[0], endDateArray[1] - 1, endDateArray[2], 0).getTime() / 1000);\n\t}\n\tif (obj[\"Date#1\"] !== \"\") {\n\t\tstart = Math.floor(new Date(startDateArray[0], startDateArray[1] - 1, startDateArray[2], 24).getTime() / 1000);\n\t}\n\tvar data = {};\n\tObject.keys(camera_images.data).forEach(function (key, index, array) {\n\t\tvar datetime = camera_images.data[key][2];\n\t\tif (datetime <= start && datetime >= end) {\n\t\t\tdata[key] = camera_images.data[key];\n\t\t}\n\t});\n\tvar value = {\n\t\tdata: data\n\t};\n\tClient.clearDirtyFlag();\n\tpopulate_carousel(value);\n}\n\nfunction get_carousel_images(camname, filter){\n\tClientEvents.publish(\"iamge-set\", \"/images/blank.png\");\n\tif (filter !== undefined) {\n\t\tfilter = \" AND \" + filter;\n\t} else {\n\t\tfilter = \"\";\n\t}\n\tDatabase.readRecords(\n\t\t\"photos\",\n\t\t\"photos\",\n\t\tfunction (dbResponse) {\n\t\t\tcamera_images = dbResponse.value;\n\t\t\tpopulate_carousel(dbResponse.value);\n\t\t},\n\t\t{\n\t\t\tcolumns:\"filename,camname,datetime,viewed,favourite,deleted,archive,comments,tags,associatedvideo,lat,long,account\",\n\t\t\tfilter: \"camname='\"+camname+\"' AND deleted=0 AND account=\" + User.accountid + filter,\n\t\t\torder: \"ORDER BY datetime DESC\"\n\t\t}\n\t);\n}\n\nfunction set_video(obj) {\n\tvar loc = obj.camname.toUpperCase().replace(\" \", \"_\");\n\tif (obj.associated_video === \"\") {\n\t\t var i = parseInt(obj.filename.substr(obj.filename.length - 8, 4));\n\t\t var j = i+2;\n\t\t console.log(i, j);\n\t\t var str = obj.filename.replace(i.toString(), j.toString());\n\t\t ClientEvents.publish(\"iamge-set\", str + \".MOV\");\n\t\t//  ClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" +  obj.account + \"/\" + loc + \"/\" + str + \".MOV\");\n\t} else {\n\t\t// ClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + obj.account + \"/\" + loc + \"/\" + obj.associated_video);\n\t\tClientEvents.publish(\"iamge-set\", obj.associated_video);\n\t}\n}\n\nfunction populate_fields(obj) {\n\t// Will need to change this to look in right folder when updating to that build\n\tvar cameraFolder = obj.camname.toUpperCase().replace(\" \", \"_\");\n\tif (obj == undefined) {\n\t\treturn;\n\t}\n\tif (obj.camname == undefined || obj.filename == undefined) {\n\t\treturn;\n\t}\n\tif (video) {\n\t\tset_video(obj);\n\t} else {\n\t\tClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + obj.account + \"/\" + cameraFolder + \"/\" +obj.filename + \"-preview.JPG\");\n\t}\n\tClientEvents.publish(\"image-viewer-map-clear\", \"\", false);\n\tvar content = create_popup();\n\tvar loc = {lat: parseFloat(obj.lat), lng: parseFloat(obj.long)};\n\tClientEvents.publish(\"image-viewer-map-receive\", {id: obj.filename, loc: loc, content: content}, false);\n\tClientEvents.publish(\"image-viewer-set-map\", loc);\n\tClientEvents.publish(\"image-viewer-map-set-zoom\", 15);\n\t\n\tset_filename(obj.filename);\n\tvar fav = (obj.favourite === \"1\" ? true : false);\n\tvar arch = (obj.archive === \"1\" ? true : false);\n\t\n\tvar datetime = new Date(parseInt(obj.datetime * 1000)).toLocaleString(\"en-AU\").split(\",\");\n\t\n\tClientEvents.publish(\"time-receive\", datetime[1]);\n\tClientEvents.publish(\"date-receive\", datetime[0]);\n\t//ClientEvents.publish(\"customer-receive\", \"\");\n\t//ClientEvents.publish(\"address-receive\", \"\");\n\tClientEvents.publish(\"camera-name-receive\", obj.camname);\n\n\tset_favourite(fav);\n\tset_archive(arch);\n\t//view_image(obj);\n\tset_tags(obj.tags);\n\tset_comments(obj.comments);\n}\n\nfunction populate_carousel(value){\n\tcarouselPhotos = {};\n\tClientEvents.publish(\"thumb-clear\");\n\tloaded = [];\n\t\n\timageIndex = 0;\n\tcarouselIndex = 0;\n\tvar keys = Object.keys(value.data);\n\tvar len = keys.length;\n\tClientEvents.publish(\"file-count-receive\", len);\n\tClientEvents.publish(\"file-index-receive\", 1);\n\tkeys.forEach(function (key, index) {\n\t\t// Add entry to carouselPhotos\n\t\tvar data = map_array_to_carousel_obj(value.data[key]);\n\t\tvar cameraFolder = data.camname.toUpperCase().replace(\" \", \"_\");\n\t\tcarouselPhotos[data.filename] = data;\n\t\t// Send to Image viewer\n\t\tif (index === 0) {\n\t\t\tpopulate_fields(data);\n\t\t}\n\t\t\n\t\tif (index < 10) {\n\t\t\tif (loaded.indexOf(data.filename) === -1) {\n\t\t\t\tloaded.push(data.filename);\n\t\t\t}\n\t\t\tvar packet = {\n\t\t\t\tmethod: \"append\",\n\t\t\t\tsrc: \"/userfiles/photo_processor/\" + data.account + \"/\" + cameraFolder + \"/\" + data.filename + \"-thumb.JPG\",\n\t\t\t\tlabel: new Date(parseInt(data.datetime * 1000)).toLocaleString(\"en-AU\").replace(\",\", \"\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet);\n\t\t}\n\t});\n}\n\nfunction view_image(obj) {\n\tvar dbRec = {};\n\tdbRec.filename = obj.filename;\n\tdbRec.camname = obj.camname;\n\tdbRec.customer = \"\";\n\tdbRec.viewed = \"1\";\n\tvar dbReq = {};\n\tdbReq[obj.filename] = dbRec;\n\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\tif (dbResponse.value == 0) {\n\t\t\tLog.warn(\"Unable to update the viewed status of image. :(\");\n\t\t}\n\t\tvar options = {\n\t\t\tcategory: User.accountid.toUpperCase(),\n\t\t\tclassName: \"TRAIL4G\",\n\t\t\tinstance: obj.camname,\n\t\t\tscope: \"viewed\",\n\t\t\tvalue: \"1\",\n\t\t};\n\t\tScript.publishToChannel(options);\n\t});\n\t//set_viewed(true);\n}\n\nfunction set_filename(name) {\n\tcurrentImage = carouselPhotos[name];\n\tClientEvents.publish(\"filename-receive\", name);\n}\n\nfunction set_favourite(fav) {\n\tif (fav === true) {\n\t\tClientEvents.publish(\"favourite-receive\", \"star-fill\");\n\t\treturn;\n\t}\n\tClientEvents.publish(\"favourite-receive\", \"star\");\n}\n\nfunction favourite_image(img, favourite) {\n\tvar dbRec = {};\n\tdbRec.filename = img;\n\tdbRec.favourite = (favourite === true ? 1 : 0);\n\tdbRec.camname = camname;\n\tdbRec.account = User.accountid;\n\tvar dbReq = {};\n\tdbReq[img] = dbRec;\n\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\tvar key = Object.keys(req)[0];\n\t\tvar entry = req[key];\n\t\tif (dbResponse.value === 0) {\n\t\t\tSystem.status(\"Unable to favourite image '\" + entry.filename + \"'.\");\n\t\t\treturn;\n\t\t}\n\t\tcarouselPhotos[entry.filename].favourite = \"\" + entry.favourite.toString();\n\t\tvar favourite = (entry.favourite === 1 ? true : false);\n\t\tset_favourite(favourite);\n\t});\n}\n\nfunction set_archive(archived) {\n\tif (archived === true) {\n\t\tClientEvents.publish(\"archive-receive\", \"archive-fill\");\n\t\treturn;\n\t}\n\tClientEvents.publish(\"archive-receive\", \"archive\");\n}\n\nfunction archive_image(img, camname, archived) {\n\tvar dbRec = {};\n\tdbRec.filename = img;\n\tdbRec.archive = (archived === true ? 1 : 0);\n\tdbRec.camname = camname;\n\tdbRec.account = User.accountid;\n\n\tvar dbReq = {};\n\tdbReq[img] = dbRec;\n\tDatabase.saveRecordParam(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\t \n\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\tvar key = Object.keys(req)[0];\n\t\tvar entry = req[key];\n\t\t\n\t\t// this here wont ever work update records returns 1 if the record has been inserted, save records param actually returns the last database insrted id, database needs cleaning \n\t\t//if (dbResponse.value === 0) {\n\t\t//\tSystem.status(\"Unable to favourite image '\" + entry.filename + \"'.\");\n\t\t//\treturn;\n\t\t//}\n\t\tcarouselPhotos[entry.filename].archive = entry.archive.toString();\n\t\tvar archived = (entry.archive === 1 ? true : false);\n\t\tset_archive(archived);\n\t});\n\t//set_archive(archived);\n\t//carouselPhotos[img][6] = (archived === true ? \"1\" : \"0\");\n}\n\nfunction download_image(img) {\n\tvar camname = img.camname.toUpperCase().replace(\" \", \"_\");\n\tvar filename = img.filename;\n\tvar vid_file = img.associated_video;\n  var element = document.createElement('a');\n\tif (video) {\n\t\tif (vid_file === \"\") {\n\t\t\treturn;\n\t\t}\n\t\telement.setAttribute('href', \"../userfiles/photo_processor/\" + img.account + \"/\" + camname + \"/\" + vid_file);\n\t} else {\n\t\telement.setAttribute('href', \"/userfiles/photo_processor/\" + img.account +  \"/\" + camname + \"/\" + filename + \".JPG\");\n\t}\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction delete_image(img) {\n\tClient.invokeModal(\"OK\", \"Delete Image\", \"Are you sure you want to delete '\" + img + \"'?\", \"Delete\", \"DELETE\", function (buttonPressed) {\n\t\tif (buttonPressed === true) {\n\t\t\tvar dbRec = {};\n\t\t\tdbRec.filename = img;\n\t\t\tdbRec.deleted = 1;\n\t\t\tdbRec.camname = camname;\n\t\t\tdbRec.account = User.accountid;\n\t\t\tvar dbReq = {};\n\t\t\tdbReq[img] = dbRec;\n\t\t\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n \t\t\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\t\t\tvar key = Object.keys(req)[0];\n\t\t\t\tvar entry = req[key];\n\t\t\t\tif (dbResponse.value === 0) {\n\t\t\t\t\tSystem.status(\"Unable to delete image '\" + entry.filename + \"'.\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//carouselPhotos[entry.filename].deleted = entry.deleted.toString();\n\t\t\t\tget_carousel_images(camname);\n\t\t\t\t//ClientEvents.publish(\"thumb-remove\", carouselIndex);\n\t\t\t\t//delete carouselPhotos[entry.filename];\n\t\t\t\t//Client.status(\"Photo '\" + img + \"' deleted.\", \"IMPORTANT\");\n\t\t\t\t//carouselIndex--;\n\t\t\t\t//imageIndex--;\n\t\t\t\t//populate_fields(carouselPhotos[Object.keys(carouselPhotos)[imageIndex]]);\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction set_tags(tags) {\n\tClientEvents.publish(\"tags-receive\", tags);\n}\n\nfunction set_comments(comments) {\n\tClientEvents.publish(\"comments-receive\", comments);\n}\n\n/**\n * Initialise script state (run once at startup)\n */\nScript.on('load', function() {\n\t\n\tClientEvents.publish(\"video-receive\", \"camera-video\");\n\t\n\tClientEvents.subscribe(\"image-viewer-back-pressed\", function(event) {\n\t\tClient.jumpToScreen(\"Traps Desktop\");\n\t});\n\t\n\tClientEvents.subscribe(\"image-viewer-start-date-change\", dateChange);\n\tClientEvents.subscribe(\"image-viewer-end-date-change\", dateChange);\n\t\n\t//File Index Change\n\tClientEvents.subscribe(\"file-index-change\", function(eventData, channel) {\n\t\tClient.clearDirtyFlag();\n\t\tvar index = parseInt(eventData.value) - 1;\n\t\tif (isNaN(index)) {\n\t\t\tconsole.error(\"index '\" + eventData.value + \"'could not be parsed to an integer\");\n\t\t\treturn;\n\t\t}\n\t\tif (index < 0) {\n\t\t\tconsole.error(\"index '\" + eventData.value + \"' is less than 0\");\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tClientEvents.publish(\"file-index-receive\", index+1);\n\t\t\n\t\tvar fileNames = Object.keys(carouselPhotos);\n\t\t// Clear all slides from carousel\n\t\tClientEvents.publish(\"thumb-clear\", \"\", false);\n\t\tloaded = [];\n\t\t\n\t\tvar j = 0;\n\t\tfor (var i = index - 15; i < index + 15; i++) {\n\t\t\tif (i < 0 || i > fileNames.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (j < 15 && i < index) j++;\n\t\t\tvar cameraFolder = carouselPhotos[fileNames[i]].camname.toUpperCase().replace(\" \", \"_\");\n\t\t\tvar packet = {\n\t\t\t\tmethod: \"append\",\n\t\t\t\tsrc: \"/userfiles/photo_processor/\" + carouselPhotos[fileNames[i]].account + \"/\" + cameraFolder + \"/\" + carouselPhotos[fileNames[i]].filename + \"-thumb.JPG\",\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t}\n\t\timageIndex = index;\n\t\tpopulate_fields(carouselPhotos[fileNames[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-goTo\", j, false);\n\t\t//carouselIndex = 15;\n\t});\n\t\n\t// Filter Selected\n\tClientEvents.subscribe(\"filter-selected\", function (eventData, channel) {\n\t\tvar camname = currentImage.camname;\n\t\tClientEvents.publish(\"image-viewer-start-date-receive\", \"\");\n\t\tClientEvents.publish(\"image-viewer-end-date-receive\", \"\");\n\t\tswitch (eventData.value.toUpperCase()) {\n\t\t\tcase \"FAVOURITE\":\n\t\t\t\tfilter = \"FAVOURITE\";\n\t\t\t\tget_carousel_images(camname, \"favourite=1\");\n\t\t\t\tbreak;\n\t\t\tcase \"ARCHIVED\":\n\t\t\t\tfilter = \"ARCHIVED\";\n\t\t\t\tget_carousel_images(camname, \"archive=1\");\n\t\t\t\tbreak;\n\t\t\tcase \"NOT VIEWED\":\n\t\t\t\tfilter = \"NOT VIEWED\";\n\t\t\t\tget_carousel_images(camname, \"viewed=0\");\n\t\t\t\tbreak;\n\t\t\tcase \"ALL\":\n\t\t\t\tfilter = \"ALL\";\n\t\t\t\tClientEvents.publish(\"filter-reset\");\n\t\t\t\tget_carousel_images(camname);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.error(\"unknown option\");\n\t\t\t\tbreak;\n\t\t}\n\t});\n\t\n\t// Clear Button Pressed\n\tClientEvents.subscribe(\"clear-pressed\", function (eventData, channel) {\n\t\tClientEvents.publish(\"tags-receive\", \"\");\n\t\tClientEvents.publish(\"comments-receive\", \"\");\n\t\tSystem.dirtyFlag(\"set\");\n\t});\n\t\n\t// Download Pressed\n\tClientEvents.subscribe(\"download-pressed\", function (eventData, channel) {\n\t\tdownload_image(currentImage);\n\t});\n\t\n\t// Favourite Pressed\n\tClientEvents.subscribe(\"favourite-pressed\", function (eventData, channel) {\n\t\t \n\t\tvar fav = (currentImage.favourite === \"1\" ? true : false );\n\t\tfavourite_image(currentImage.filename, !fav);\n\t});\n\t\n\t// Archive Pressed\n\tClientEvents.subscribe(\"archive-pressed\", function (eventData, channel) {\n\t\t \n\t\tvar archived = currentImage.archive;\n\t\tarchived = (archived === \"1\" ? true : false);\n\t\tarchive_image(currentImage.filename, currentImage.camname, !archived);\n\t});\n\t\n\t// Delete Pressed\n\tClientEvents.subscribe(\"delete-pressed\", function (eventData, channel) {\n\t\tdelete_image(currentImage.filename);\n\t});\n\t\n\t// Save Pressed\n\tClientEvents.subscribe(\"save-pressed\", function (eventData, channel) {\n\t\t\n\t\tvar formData = Script.getForm(\"image-tagging\");\n\t\tvar dbRec = {};\n\t\tdbRec.filename = currentImage.filename;\n\t\tdbRec.camname = camname;\n\t\tdbRec.account = User.accountid;\n\t\tdbRec.tags = formData[\"image-tags\"];\n\t\tdbRec.comments = formData[\"image-comments\"];\n\t\tvar dbReq = {};\n\t\tdbReq[currentImage.filename] = dbRec;\n\t\tDatabase.updateRecord(\"photos\", \"photos\", dbReq, function (dbResponse) {\n\t\t\t \n\t\t\tvar req = JSON.parse(dbResponse.usrmeta.order);\n\t\t\tvar key = Object.keys(req)[0];\n\t\t\tvar entry = req[key];\n\t\t\tif (dbResponse.value === 0) {\n\t\t\t\tSystem.status(\"Unable to save comments and tags for image '\" + entry.filename + \"'.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tClient.clearDirtyFlag();\n\t\t\tcarouselPhotos[entry.filename].comments = entry.comments;\n\t\t\tcarouselPhotos[entry.filename].tags = entry.tags;\n\t\t});\n\t});\n\t\n\t// Refresh Pressed\n\tClientEvents.subscribe(\"refresh-pressed\", function (eventData, channel) {\n\t\tClientEvents.publish(\"table-clear\");\n\t\tget_table_entries();\n\t});\n\t\n\t// Table Pressed\n\tClientEvents.subscribe(\"table-pressed\", function (eventData, channel) {\n\t\t// Request entries for carousel\n\t\tClientEvents.publish(\"filter-reset\");\n\t\tvar key = Object.keys(eventData.value.data)[0];\n\t\tget_carousel_images(eventData.value.data[key][1]);\n\t});\n\t\n\t// Carousel Thumbnail Pressed\n\tClientEvents.subscribe(\"thumb-pressed\", function (eventData, channel) {\n\t\tvar filename = eventData.value.src.split(\"/\").pop().replace(\"-thumb.JPG\", \"\");\n\t\timageIndex = Object.keys(carouselPhotos).indexOf(filename);\n\t\tpopulate_fields(carouselPhotos[filename]);\n\t\tClientEvents.publish(\"file-index-receive\", imageIndex+1);\n\t});\n\t\n\t//Thumbnail Changed\n\tClientEvents.subscribe(\"thumb-changed\", function (eventData, channel) {\n\t\tif (eventData.value.method === \"goto\") {\n\t\t\treturn;\n\t\t}\n\t\tvar direction = (eventData.value.direction === \"right\" ? \"append\" : \"prepend\");\n\t\timageIndex += eventData.value.step;\n\t\t//if (eventData.value.method !== \"swipe\") {\n\t\t//\tcarouselIndex += event.value.step;\n\t\t//}\n\t\t\n\t\tvar fileNames = Object.keys(carouselPhotos);\n\t\tvar packet;\n\t\tfor (var i = imageIndex; i > imageIndex - 15; i--) {\n\t\t\tif (i < 0 || i > fileNames.length - 1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar cameraFolder = carouselPhotos[fileNames[i]].camname.toUpperCase().replace(\" \", \"_\");\n\t\t\tpacket = {\n\t\t\t\tmethod: direction,\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" + carouselPhotos[fileNames[i]].account + \"/\" + cameraFolder + \"/\" + carouselPhotos[fileNames[i]].filename + \"-thumb.JPG\",\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t\tcarouselIndex++;\n\t\t}\n\t\t\n\t\tfor (i = imageIndex; i < imageIndex + 15; i++) {\n\t\t\t\n\t\t\tif (i < 0 || i > fileNames.length -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (loaded.indexOf(fileNames[i]) !== -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tvar cameraFolder = carouselPhotos[fileNames[i]].camname.toUpperCase().replace(\" \", \"_\");\n\t\t\tpacket = {\n\t\t\t\tmethod: direction,\n\t\t\t\tsrc: \"../userfiles/photo_processor/\" +carouselPhotos[fileNames[i]].account + \"/\" + cameraFolder + \"/\" + carouselPhotos[fileNames[i]].filename + \"-thumb.JPG\",\n\t\t\t\tlabel: new Date(parseInt(carouselPhotos[fileNames[i]].datetime * 1000)).toLocaleString(\"en-AU\"),\n\t\t\t};\n\t\t\tClientEvents.publish(\"thumb-receive\", packet, false);\n\t\t\tloaded.push(fileNames[i]);\n\t\t}\n\t\tif (eventData.value.method !== \"swipe\") {\n\t\t\tClientEvents.publish(\"file-index-receive\", parseInt(imageIndex) + 1);\n\t\t\tpopulate_fields(carouselPhotos[fileNames[imageIndex]]);\n\t\t}\n\t});\n\t\n\t ClientEvents.subscribe(\"video-pressed\", function(eventData, channel) {\n\t\t var photo = currentImage;\n\t\t var cameraFolder = photo.camname.toUpperCase().replace(\" \", \"_\");\n\t\t if (video) {\n\t\t\t video = !video;\n\t\t\t ClientEvents.publish(\"video-receive\", \"camera-video\");\n\t\t\t ClientEvents.publish(\"iamge-set\", \"../userfiles/photo_processor/\" + photo.account + \"/\" + cameraFolder + \"/\" + photo.filename + \"-preview.JPG\");\n\t\t } else {\n\t\t\t video = !video;\n\t\t\t ClientEvents.publish(\"video-receive\", \"camera-video-fill\");\n\t\t\t set_video(photo);\n\t\t }\n\t });\n\t\n\t// ImageViewer Next\n\tClientEvents.subscribe(\"next-pressed\", function(eventData, channel) {\n\t\t//imageIndex++;\n\t\t//populate_fields(carouselPhotos[Object.keys(carouselPhotos)[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-next\");\n\t});\n\t\n\t// ImageViewer Previous\n\tClientEvents.subscribe(\"previous-pressed\", function(eventData, channel) {\n\t\t//imageIndex--;\n\t\t//populate_fields(carouselPhotos[Object.keys(carouselPhotos)[imageIndex]]);\n\t\tClientEvents.publish(\"thumb-previous\");\n\t});\n\t\n\tClientEvents.subscribe(\"date-filter-reset-pressed\", function(eventData, channel) {\n\t\tClientEvents.publish(\"image-viewer-end-date-receive\", \"\");\n\t\tClientEvents.publish(\"image-viewer-start-date-receive\", new Date().toISOString().split(\"T\")[0]);\n\t\tdateChange();\n\t});\n\t\n\t// Request data for carousel\n\tClientEvents.publish(\"image-viewer-start-date-receive\", new Date().toISOString().split(\"T\")[0]);\n\tcamname = Script.getState(\"camera_name\");\n\tif (camname) {\n\t\tClientEvents.publish(\"image-viewer-camera-name-receive\", camname);\n\t\tcamname = camname.toLowerCase();\n\t\tget_carousel_images(camname);\n\t}\n\t\n\tScript.subscribeToChannel(\n\t\t\"IMAGE_VIEWER_TRAP_SUBURB\",\n\t\t{\n\t\t\tcategory: User.accountid.toUpperCase(),\n\t\t\tclassName: \"Trail4G\",\n\t\t\tscope: \"suburb\"\n\t\t}, function(e) {\n\t\t});\n});\n\n/**\n * Response to message from server channel\n */\nScript.on('server', function(eventData, channel) {\n});","import file":"true","file name":"imageViewer.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{"Suburb Data":{"channel":"[accountid]/TRAIL4G/+/SUBURB","event":"feed","important":"false"}}}}},"Table#1":{"t":"Table","lX":20,"lY":100,"sX":5.51,"sY":5.81,"s":"Camera Table","ps":{"enabled":"true","scalingType":"OK","width":"100% - 40px","height":"87.3%","x":"20px","y":"100px"},"ver":"190104c190915","dis":false,"tt":"","a":{"columns":"thumbnail,camera name,datetime,viewed,battery,signal","text color":"#000000","row color":"#000000","colWidths":""},"ev":{"clientEvents":{"inputEvents":{"Receive":{"channel":"camera-table-receive/receive value","event":"receive value","important":"false"},"Clear":{"channel":"camera-table-clear/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Pressed":{"channel":"camera-table-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}},"serverEvents":{"inputEvents":{}}}},"Label#8":{"t":"Label","lX":176,"lY":26,"sX":0.61,"sY":2,"s":"Camera Table","ps":{"enabled":"true","scalingType":"OK","width":"10.26%","height":"50px","x":"25% - 100px","y":"2.06%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"14","label text":"<b><font size=\"6\">Cameras</font></b>","text align":"center"},"ev":{}},"Icon#10":{"t":"Icon","lX":25,"lY":55,"sX":0.67,"sY":0.67,"s":"Camera Table","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"2.26%","height":"2.61%","x":"1.92%","y":"4.59%"},"ver":"200628c190915","dis":false,"tt":"Refresh","a":{"icon file":"arrow-clockwise","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"camera-table-refresh-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"CameraTableController":{"t":"Scripting","lX":0,"lY":0,"sX":1,"sY":1,"s":"Camera Table","ps":{"enabled":"false","scalingType":"NOSCALE","width":"","height":"","x":"","y":""},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"","import file":"true","file name":"cameraTableController.js","subscribe to directory":"true","subscribe to database":"true"},"ev":{"serverEvents":{"inputEvents":{"Trail Cameras":{"channel":"[accountid]/TRAIL4G/+/+","event":"feed","important":"false"}}}}},"PhotoInfoContainer":{"t":"Container","lX":1025,"lY":85,"sX":3.4,"sY":7.1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"14.3%","height":"81.24%","x":"59.01%","y":"9.68%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"title":"Photo Information","color":"grey"},"ev":{}},"BackButton":{"t":"Button","lX":25,"lY":820,"sX":1,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"5.76%","height":"5.26%","x":"1.5%","y":"92.44%"},"ver":"190104c190915","dis":false,"tt":"","a":{"3D shadow":"true","color":"orange strong","button name":"Back"},"ev":{"clientEvents":{"outputEvents":{"Pressed":{"channel":"image-viewer-back-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"CameraNameLabel":{"t":"Label","lX":1040,"lY":45,"sX":3.28,"sY":1,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"OK","width":"13.64%","height":"2.08%","x":"43.73%","y":"3.66%"},"ver":"200124c190915","dis":false,"tt":"","a":{"font size":"15","label text":"<b>Camera Name :&nbsp;[#]</b>"},"ev":{"clientEvents":{"inputEvents":{"Receive Value":{"channel":"image-viewer-camera-name-receive/receive value","event":"receive value","important":"false"}}}}},"Icon#6":{"t":"Icon","lX":615,"lY":40,"sX":0.67,"sY":0.67,"s":"Image Viewer","ps":{"enabled":"false","scalingType":"NOHORIZ,NOVERT","width":"1.96%","height":"3.89%","x":"35.41%","y":"4.35%"},"ver":"200628c190915","dis":false,"tt":"View Video","a":{"icon file":"arrow-repeat","outline color":"no outline","color":"black"},"ev":{"clientEvents":{"inputEvents":{},"outputEvents":{"Pressed":{"channel":"date-filter-reset-pressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Container#0":{"t":"Container","lX":10,"lY":15,"sX":12.73,"sY":9,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"73.03%","height":"105.63%","x":"0.74%","y":"2.25%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Transactions"},"ev":{}},"Table#0":{"t":"Table","lX":30,"lY":120,"sX":12.25,"sY":7.83,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"70.28%","height":"91.9%","x":"1.63%","y":"9.13%"},"ver":"190104c190915","dis":false,"tt":"","a":{"text color":"#000000","row color":"#000000","columns":"date time,nickname,job id,trapper,trap type,state,action,set time,update time,triggered time","selectable":"single","display header":"true","enable search":"true","title":"Transactions","colWidths":"0.10956663941128372,0.107113654946852,0.07686017988552739,0.09975470155355683,0.10057236304170074,0.0874897792313982,0.09403107113654947,0.10139002452984465,0.10629599345870809,0.1169255928045789"},"ev":{"clientEvents":{"inputEvents":{"add records":{"channel":"trans/receive value","event":"receive value","important":"false"},"Sort by Function":{"channel":"sortByFunction/sort by function","event":"sort by function","important":"false"},"Delete Row":{"channel":"trans-delete-rows/delete rows","event":"delete rows","important":"false"},"New Event #1":{"channel":"deleteAllRows/delete all rows","event":"delete all rows","important":"false"}},"outputEvents":{"Row selected":{"channel":"rowSelected/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"Scripting#0":{"t":"Scripting","lX":115,"lY":900,"sX":1,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"5.74%","height":"11.31%","x":"59.38%","y":"23.76%"},"ver":"200124c190915","vis":false,"dis":false,"tt":"","a":{"script type":"javascript","code editor":"//# sourceURL=transaction-script.js\n/**\n * Description: \n * Create Author/Date: \n * Modified Author/Date Date: \n * Version: \n */\n\n/**\n * Initialise script state (run once at startup)\n */\n var columns = ['inc', 'id', 'jobid', 'cardType','trapper', 'traptype', 'state', 'action', 'settime', 'checktime','updatetime', 'triggeredtime', 'date'];\n var columnNicks = ['inc', 'nickname', 'job id', 'card type','trapper', 'trap type', 'state', 'action', 'set time', 'check time', 'update time', 'triggered time', 'date time'];\n var intervalMap = {\"week\": -7,\n\t\t\t\t\t\"month\": -30,\n\t\t\t\t\t\"3months\": -90,\n\t\t\t\t\t\"year\": -365};\n var transactionData = null;\n Script.on('load', function() {\n\n     let downloadBtn = Script.getWidget(\"downloadBtn\");\n     downloadBtn.subscribe(\"pressed\", (eventData) => {\n        Script.downloadCSV(\"transaction_data.csv\", transactionData);\n     });\n\n\n     Database.readRecords(\"traps\", \"transactions\", function(data) {\t\t \n         transactionData = SensaCollection.load(data.value);\n\n         updateTable();\t\n     }, {\n         filter: \"date BETWEEN datetime('now', '-6 days') AND datetime('now', 'localtime')\"\n         //filter: \"LIMIT 100\"\n     });\n     \n     ClientEvents.subscribe(\"rowSelected\", function(data) {\n         // get id\n         var col = SensaCollection.load(data.value);\n         \n         var id = col.getFirst().inc;\n         var obj = transactionData.get(id);\n \n         obj.state = obj.state == 0? obj.state = \"unassigned\" :  1 ? \"set\": obj.state == 2 ? \"triggered\": \"\";\n         obj.setDate = obj.settime !== \"\" ? new Date(parseInt(obj.settime)).toISOString().split('T')[0] : \"\"; // must go before time otherwise gets overwritten\n         obj.settime = obj.settime !== \"\" ? formatTime(obj.settime).split(\"<br />\")[0] : \"\";\n         obj.checkDate = obj.checktime !== \"\" ? new Date(parseInt(obj.checktime)).toISOString().split('T')[0] : \"\";\n         obj.checktime = obj.checktime !== \"\" ? formatTime(obj.checktime).split(\"<br />\")[0] : \"\";\n         obj.updateDate = obj.updatetime !== \"\" ? new Date(parseInt(obj.updatetime)).toISOString().split('T')[0] : \"\";\n         obj.updatetime = obj.updatetime !== \"\" ? formatTime(obj.updatetime).split(\"<br />\")[0] : \"\";\n         obj.triggeredDate = obj.triggeredtime !== \"\" ? new Date(parseInt(obj.triggeredtime)).toISOString().split('T')[0] : \"\";\n         obj.triggeredtime = obj.triggeredtime !== \"\" ? formatTime(obj.triggeredtime).split(\"<br />\")[0] : \"\";\n         obj.temp = obj.temp.split('&')[0];\n         \n         Script.clearForm(\"tran\");\n         Script.setForm(\"tran\", obj);\t\n     });\n\t \n\t ClientEvents.subscribe(\"intervalSet\", function(timeData) {\n\t\tDatabase.readRecords(\"traps\", \"transactions\", function(data) {\n\t\t\t transactionData = SensaCollection.load(data.value);\n\n\t\t\t updateTable();\t\n\t\t }, {\n\t\t\t filter: `date BETWEEN datetime('now', '${intervalMap[timeData.value]} days') AND datetime('now', 'localtime')`\n\t\t\t //filter: \"LIMIT 100\"\n\t\t }); \n\t });\n     \n     ClientEvents.subscribe(\"deleteRow\", function(eventData) {\n         var formData = Script.getFormByKey(\"tran\");\n         var pk = formData.inc;\n         \n         // Delete from database.\n         Database.deleteRecord(\"traps\", \"transactions\", \"inc\", pk, function(response) {\n             if (response.value == 1) {\n                 Client.notify(\"Transaction Deleted\", {\n                     body: \"Transaction was successfully deleted on the server.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             } else {\n                 Client.notify(\"Transaction Failed\", {\n                     body: \"Transaction failed to delete the server.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Red.png\"\n                 });\n             }\n             transactionData.remove(pk);\n             ClientEvents.publish(\"trans-delete-rows\", [pk]);\n             //updateTable();\n             \n         });\n     });\n     \n     ClientEvents.subscribe(\"downloadBtn\", function(eventData) {\n         \n     });\n     \n     ClientEvents.subscribe(\"saveBtnPressed\", function(eventData) {\n          \n         var formData = Script.getFormByKey(\"tran\");\t\t\t\t\n         var pk = formData.inc;\n         \n         // join time and dates.\n         if (formData.settime !== \"\") {\n             if(formData.setDate !== \"\")\n             {\n                 formData.settime = new Date(formData.setDate + \"T\" + formData.settime).getTime();\n             }\n             else\n             {\n                 Client.notify(\"Transaction Error\", {\n                     body: \"Please set date for the selected time.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             }\n         }\n          \n         \n         if (formData.updatetime !== \"\")\n         {\n             if(formData.updateDate !== \"\")\n             {\n                 formData.updatetime = new Date(formData.updateDate + \"T\" + formData.updatetime).getTime();\n             }\n             else\t\n             {\n                 Client.notify(\"Transaction Error\", {\n                     body: \"Please set update date for the selected time.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             }\n         }\n         \n         if (formData.checktime !== \"\") \n         {\n             if(formData.checkDate !== \"\")\n             {\n                 formData.checktime = new Date(formData.checkDate + \"T\" + formData.checktime).getTime();\n             }\n             else\n             {\n                 Client.notify(\"Transaction Error\", {\n                     body: \"Please set check date for the selected time.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             }\n         }\n         \n         if (formData.triggeredtime !== \"\")\n         {\n             if(formData.triggeredDate !== \"\")\n             {\n                 formData.triggeredtime = new Date(formData.triggeredDate + \"T\" + formData.triggeredtime).getTime();\n             }\n             else\n             {\n                 Client.notify(\"Transaction Error\", {\n                     body: \"Please set triggered date for the selected time.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             }\n         }\n         \n         // convert set state\n         switch(formData.state.toLowerCase()) {\n             case \"set\":\n                 formData.state = '1';\n                 break;\n             case \"unassigned\":\n                 formData.state = '0';\n                 break;\n             case \"triggered\":\n                 formData.state = '2';\n                 break;\n             default:\n                 formData.state = \"\";\n         }\n         \n         // Remove date objects form\n         delete formData.setDate;\n         delete formData.checkDate;\n         delete formData.updateDate;\n         delete formData.triggeredDate;\n           \n         // Write to database.\n         //We check if the file is assigned otherwise it errors out when we check if it contains a value and is not an empty object\n          if(formData.file !== undefined)\n         {\n             if(Object.keys(formData.file).length === 0) // Check if the file is not an empty object {} otherwise it breaks the json in the SensaCollection when running the sql query.\n             {\n                 formData.file = \"\";\n             }\n         }\n         var dbRequest = {};\n         dbRequest[pk] = formData;\n         Database.saveRecord(\"traps\", \"transactions\", dbRequest, function(response) {\n             if (response.value == 1) {\n                 Client.notify(\"Transaction Updated\", {\n                     body: \"Transaction was successfully updated on the server.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Green.png\"\n                 });\n             } else {\n                 Client.notify(\"Transaction Failed\", {\n                     body: \"Transaction failed to update the server.\",\n                     icon: \"/userfiles/Animal-Trap-Icon-Red.png\"\n                 });\n             }\n         });\t\n         \n         var origData = transactionData.get(pk);\n         origData = Object.assign(origData, formData);\n         transactionData.set(origData);\n         Script.clearForm(\"tran\");\n         \n         var col = transactionData.filter(transactionData.columns, [pk]);\n         updateTable(col);\n     });\n     \n });\n \nfunction tableSortingFunction(a,b) {\n    a = a.children[0].innerHTML;\n    b = b.children[0].innerHTML;\n    a = a.split(\"<br>\")[1].split(\"/\").reverse().join('') + a.split(\"<br>\")[0].split(\":\");\n    b = b.split(\"<br>\")[1].split(\"/\").reverse().join('') + b.split(\"<br>\")[0].split(\":\");\n    return a < b ? 1 : a > b ? -1 : 0;\n}\n\n \n function formatTime(utcTime) {\n     var date = new Date(parseInt(utcTime)).toLocaleString('en-GB');\n     var d = date.split(\", \");\n     var d0 = d[0].split(\"/\");\n     d0[2] = Math.abs(d0[2] - 2000);\n     d0 = d0.join(\"/\");\n     return d[1] + \"<br />\" + d0;\n }\n \n function updateTable(col) {\n\t\t // Clear all rows\n\t\t ClientEvents.publish(\"deleteAllRows\", \"\");\n         // Update table\n         var columns = ['inc', 'id', 'jobid', 'cardType','trapper', 'traptype', 'state', 'action', 'settime', 'checktime','updatetime', 'triggeredtime', 'date'];\n         var col2;\n  \n         if (typeof col === \"undefined\") {\n             col2 = transactionData.filter(columns);\n         } else {\n             col2 = col.filter(columns);\n         }\n         col2.setColumns(columnNicks);\n         \n         col2.forEach(function(row, pk) {\n             \n             var stateText = \"\";\n             if (row.state) {\n                 switch (row.state) {\n                     case '0':\n                         stateText = \"unassigned\";\n                         break;\n                     case '1':\n                         stateText = \"set\";\n                         break;\n                     case '2': \n                         stateText = \"triggered\";\n                         break;\n                     default:\n                         formData.state = \"\";\n                 }\n             }\n              \n             var updateObj = {\n                 \"inc\": row['inc'],\n                 \"set time\": row['set time'] !== \"\" ? formatTime(row['set time']) : \"\",\n                 \"check time\": row['check time'] !== \"\" ? formatTime(row['check time']) : \"\",\n                 \"update time\": row['update time'] !== \"\" ? formatTime(row['update time']) : \"\",\n                 \"triggered time\": row['triggered time'] !== \"\" ? formatTime(row['triggered time']) : \"\",\n                 \"date time\": row['date time'] !== \"\" ? formatTime(new Date(row['date time'] + \"Z\").getTime()) : \"\",\n                 \"state\": stateText\n             };\n             \n             \n             col2.set(updateObj);\n         });\n         \n         ClientEvents.publish(\"trans\", col2);\n\t\t ClientEvents.publish(\"sortByFunction\", {sortFunction: tableSortingFunction, col: \"date time\"});\t\t \n }","file name":"transactionsScript.js","subscribe to directory":"true","subscribe to database":"true","import file":"true"},"ev":{"serverEvents":{"inputEvents":{}}}},"Container#1":{"t":"Container","lX":1290,"lY":15,"sX":3.9,"sY":3.85,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"22.38%","height":"43.55%","x":"81.56%","y":"1.33%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"General Information"},"ev":{}},"Container#2":{"t":"Container","lX":1290,"lY":400,"sX":3.9,"sY":3.4,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"22.38%","height":"39.91%","x":"81.61%","y":"43.14%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Time Information"},"ev":{}},"Container#3":{"t":"Container","lX":1680,"lY":570,"sX":3.9,"sY":1.7,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"22.38%","height":"19.95%","x":"81.61%","y":"43.58%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Sensor Information"},"ev":{}},"Container#4":{"t":"Container","lX":1680,"lY":15,"sX":3.9,"sY":2.25,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"18.02%","height":"25.45%","x":"81.56%","y":"72.72%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Location Information"},"ev":{}},"Container#5":{"t":"Container","lX":1680,"lY":235,"sX":3.9,"sY":3.4,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"22.38%","height":"38.46%","x":"130.45%","y":"155.69%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Catch Information"},"ev":{}},"Container#6":{"t":"Container","lX":1290,"lY":740,"sX":7.8,"sY":1.75,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"44.75%","height":"20.54%","x":"74.01%","y":"87.09%"},"ver":"190104c190915","z":"110","dis":false,"tt":"","a":{"color":"grey","title":"Actions"},"ev":{}},"Button#0":{"t":"Button","lX":1945,"lY":805,"sX":1,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"4.62%","height":"5.2%","x":"94.04%","y":"127.99%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"orange strong","button name":"Save"},"ev":{"clientEvents":{"outputEvents":{"Save":{"channel":"saveBtnPressed/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"idInput":{"t":"Input","lX":1305,"lY":55,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.21%","y":"9.74%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"ID","form key":"id"},"ev":{}},"jobIdInput":{"t":"Input","lX":1490,"lY":55,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"7.93%","x":"90.8%","y":"9.74%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Job ID","form key":"jobid"},"ev":{}},"cardTypeInput":{"t":"Input","lX":1305,"lY":110,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"13.67%","height":"6%","x":"131.71%","y":"25.45%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Card Type","form key":"cardType"},"ev":{}},"stateInput":{"t":"Input","lX":1305,"lY":165,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.21%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"State","form key":"state"},"ev":{}},"actionInput":{"t":"Input","lX":1490,"lY":165,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"90.9%","y":"15.15%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Action","form key":"action"},"ev":{}},"transTrapTypeInput":{"t":"Input","lX":1490,"lY":110,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6.06%","x":"90.9%","y":"15.15%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Trap Type","form key":"traptype"},"ev":{}},"transTrapNotesInput":{"t":"Text Area","lX":1310,"lY":275,"sX":3.6,"sY":1.15,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"20.65%","height":"13.01%","x":"102.48%","y":"39.82%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Trap Notes","placeholder":"General trap notes...","form id":"tran","form key":"notes"},"ev":{}},"transSetTimeInput":{"t":"Input","lX":1310,"lY":460,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.58%","y":"46.5%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Set Time","type":"time","form key":"settime"},"ev":{}},"transCheckTimeInput":{"t":"Input","lX":1310,"lY":520,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"8.08%","x":"82.58%","y":"46.5%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Check Time","type":"time","form key":"checktime"},"ev":{}},"transUpdateTimeInput":{"t":"Input","lX":1310,"lY":580,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.58%","y":"46.5%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Update Time","type":"time","form key":"updatetime"},"ev":{}},"transTriggeredTimeInput":{"t":"Input","lX":1310,"lY":640,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"8.21%","x":"82.49%","y":"51.73%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Triggered Time","type":"time","form key":"triggeredtime"},"ev":{}},"transBatteryInput":{"t":"Input","lX":1695,"lY":610,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Battery Level","form key":"battery"},"ev":{}},"transSignalInput":{"t":"Input","lX":1880,"lY":610,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"90.94%","y":"61.2%"},"ver":"270520c190915","z":"110","dis":false,"tt":"","a":{"form id":"tran","label text":"Signal Strength","form key":"signal"},"ev":{}},"transSensorBatteryInput":{"t":"Input","lX":1695,"lY":665,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Sensor Battery Level","form key":"sensorbattery"},"ev":{}},"transTempInput":{"t":"Input","lX":1880,"lY":665,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"90.99%","y":"66.7%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Temperature","form key":"temp"},"ev":{}},"transLatInput":{"t":"Input","lX":1695,"lY":55,"sX":1.8,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"10.33%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Latitude","form key":"lat"},"ev":{}},"transLonInput":{"t":"Input","lX":1875,"lY":55,"sX":1.8,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"10.33%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Longitude","form key":"lon"},"ev":{}},"transStreetInput":{"t":"Input","lX":1695,"lY":110,"sX":3.6,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"16.64%","height":"6%","x":"82.72%","y":"81.22%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Street","form key":"address"},"ev":{}},"transSuburbInput":{"t":"Input","lX":1695,"lY":165,"sX":3.6,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"16.64%","height":"6%","x":"82.72%","y":"81.22%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Suburb","form key":"suburb"},"ev":{}},"transAnimalInput":{"t":"Input","lX":1695,"lY":270,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Animal Caught","form key":"animaltype"},"ev":{}},"transSubspeciesInput":{"t":"Input","lX":1875,"lY":270,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.35%","y":"20.46%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Subspecies","form key":"subspecies"},"ev":{}},"transSexInput":{"t":"Input","lX":1875,"lY":325,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"91.04%","y":"104.34%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Sex","form key":"sex"},"ev":{}},"transAgeInput":{"t":"Input","lX":1695,"lY":325,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"13.67%","height":"6%","x":"132.3%","y":"169.91%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Age","form key":"age"},"ev":{}},"transLureInput":{"t":"Input","lX":1695,"lY":380,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"13.67%","height":"6%","x":"132.3%","y":"177.99%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Lure","form key":"lure"},"ev":{}},"transCatchNotesInput":{"t":"Text Area","lX":1695,"lY":435,"sX":3.6,"sY":1.3,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"16.64%","height":"14.71%","x":"82.62%","y":"111.16%"},"ver":"190104c190915","dis":false,"tt":"","a":{"label text":"Catch Notes","placeholder":"No catch notes...","form id":"tran","form key":"catchnotes"},"ev":{}},"setDateInput":{"t":"Input","lX":1495,"lY":460,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.58%","y":"46.5%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Set Date","type":"date","form id":"tran","form key":"setDate"},"ev":{}},"checkDateInput":{"t":"Input","lX":1495,"lY":520,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.58%","y":"46.5%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Check Date","type":"date","form id":"tran","form key":"checkDate"},"ev":{}},"updateDateInput":{"t":"Input","lX":1495,"lY":580,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"13.67%","height":"6%","x":"145.6%","y":"96.26%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Update Date","type":"date","form id":"tran","form key":"updateDate"},"ev":{}},"triggeredDateInput":{"t":"Input","lX":1495,"lY":640,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"8.55%","height":"6%","x":"82.49%","y":"51.73%"},"ver":"270520c190915","dis":false,"tt":"","a":{"label text":"Triggered Date","type":"date","form id":"tran","form key":"triggeredDate"},"ev":{}},"transDeleteButton":{"t":"Button","lX":1830,"lY":805,"sX":1,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"4.62%","height":"6.89%","x":"94.04%","y":"127.99%"},"ver":"190104c190915","dis":false,"tt":"","a":{"color":"black","button name":"Delete"},"ev":{"clientEvents":{"outputEvents":{"Delete Row":{"channel":"deleteRow/receive value","event":"pressed","trigger":"pressed","important":"false"}}}}},"tranTrapper":{"t":"Input","lX":1490,"lY":220,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"10.65%","height":"6.06%","x":"102.71%","y":"33.41%"},"ver":"270520c190915","dis":false,"tt":"","a":{"form id":"tran","label text":"Trapper","form key":"trapper"},"ev":{}},"incInput":{"t":"Input","lX":1320,"lY":750,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"10.61%","height":"6%","x":"76.19%","y":"85.97%"},"ver":"270520c190915","vis":false,"dis":false,"tt":"","a":{"form id":"tran","label text":"inc","form key":"inc","disable editing":"true","disable spellcheck":"true"},"ev":{}},"downloadBtn":{"t":"Button","lX":1310,"lY":810,"sX":1.85,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"OK","width":"7.76%","height":"3.7%","x":"54.93%","y":"64.31%"},"ver":"190104c210519","dis":false,"tt":"","a":{"color":"green","button name":"Download Data"},"ev":{}},"PickSlider#0":{"t":"PickSlider","lX":10,"lY":65,"sX":6.22,"sY":1,"s":"Transactions","ps":{"enabled":"false","scalingType":"NOVERT","width":"71.43%","height":"5.72%","x":"14.34%","y":"102.23%"},"ver":"190104c210519","dis":false,"tt":"","a":{"tick values":"week,month,3months,year","default value":"week"},"ev":{"clientEvents":{"outputEvents":{"Interval Set":{"channel":"intervalSet/receive value","event":"changed","trigger":"changed","important":"false"}}}}}},"screens":{"Traps Desktop":{"index":0,"icon":"widgets","meta":""},"Image Viewer":{"index":1,"icon":"image","meta":""},"Camera Table":{"index":2,"icon":"camera_alt","meta":""},"Transactions":{"index":3,"icon":"widgets","meta":""}},"meta":""}